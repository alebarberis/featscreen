% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8-filter-functions.R
\name{rowFilterByAboveMedianRatio}
\alias{rowFilterByAboveMedianRatio}
\title{Filter by Above-Median Frequency Ratio}
\usage{
rowFilterByAboveMedianRatio(x, g = NULL, min.prop = 0.5)
}
\arguments{
\item{x}{\code{matrix} or \code{data.frame}, where rows are features and columns are observations.}

\item{g}{(optional) vector or factor object giving the group for the corresponding
elements of \code{x}.}

\item{min.prop}{numerical value in the range \eqn{[0, 1]}. Minimum proportion of
samples where the feature expression is above the median. Default to \code{0.5}.}
}
\value{
A logical vector of length \code{nrow(x)} indicating which rows of
\code{x} passed the filter.
}
\description{
This function filters the input matrix \code{x} depending on the
features' intensity.
Variables are removed if their values are lower than the medians computed
across features in a given percentage of samples defined by \code{min.prop}.

See the \strong{Details} section below for further information.
}
\details{
For each observation, the median across \eqn{n} features is computed as:

\deqn{Median = x_\frac{(n+1)}{2}}

where \eqn{x} is an ascendingly ordered vector of \eqn{n} elements, and \eqn{n}
is odd. If \eqn{n} is even, then the median is computed as:

\deqn{Median = \frac{x_\frac{n}{2}+x_{\frac{(n)}{2}+1}}{2}}

If \code{g = NULL}, for each feature we define an above-median frequency ratio (AMFR) as the
number of times the feature value is greater than the sample median divided
by the total number of observations:

\deqn{Above-Median Frequency Ratio (AMFR) = \frac{Number of samples where feature is above the sample median}{Total number of observations}}

Finally, the i-th feature is kept if \eqn{AMFR_{i} >= min.prop}.

If \code{g} is provided, the above-median frequency ratio (\eqn{AMFR_{ij}}) is
computed for each group \eqn{j}.
The i-th feature is kept if \eqn{AMFR_{ij} >= min.prop} for at least one group.
}
\examples{
#Seed
set.seed(1010)

#Define row/col size
nr = 5
nc = 10

#Data
x = matrix(
 data = sample.int(n = 100, size = nr*nc, replace = TRUE),
 nrow = nr,
 ncol = nc,
 dimnames = list(
   paste0("f",seq(nr)),
   paste0("S",seq(nc))
 )
)

#Grouping variable
g = c(rep("a", nc/2), rep("b", nc/2))

#Filter
rowFilterByAboveMedianRatio(x)

#Filter by group
rowFilterByAboveMedianRatio(x = x, g = g)

}
\author{
Alessandro Barberis
}
