% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8-filter-functions.R
\name{rowFilterByMissingValueRatio}
\alias{rowFilterByMissingValueRatio}
\title{Filter by Missing Value Ratio}
\usage{
rowFilterByMissingValueRatio(x, g = NULL, max.prop = 0.5)
}
\arguments{
\item{x}{\code{matrix} or \code{data.frame}, where rows are features and columns are observations.}

\item{g}{(optional) vector or factor object giving the group for the corresponding
elements of \code{x}.}

\item{max.prop}{numerical value in the range \eqn{[0, 1]}. Maximum proportion of
samples with missing values. Default to \code{0.5}.}
}
\value{
A logical vector of length \code{nrow(x)} indicating which rows of
\code{x} passed the filter.
}
\description{
This function filters the input matrix \code{x} depending on the
presence of missing values.
A variable is removed if the ratio of missing elements is greater than a given
percentage defined by \code{max.prop}.

See the \strong{Details} section below for further information.
}
\details{
If \code{g = NULL}, for each feature a missing value ratio (MVR) is computed as:

\deqn{Missing Value Ratio (MVR) = \frac{Number of missing values}{Total number of observations}}

Then, the i-th feature is kept if \eqn{MVR_{i} < max.prop}.

If \code{g} is provided, the missing value ratios \eqn{MVR_{ij}} are computed
for each group \eqn{j}.

Then, the i-th feature is kept if \eqn{MVR_{ij} < max.prop} for each group.
}
\examples{
#Seed
set.seed(1010)

#Define row/col size
nr = 5
nc = 10

#Data
x = matrix(
 data = sample(x = c(1,2), size = nr*nc, replace = TRUE),
 nrow = nr,
 ncol = nc,
 dimnames = list(
   paste0("f",seq(nr)),
   paste0("S",seq(nc))
 )
)

#Grouping variable
g = c(rep("a", nc/2), rep("b", nc/2))

#Force 1st feature to have 40\% of missing values
x[1,seq(nc*0.4)] = NA

#Filter a feature if has more than 50\% of missing values
rowFilterByMissingValueRatio(x = x, max.prop = 0.5)

#Filter a feature if has more than 30\% of missing values
rowFilterByMissingValueRatio(x = x, max.prop = 0.3)

#Set 3rd feature to have 40\% of missing values for each class
x[3,seq(nc*0.4)] = NA
x[3,(seq(nc*0.4)+nc/2)] = NA

#Filter a feature if has more than 50\% of missing values
rowFilterByMissingValueRatio(x = x, max.prop = 0.5)

#Filter a feature if has more than 50\% of missing values in any group
rowFilterByMissingValueRatio(x = x, max.prop = 0.5, g = g)

}
\author{
Alessandro Barberis
}
