[{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"An introduction to `featscreen`","text":"featscreen versatile user-friendly package designed simplify process supervised unsupervised feature screening R. cornerstone featscreen ?screen function, can used effortlessly perform three screening steps: Computation Statistic: Harness power various statistical techniques compute relevant measures, allowing gain insights relationships characteristics features. Aggregation Results Multi-Response Data: scenarios data involves multiple responses, results step 1 aggregated selection. Selection Features Keep: Features retained based screening results. package offers range common options feature selection. Ready dive ? Let’s walk steps using featscreen perform first feature screening analysis.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"An introduction to `featscreen`","text":"Firstly, load featscreen needed packages:","code":"library(featscreen) #>  #> Attaching package: 'featscreen' #> The following objects are masked from 'package:stats': #>  #>     mad, sd #> The following object is masked from 'package:graphics': #>  #>     screen"},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"seed","dir":"Articles","previous_headings":"","what":"Seed","title":"An introduction to `featscreen`","text":"Now want set seed random number generation (RNG). fact, different R sessions different seeds created current time process ID default, consequently different simulation results. fixing seed ensure able reproduce results vignette. can specify seed calling ?set.seed.","code":"#Set a seed for RNG set.seed(   #A seed   seed = 5381L,                   #a randomly chosen integer value   #The kind of RNG to use   kind = \"Mersenne-Twister\",      #we make explicit the current R default value   #The kind of Normal generation   normal.kind = \"Inversion\"       #we make explicit the current R default value )"},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"computation-of-the-statistic","dir":"Articles","previous_headings":"","what":"1. Computation of the Statistic","title":"An introduction to `featscreen`","text":"initial step feature screening process involves computation statistic utilized subsequent feature selection. featscreen offers diverse range supervised unsupervised screening techniques. can explore currently supported screening methods calling ?listAvailableScreeningMethods function. function returns table least two columns: id: unique identifier screening method, used function calls. name: name screening method.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"screening-methods","dir":"Articles","previous_headings":"1. Computation of the Statistic","what":"Screening Methods","title":"An introduction to `featscreen`","text":"view list currently supported supervised screening methods, use ?listAvailableScreeningMethods function x parameter set supervised: Similarly, can use x parameter show unsupervised methods:","code":"#list screening methods screening.methods = listAvailableScreeningMethods(x = 'supervised')  #print in table knitr::kable(x = screening.methods, align = 'rc') #list screening methods screening.methods = listAvailableScreeningMethods(x = 'unsupervised')  #print in table knitr::kable(x = screening.methods, align = 'rc')"},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"screening-functions","dir":"Articles","previous_headings":"1. Computation of the Statistic","what":"Screening Functions","title":"An introduction to `featscreen`","text":"name screening functions can retrieved calling ?listAvailableScreeningFunctions. , can use x parameter show supervised methods: Similarly, can use x parameter show unsupervised methods: function documented. learn specific method possible use ? operator. example, let’s check function ?rowPearsonCor. documentation, can see wrapper function internally calls ?row_cor_pearson matrixTests package. accepts four arguments input: x: matrix data frame. y: numerical vector. alternative: alternative hypothesis row x. conf.level: confidence levels intervals. Let’s compute Pearson’s correlation row matrix using function: function returns list two elements: statistic: vector containing values correlation coefficient t-test statistic. significance: vector containing p-values correlation coefficient t-test.","code":"#list screening functions screening.functions = listAvailableScreeningFunctions(x = 'supervised')  #print in table knitr::kable(x = screening.functions, align = 'rc') #list screening functions screening.functions = listAvailableScreeningFunctions(x = 'unsupervised')  #print in table knitr::kable(x = screening.functions, align = 'rc') #See documentation ?rowPearsonCor #Data x = matrix(rnorm(10 * 20), 10, 20) y = rnorm(20)  #Compute rowPearsonCor(x = x, y = y) #> $statistic #>  [1]  1.55424671 -3.21135119 -0.48824958 -0.62940963  0.01709722 -1.30914381 #>  [7] -1.07986577  1.11138904 -0.42259796  0.39229005 #>  #> $significance #>  [1] 0.137531731 0.004840161 0.631267786 0.536988472 0.986547148 0.206952421 #>  [7] 0.294459519 0.281026013 0.677593887 0.699450166"},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"aggregation-of-results","dir":"Articles","previous_headings":"","what":"2. Aggregation of Results","title":"An introduction to `featscreen`","text":"featscreen provides straightforward function named ?multiresponse aggregation results multi-response data. Let’s explore function: documentation, learn function accepts three arguments: x: matrix containing values combine. max: Keep maximum value across responses. min: Keep minimum value across responses. avg: Average values. sum: Sum values. idx: Return column indicated argument idx. idx: optional integer value string indicating column x keep.","code":"#See documentation ?multiresponse"},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"selection-of-features","dir":"Articles","previous_headings":"","what":"3. Selection of Features","title":"An introduction to `featscreen`","text":"final step feature screening process involves selection features retain based computed statistics.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"selection-methods","dir":"Articles","previous_headings":"3. Selection of Features","what":"Selection Methods","title":"An introduction to `featscreen`","text":"name selection methods can retrieved calling ?listAvailableSelectionMethods: featscreen provides five selection strategies: cutoff: Features selected cutoff values. rank: Features selected based ranking. percentile: Features selected percentile highest values. fpr: Features selected cutoff false positive rates. fdr: Features selected cutoff false discovery rates.","code":"#list selection methods selection.methods = listAvailableSelectionMethods()  #print in table knitr::kable(x = selection.methods, align = 'rc')"},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"selection-functions","dir":"Articles","previous_headings":"3. Selection of Features","what":"Selection Functions","title":"An introduction to `featscreen`","text":"name selection functions can retrieved calling ?listAvailableSelectionFunctions. function documented. learn specific method possible use ? operator. example, let’s check function ?selectByCutoff. documentation, can see function accepts three arguments input: x: numerical vector. cutoff: cutoff use selection. operator: string indicating relational operator use. Let’s select elements vector using function. reported documentation, function returns logical vector length input vector, indicating elements retain.","code":"#list selection functions selection.functions = listAvailableSelectionFunctions()  #print in table knitr::kable(x = selection.functions, align = 'rc') #See documentation ?selectByCutoff #Select by Cutoff selectByCutoff(   x = seq_len(10),   cutoff = 3,   operator = \"<\" ) #>  [1]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"screen-function","dir":"Articles","previous_headings":"","what":"screen Function","title":"An introduction to `featscreen`","text":"Rather using individual screening functions, can streamline process using ?screen function. function provides unified interface various screening methods, incorporating three steps screening process.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"parameters","dir":"Articles","previous_headings":"screen Function","what":"Parameters","title":"An introduction to `featscreen`","text":"parameters input : x: Either matrix data frame rows represent features, columns represent observations. y: Numeric vector data values. g: (Optional) Vector specifying group corresponding elements x. method: One supported screening techniques. See ?listAvailableScreeningMethods. ...: Additional arguments screening function. multi: Strategy adopt case multi-response data. idx: (Optional) Integer value character string indicating column x keep. select.: selection method use. select.args: named list containing arguments passed selecting function.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"output","dir":"Articles","previous_headings":"screen Function","what":"Output","title":"An introduction to `featscreen`","text":"function returns object class ?featscreen, representing set screened features.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"featscreen-s3-class","dir":"Articles","previous_headings":"","what":"featscreen S3 Class","title":"An introduction to `featscreen`","text":"featscreen class represents set screened features. featscreen object list consisting eight elements: method: id used screening method. multi: id used multi-response aggregation method. selection: id used selection method. summary: textual summary screening. n: dimension feature space. features: feature names. keep: features keep. ranks: feature ranks. Functions facilitate access data stored featscreen object available: ?getScreeningMethodId: Returns screening method id. ?getMultiresponseAggregationMethodId: Returns multi-response aggregation method id. ?getSelectionMethodId: Returns selection method id. ?getSummary: Returns textual summary screening. ?getFeatureDimensionality: Returns dimension feature space. ?getFeatureNames: Returns feature names. ?getScreenedFeatures: Returns features keep. ?getFeatureRanks: Returns feature ranks. Another useful function print: ?print.featscreen: Print summary featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"feature-screening","dir":"Articles","previous_headings":"","what":"Feature Screening","title":"An introduction to `featscreen`","text":"Now let’s use ?screen function subset feature space using unsupervised screening method. First, let’s create data. common unsupervised screening step remove feature number missing elements exceeds defined cutoff.","code":"#Define row/col size nr = 100 nc = 20  #Data x = matrix(   data = sample(x = c(1,2), size = nr*nc, replace = TRUE),   nrow = nr,   ncol = nc,   dimnames = list(     paste0(\"feature\",seq(nr)),     paste0(\"S\",seq(nc))   ) )  #Define grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Force 1st feature to have 40% of missing values x[1,seq(nc*0.4)] = NA"},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"select-screening-function","dir":"Articles","previous_headings":"Feature Screening","what":"1. Select Screening Function","title":"An introduction to `featscreen`","text":"look table returned ?listAvailableScreeningMethods, can see id feature selection missing value ratio missing.value. Looking table returned ?listAvailableScreeningFunctions, can see function corresponding missing.value ?rowMissingValueRatio. documentation, can see function accepts two arguments input: x: matrix data frame, rows features columns observations g: optional grouping vector factor g provided, function returns matrix missing-value ratios group column vectors. Let’s start building call. can use missing.value method argument ?screen. provide example multi-response aggregation, also provide g argument ellipsis (.e., three dots).","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"choose-aggregation-strategy","dir":"Articles","previous_headings":"Feature Screening","what":"2. Choose aggregation strategy","title":"An introduction to `featscreen`","text":"aggregation strategy choose keep maximum value across responses. can providing max multi argument ?screen.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"select-selection-function","dir":"Articles","previous_headings":"Feature Screening","what":"3. Select Selection Function","title":"An introduction to `featscreen`","text":"Now defined screening function aggregation strategy, need identify selection method. use function ?selectByCutoff. want filter features 50% missing values, can providing list containing cutoff operator select.args argument ?screen.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"run","dir":"Articles","previous_headings":"Feature Screening","what":"4. Run!","title":"An introduction to `featscreen`","text":"Now let’s select features: can check returned object class featscreen: Now, print summary:","code":"#Filter a feature if has more than 50% of missing values obj = screen(   x           = x,   g           = g,   method      = \"missing.value\",   multi       = \"max\",   select.by   = \"cutoff\",   select.args = list(cutoff = 0.5, operator = \"<\") ) #Is obj of class `featscreen`? is.featscreen(obj) #> [1] TRUE #Print print(x = obj, show.top = F) #>  #> 99 out of 100 features selected by a cutoff (< 0.5) on the missing #> value ratio."},{"path":"https://alebarberis.github.io/featscreen/articles/featscreen.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"An introduction to `featscreen`","text":"Congratulations! ’ve successfully completed first feature screening analysis. continue explore package, refer documentation detailed information screening method additional customization options. Start featscreen journey today unlock full potential efficient effective feature screening R!","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Supervised screening methods","text":"realm data analysis, supervised feature screening emerges pivotal process, guiding selection relevant features enhance predictive modeling classification accuracy. featscreen empowers analysts data scientists providing comprehensive suite ready--use functions tailored supervised feature screening. traditional correlation-based methods sophisticated statistical approaches Cox Proportional-Hazard models survival data, featscreen aims bridge gap complex methodologies user-friendly implementation. article explore different supervised feature screening methods supported featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Supervised screening methods","text":"Firstly, load featscreen needed packages:","code":"library(featscreen) #>  #> Attaching package: 'featscreen' #> The following objects are masked from 'package:stats': #>  #>     mad, sd #> The following object is masked from 'package:graphics': #>  #>     screen"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"seed","dir":"Articles","previous_headings":"","what":"Seed","title":"Supervised screening methods","text":"Now want set seed random number generation (RNG). fact, different R sessions different seeds created current time process ID default, consequently different simulation results. fixing seed ensure able reproduce results vignette. can specify seed calling ?set.seed.","code":"#Set a seed for RNG set.seed(   #A seed   seed = 5381L,                   #a randomly chosen integer value   #The kind of RNG to use   kind = \"Mersenne-Twister\",      #we make explicit the current R default value   #The kind of Normal generation   normal.kind = \"Inversion\"       #we make explicit the current R default value )"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"screening-methods","dir":"Articles","previous_headings":"","what":"Screening Methods","title":"Supervised screening methods","text":"view list currently supported supervised screening methods, use ?listAvailableScreeningMethods function x parameter set supervised:","code":"#list screening methods screening.methods = listAvailableScreeningMethods(x = 'supervised')  #print in table knitr::kable(x = screening.methods, align = 'rc')"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"correlation","dir":"Articles","previous_headings":"Screening Methods","what":"Correlation","title":"Supervised screening methods","text":"Correlation analysis plays fundamental role understanding relationships variables context supervised feature screening. provides quantitative measure strength direction associations, helping identify features may contribute significantly predictive models. featscreen supports various correlation methods, catering different data characteristics analytical needs.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"pearsons-correlation","dir":"Articles","previous_headings":"Screening Methods > Correlation","what":"Pearson’s Correlation","title":"Supervised screening methods","text":"Pearson’s correlation widely-used measure assesses linear relationships features target variable. Represented correlation coefficient r, method quantifies extent two variables change together. coefficient ranges -1 1, -1 indicates perfect negative linear relationship, 1 denotes perfect positive linear relationship, 0 signifies linear correlation. Pearson’s correlation sensitive outliers assumes linear relationship variables. Pearson’s correlation computed featscreen calling function ?rowPearsonCor. documentation, can see wrapper function internally calls ?row_cor_pearson matrixTests package. Let’s explore practical example illustrate application Pearson’s correlation.","code":"#Data x = matrix(rnorm(10 * 20), 10, 20) y = rnorm(20)  #Compute rowPearsonCor(x = x, y = y) #> $statistic #>  [1]  1.55424671 -3.21135119 -0.48824958 -0.62940963  0.01709722 -1.30914381 #>  [7] -1.07986577  1.11138904 -0.42259796  0.39229005 #>  #> $significance #>  [1] 0.137531731 0.004840161 0.631267786 0.536988472 0.986547148 0.206952421 #>  [7] 0.294459519 0.281026013 0.677593887 0.699450166"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"spearmans-correlation","dir":"Articles","previous_headings":"Screening Methods > Correlation","what":"Spearman’s Correlation","title":"Supervised screening methods","text":"Spearman’s correlation non-parametric measure evaluates monotonic relationships variables. ranking data values assessing correlation ranks, Spearman’s correlation provides robust alternative Pearson’s correlation, especially presence outliers non-linear patterns. resulting coefficient, denoted rho, ranges -1 1, extreme values indicate strong monotonic relationships. featscreen, Spearman’s correlation computed calling function ?rowSpearmanCor. documentation, can see wrapper function internally calls ?cor.test stats package. Let see example.","code":"#Data x = matrix(rnorm(10 * 20), 10, 20) y = rnorm(20)  #Compute rowSpearmanCor(x = x, y = y) #> $statistic #>  [1] 2004 1418 1582 1022 1114 1254 1376  770 1502 1542 #>  #> $significance #>  [1] 0.02410399 0.78197196 0.42194872 0.32438799 0.49229843 0.81146975 #>  [7] 0.88623825 0.06578794 0.58563682 0.50046206"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"kendalls-correlation","dir":"Articles","previous_headings":"Screening Methods > Correlation","what":"Kendall’s Correlation","title":"Supervised screening methods","text":"Kendall’s correlation another non-parametric method assessing correlation. Similar Spearman’s correlation, based ranking data. measures similarity ordering data pairs two variables, making suitable ordinal data less sensitive outliers. Kendall’s coefficient, denoted tau, ranges -1 1, negative values indicating negative association, positive values signifying positive association, 0 representing association. featscreen, Kendall’s correlation computed calling function ?rowKendallCor. documentation, can see wrapper function internally calls ?cor.test stats package. Let see example.","code":"#Data x = matrix(rnorm(10 * 20), 10, 20) y = rnorm(20)  #Compute rowKendallCor(x = x, y = y) #> $statistic #>  [1]  88  81  73 121  77 112  74 117  63  96 #>  #> $significance #>  [1] 0.67710824 0.38585715 0.16497641 0.09833022 0.25983999 0.28837820 #>  [7] 0.18588304 0.16497641 0.03976214 0.97446690"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"two-sample-tests","dir":"Articles","previous_headings":"Screening Methods","what":"Two-Sample Tests","title":"Supervised screening methods","text":"Two-sample tests indispensable tools supervised feature screening, offering insights differences two groups data. featscreen incorporates range two-sample tests, catering diverse scenarios assumptions. Whether examining mean differences parametric tests assessing variations medians non-parametric tests, methods play pivotal role uncovering significant distinctions groups, contributing identification influential features within feature space.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"two-sample-students-t-test","dir":"Articles","previous_headings":"Screening Methods > Two-Sample Tests","what":"Two-Sample Student’s t-Test","title":"Supervised screening methods","text":"Two-Sample Student’s t-Test parametric method used assess whether means two groups significantly different. applicable data follow normal distribution. t-test results t-statistic p-value, helping analysts determine statistical significance observed differences. Two-sample t-tests can divided : Unpaired two-samples t-tests Paired two-samples t-tests","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"unpaired-samples","dir":"Articles","previous_headings":"Screening Methods > Two-Sample Tests > Two-Sample Student’s t-Test","what":"Unpaired Samples","title":"Supervised screening methods","text":"T-tests provide invaluable insights differences two independent groups. featscreen supports unpaired two-sample t-tests, offering flexibility handle scenarios equal unequal variances. class t-tests particularly applicable comparing means two groups observation one group independent .","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"equal-variance-t-test","dir":"Articles","previous_headings":"","what":"Supervised screening methods","title":"Supervised screening methods","text":"Equal Variance T-Test, often referred traditional pooled t-test, assumes variances two groups compared equal. test suitable data groups follow normal distribution exhibit homogeneity variances. featscreen supports Equal Variance T-Test ?rowEqualVarT function. documentation, can see wrapper function internally calls ?row_t_equalvar matrixTests package.","code":"#Data x = matrix(rnorm(10 * 20), 10, 20) # Assuming 'group1' and 'group2' are indicating independent measurements g = c(rep('group1',10),rep('group2',10))  #Compute rowEqualVarT(x = x, g = g) #> $statistic #>  [1]  0.004667386 -0.600050691 -0.524350283 -0.158893662 -1.482498596 #>  [6] -0.461348953 -0.034249081 -0.471759890  0.923177678 -1.557724376 #>  #> $significance #>  [1] 0.9963273 0.5559521 0.6064326 0.8755219 0.1555043 0.6500745 0.9730555 #>  [8] 0.6427664 0.3681249 0.1367066"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"unequal-variance-t-test","dir":"Articles","previous_headings":"","what":"Supervised screening methods","title":"Supervised screening methods","text":"Unequal Variance T-Test, also known Welch’s T-Test, employed assumption equal variances met. test robust scenarios variances two groups differ. Unequal Variance T-Test available featscreen ?rowUnequalVarT function. documentation, can see wrapper function internally calls ?row_t_welch matrixTests package.","code":"#Data x = cbind(   matrix(rnorm(n = 10 * 10, mean = 1, sd = 2), 10, 10),   matrix(rnorm(n = 10 * 10, mean = 3, sd = 4), 10, 10) ) # Assuming 'group1' and 'group2' are indicating independent measurements g = c(rep('group1',10),rep('group2',10))  #Compute rowUnequalVarT(x = x, g = g) #> $statistic #>  [1] -2.2405783 -2.2538213  0.1452079  0.9806682 -2.9989363 -0.8862154 #>  [7] -3.6757116 -1.3743303 -2.4372740 -6.4725307 #>  #> $significance #>  [1] 4.587359e-02 4.293420e-02 8.870308e-01 3.473898e-01 1.174654e-02 #>  [6] 3.894469e-01 3.692485e-03 1.946094e-01 2.910688e-02 4.101379e-05"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"paired-samples","dir":"Articles","previous_headings":"Screening Methods > Two-Sample Tests > Two-Sample Student’s t-Test","what":"Paired Samples","title":"Supervised screening methods","text":"paired t-test variant available situations measurements paired, repeated measurements subjects matched pairs subjects. variant t-test assesses whether mean difference paired observations statistically different zero. paired t-test particularly useful experimental designs subject subjected two different conditions, treatments, time points, goal determine whether significant change within pair. instance, clinical trials, paired t-test may applied assess efficacy treatment comparing measurements taken treatment group individuals. featscreen, paired t-test computed calling function ?rowPairedT. documentation, can see wrapper function internally calls ?row_t_paired matrixTests package. Let see example. example, paired t-test applied assess whether significant difference measurements taken treatment intervention. Users can adapt approach various domains, providing powerful means exploring paired data within supervised feature screening process.","code":"#Data x = matrix(rnorm(10 * 20), 10, 20) # Assuming 'before' and 'after' are indicating paired measurements g = c(rep('before',10),rep('after',10))  #Compute rowPairedT(x = x, g = g) #> $statistic #>  [1] -0.70249807  0.24745281 -0.37887763 -0.26889905 -2.09181818  0.61294897 #>  [7]  0.04841629 -0.04692657 -0.34187150 -0.31344754 #>  #> $significance #>  [1] 0.50013315 0.81011060 0.71356227 0.79407000 0.06598845 0.55508069 #>  [7] 0.96244188 0.96359655 0.74029490 0.76108331"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"two-sample-wilcoxons-signed-rank-test","dir":"Articles","previous_headings":"Screening Methods > Two-Sample Tests","what":"Two-Sample Wilcoxon’s Signed-Rank Test","title":"Supervised screening methods","text":"Two-Sample Wilcoxon’s Signed-Rank Test non-parametric alternative t-test, suitable situations assumption normality violated. test assesses whether distribution differences paired observations differs significantly zero. particularly robust outliers variations shape distribution, making valuable option scenarios non-normally distributed data. featscreen, wilcoxon signed-rank test computed calling function ?rowPairedWilcoxonT. documentation, can see wrapper function internally calls ?row_wilcoxon_paired matrixTests package.","code":"#Data x = matrix(rnorm(10 * 20), 10, 20) # Assuming 'before' and 'after' are indicating paired measurements g = c(rep('before',10),rep('after',10))  #Compute rowWilcoxonT(x = x, g = g) #> $statistic #>  [1] 82 54 74 65 45 45 50 30 51 61 #>  #> $significance #>  [1] 0.01468964 0.79593626 0.07525601 0.27986101 0.73936435 0.73936435 #>  [7] 1.00000000 0.14314014 0.97051246 0.43587218"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"two-sample-mann-whitney-u-test","dir":"Articles","previous_headings":"Screening Methods > Two-Sample Tests","what":"Two-Sample Mann-Whitney U-Test","title":"Supervised screening methods","text":"Two-Sample Mann-Whitney U-Test (also known Wilcoxon Rank-Sum Test) extends Wilcoxon test independent samples, allowing analysts evaluate whether distributions two groups differ significantly. non-parametric test suitable situations assumptions normality met, providing effective tool feature screening diverse datasets. Mann-Whitney U-Test results U-statistic p-value, aiding determination statistical significance groups. featscreen, Wilcoxon rank-sum test computed calling function ?rowWilcoxonT. documentation, can see wrapper function internally calls ?row_wilcoxon_twosample matrixTests package.","code":"#Data x = matrix(rnorm(10 * 20), 10, 20) # Assuming 'before' and 'after' are indicating independent measurements g = c(rep('before',10),rep('after',10))  #Compute rowWilcoxonT(x = x, g = g) #> $statistic #>  [1] 43 60 56 55 15 54 59 67 51 47 #>  #> $significance #>  [1] 0.630528914 0.481250947 0.684210526 0.739364351 0.006841456 0.795936262 #>  [7] 0.528848860 0.217562623 0.970512460 0.853428305"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"comparing-multiple-groups","dir":"Articles","previous_headings":"Screening Methods","what":"Comparing Multiple Groups","title":"Supervised screening methods","text":"Comparing multiple groups crucial aspect supervised feature screening, allowing analysts discern variations feature behavior across different categorical experimental conditions. featscreen integrates diverse statistical methods tailored comparisons, accommodating scenarios varying assumptions data characteristics. Whether exploring mean differences ANOVA, assessing median disparities non-parametric tests, examining categorical associations Chi-Square Test, featscreen provides comprehensive suite tools unravel nuanced patterns within feature space.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"one-way-analysis-of-variance-f-test","dir":"Articles","previous_headings":"Screening Methods > Comparing Multiple Groups","what":"One-way Analysis of Variance F-Test","title":"Supervised screening methods","text":"One-way Analysis Variance (ANOVA) F-Test stands fundamental parametric method designed comparing means across two independent groups. statistical test addresses question whether significant differences means distinct groups, making versatile tool analyzing experimental data multiple categorical conditions levels. ANOVA relies assumption normality homogeneity variances among groups. F-Test results F-statistic p-value, enabling analysts make informed decisions statistical significance observed differences means. featscreen supports ANOVA equal unequal variance.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"equal-variance-anova","dir":"Articles","previous_headings":"Screening Methods > Comparing Multiple Groups > One-way Analysis of Variance F-Test","what":"Equal Variance ANOVA","title":"Supervised screening methods","text":"Equal Variance ANOVA used assess mean differences among multiple independent groups. variant ANOVA, also known traditional pooled ANOVA, assumes homogeneity variances normality within group. featscreen, pooled one-way analysis variance test computed calling function ?rowEqualVarOneWayAnova. documentation, can see wrapper function internally calls ?row_oneway_equalvar matrixTests package.","code":"#Data x = matrix(rnorm(10 * 20), 10, 20) # Assuming 'before' and 'after' are indicating independent measurements g = c(rep('before',10),rep('after',10))  #Compute rowEqualVarOneWayAnova(x = x, g = g) #> $statistic #>  [1] 10.19316848  0.03225024  0.04230048  0.06552166  2.00635238  0.59021632 #>  [7]  0.01912477  0.42145581  0.14022777  0.11147536 #>  #> $significance #>  [1] 0.005043041 0.859485661 0.839356234 0.800874877 0.173715440 0.452297572 #>  [7] 0.891544743 0.524409445 0.712429816 0.742328966"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"unequal-variance-anova","dir":"Articles","previous_headings":"Screening Methods > Comparing Multiple Groups > One-way Analysis of Variance F-Test","what":"Unequal Variance ANOVA","title":"Supervised screening methods","text":"Unequal Variance ANOVA, also known Welch’s ANOVA, accommodates scenarios variances among groups differ, offering robust approach homogeneity variances assumed. featscreen, one-way analysis variance test Welch correction computed calling function ?rowUnequalVarOneWayAnova. documentation, can see wrapper function internally calls ?row_oneway_welch matrixTests package.","code":"#Data x = cbind(   matrix(rnorm(n = 10 * 10, mean = 1, sd = 2), 10, 10),   matrix(rnorm(n = 10 * 10, mean = 3, sd = 4), 10, 10) ) # Assuming 'before' and 'after' are indicating independent measurements g = c(rep('before',10),rep('after',10))  #Compute rowUnequalVarOneWayAnova(x = x, g = g) #> $statistic #>  [1] 0.006616130 4.551030128 3.854863607 0.708377597 1.118078432 0.224635260 #>  [7] 1.821935578 0.001472292 0.821963664 0.015927117 #>  #> $significance #>  [1] 0.93674061 0.05482032 0.06530365 0.41674366 0.31000755 0.64494599 #>  [7] 0.19982402 0.96992567 0.38033507 0.90118277"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"kruskal-wallis-test","dir":"Articles","previous_headings":"Screening Methods > Comparing Multiple Groups","what":"Kruskal-Wallis Test","title":"Supervised screening methods","text":"non-parametric alternative ANOVA, Kruskal-Wallis test applied assumption normality met analyzing ordinal data. test evaluates whether distributions two independent groups differ significantly. Kruskal-Wallis Test results chi-square statistic p-value, offering robust approach scenarios parametric assumptions may violated. featscreen, Kruskal-Wallis H-test computed calling function ?rowKruskalWallis. documentation, can see wrapper function internally calls ?row_kruskalwallis matrixTests package.","code":"#Data x = cbind(   matrix(rnorm(n = 10 * 10, mean = 1, sd = 2), 10, 10),   matrix(rnorm(n = 10 * 10, mean = 3, sd = 4), 10, 10) ) # Assuming 'before' and 'after' are indicating independent measurements g = c(rep('before',10),rep('after',10))  #Compute rowUnequalVarOneWayAnova(x = x, g = g) #> $statistic #>  [1]  1.071701  3.756477  1.446872  1.520712  0.582938  2.292538  1.062549 #>  [8]  5.109783  6.530679 16.376850 #>  #> $significance #>  [1] 0.325304467 0.073453691 0.253354235 0.239221847 0.456458177 0.160090799 #>  [7] 0.320451489 0.041018406 0.027682348 0.001356772"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"chi-square-test","dir":"Articles","previous_headings":"Screening Methods > Comparing Multiple Groups","what":"Chi-Square Test","title":"Supervised screening methods","text":"Chi-Square Test investigates associations categorical variables, providing statistical basis feature selection contingency tables. featscreen, Pearson’s Chi-squared test computed calling function ?rowPearsonChiSq. documentation, can see wrapper function internally calls ?chisq.test stats package. example showcases application Chi-Square Test using contingency table two categorical features: ‘mutation status’ ‘sex’. test results include Chi-Square statistic p-value, providing analysts insights significance associations categorical variables across different groups.","code":"#Data ## Matrix with 2 features: 'mutation status' and 'sex' x = rbind(    matrix(sample(c(\"mut\", \"wt\"),30,TRUE), 1, 30),    matrix(sample(c(\"m\", \"f\")   ,30,TRUE), 1, 30) ) g = sample(c(\"a\",\"b\",\"c\"), 30, replace = TRUE)  #Compute rowPearsonChiSq(x = x, g = g, simulate.p.value = TRUE) #> $statistic #> [1] 1.574598 1.715343 #>  #> $significance #> [1] 0.5192404 0.4582709"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"survival-data","dir":"Articles","previous_headings":"Screening Methods","what":"Survival Data","title":"Supervised screening methods","text":"Survival data analysis occupies distinctive realm within feature screening, focusing time--event outcomes. many fields, including medical research epidemiology, understanding duration particular event occurs crucial.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"cox-ph-regression-coefficient-z-test","dir":"Articles","previous_headings":"Screening Methods > Survival Data","what":"Cox PH Regression Coefficient z-test","title":"Supervised screening methods","text":"Survival analysis often employs Cox Proportional-Hazard (PH) models, powerful statistical approach understanding impact covariates time event. featscreen, Cox PH Regression Coefficient Z-Test used assessing significance regression coefficients context survival data. Within featscreen, Cox Proportional-Hazard regression coefficient Z-Test executed ?rowCoxPH function. documentation, can see function serves wrapper, internally calling ?coxph survival package. example showcases application Cox PH Regression Coefficient Z-Test featscreen, using simulated survival data. results include z-statistics p-values, aiding analysts discerning significance individual features influencing time--event outcomes.","code":"#Data x = matrix(rnorm(10 * 7), 10, 7) y = data.frame(    time = c(4,3,1,1,2,2,3),    status = c(1,1,1,0,1,1,0) )  #Compute rowCoxPH(x = x, y = y) #> $statistic #>  [1] 4.6493152 0.8127091 1.5519850 2.2382765 0.6912241 0.4545558 2.7561108 #>  [8] 1.4729205 0.4579275 1.4901095 #>  #> $significance #>  [1] 0.05461149 0.77957911 0.44449927 0.16312546 0.46587119 0.17767696 #>  [7] 0.11668917 0.53995856 0.29448808 0.47456875"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"bio-statistical-functions","dir":"Articles","previous_headings":"Screening Methods","what":"Bio-statistical Functions","title":"Supervised screening methods","text":"pursuit understanding complex biological data, continuous efforts refine statistical techniques, aiming better model intricacies inherent bioinformatic datasets. bio-statistical functions can play crucial role feature screening.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"empirical-bayes-moderated-tests","dir":"Articles","previous_headings":"Screening Methods > Bio-statistical Functions","what":"Empirical Bayes Moderated Tests","title":"Supervised screening methods","text":"tests offer robust approach detecting differentially expressed features gene expression data arising microarray RNA-seq technologies. Particularly, take advantage limma R package. Renowned effectiveness gene expression analysis, limma employs linear modeling fit model systematic part data, paving way robust statistical inference. basic statistic used significance analysis moderated t-statistic, interpretation ordinary t-statistic except standard errors moderated across genes, .e., squeezed towards common value, using simple Bayesian model. reported limma user guide: Moderated t-statistics lead p-values way ordinary t-statistics except degrees freedom increased, reflecting greater reliability associated smoothed standard errors. effectiveness moderated t approach demonstrated test data sets differential expression status probe known. featscreen, empirical Bayes moderated t-statistics computed calling function ?rowEBayesStatistics. documentation, can see wrapper function internally calls different functions limma package: voom: (optional) transform count data linear modelling. lmFit: linear model fitting feature. contrasts.fit: compute coefficients standard errors given set contrasts. eBayes: compute moderated moderated t-/F-statistic. topTable: summarise linear model fit.","code":"#Define row/col size nr = 20 nc = 20  #Data x = matrix(   data = stats::rnorm(n = nr*nc),   nrow = nr,   ncol = nc,   dimnames = list(     paste0(\"g\",seq(nr)),     paste0(\"S\",seq(nc))   ) ) #Categorical output vector (multinomial) y = sample(x = c(\"I\",\"II\",\"III\"),size=nc,replace=TRUE) names(y) = paste0(\"S\",seq(nc))  #Compute rowEBayesStatistics(x=x,y=y) #> $statistic #>  [1] 1.0137223 0.4925825 1.9615795 0.3904325 0.5573581 3.5581814 1.5763334 #>  [8] 0.4406250 0.2684814 1.2074018 0.4657751 0.7166232 0.2134995 0.3921002 #> [15] 1.4700849 0.8278437 0.5124011 1.1684151 0.6404147 0.5607559 #>  #> $significance #>  [1] 0.38532148 0.68741566 0.11735461 0.75989623 0.64316005 0.01362243 #>  [7] 0.19275114 0.72394529 0.84816445 0.30525490 0.70616183 0.54188990 #> [13] 0.88710173 0.75869384 0.22043643 0.47827473 0.67371081 0.32008245 #> [19] 0.58891259 0.64088326"},{"path":"https://alebarberis.github.io/featscreen/articles/supervised.html","id":"sam-permutation-test","dir":"Articles","previous_headings":"Screening Methods > Bio-statistical Functions","what":"SAM Permutation Test","title":"Supervised screening methods","text":"Significance Analysis Microarrays (SAM) permutation test powerful tool identifying features significant expression changes microarray data. proposed Tusher, Tibshirani Chu (Tusher, Tibshirani, Chu 2001). take advantage samr R package. reported SAM user guide: input SAM gene expression measurements set microarray experiments, well response variable experiment. response variable may grouping like untreated, treated (either unpaired paired), multiclass grouping (like breast cancer, lymphoma, colon cancer), quantitative variable (like blood pressure) possibly censored survival time. SAM computes statistic di gene , measuring strength relationship gene expression response variable. uses repeated permutations data determine expression genes significantly related response. cutoff significance determined tuning parameter delta, chosen user based false positive rate. One can also choose fold change parameter, ensure called genes change least pre-specified amount. featscreen, SAM permutation test computed calling function ?rowSamStatistics. documentation, can see wrapper function internally calls three functions samr package: samr: correlate feature outcome variable. samr.compute.delta.table: compute thresholds, cutpoints, false discovery rates SAM analysis. samr.compute.siggenes.table: compute SAM statistics significance.","code":"#Define row/col size nr = 20 nc = 20  #Data x = matrix(   data = stats::rnorm(n = nr*nc),   nrow = nr,   ncol = nc,   dimnames = list(     paste0(\"g\",seq(nr)),     paste0(\"S\",seq(nc))   ) ) #Categorical output vector (multinomial) y = sample(x = c(1,2,3),size=nc,replace=TRUE) names(y) = paste0(\"S\",seq(nc))  #Compute rowSamStatistics(x=x,y=y) #> $statistic #>  [1]  0.421  0.026 -0.085  0.533 -0.766 -1.037  0.341 -0.169  0.966  0.322 #> [11]  0.115 -0.227  0.005 -0.021 -0.760 -0.087  0.533 -0.045 -0.344  0.406 #>  #> $significance #>  [1] 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 #> [20] 0.8"},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Unupervised screening methods","text":"Unsupervised feature screening empowers users uncover hidden insights identify influential features without relying explicit target labels. Unsupervised methods operate inherent structure data, allowing unbiased examination feature characteristics. selectively retaining features exhibit specific behaviors, unsupervised screening aids reducing dimensionality datasets, facilitating focused analyses. featscreen provides different methods catering range scenarios, handling missing values exploring variability ratios, providing flexibility addressing diverse data challenges. article explore different unsupervised feature screening methods supported featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Unupervised screening methods","text":"Firstly, load featscreen needed packages:","code":"library(featscreen) #>  #> Attaching package: 'featscreen' #> The following objects are masked from 'package:stats': #>  #>     mad, sd #> The following object is masked from 'package:graphics': #>  #>     screen"},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"seed","dir":"Articles","previous_headings":"","what":"Seed","title":"Unupervised screening methods","text":"Now want set seed random number generation (RNG). fact, different R sessions different seeds created current time process ID default, consequently different simulation results. fixing seed ensure able reproduce results vignette. can specify seed calling ?set.seed.","code":"#Set a seed for RNG set.seed(   #A seed   seed = 5381L,                   #a randomly chosen integer value   #The kind of RNG to use   kind = \"Mersenne-Twister\",      #we make explicit the current R default value   #The kind of Normal generation   normal.kind = \"Inversion\"       #we make explicit the current R default value )"},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"screening-methods","dir":"Articles","previous_headings":"","what":"Screening Methods","title":"Unupervised screening methods","text":"view list currently supported supervised screening methods, use ?listAvailableScreeningMethods function x parameter set unsupervised:","code":"#list screening methods screening.methods = listAvailableScreeningMethods(x = 'unsupervised')  #print in table knitr::kable(x = screening.methods, align = 'rc')"},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"missing-value-ratio","dir":"Articles","previous_headings":"","what":"Missing-Value Ratio","title":"Unupervised screening methods","text":"missing-value-ratio method targets features based proportion missing values contain. statistic allows users set threshold, filtering features surpass specified percentage missing data. , analysts can identify features might lack sufficient information meaningful analysis. employ missing-value ratio method featscreen, ?rowMissingValueRatio function utilized. might interested know missing value ratio per group. ?rowFilterByMissingValueRatio ready--use filter function.","code":"#Define row/col size nr = 5 nc = 10  #Data x = matrix(   data = sample(x = c(1,2), size = nr*nc, replace = TRUE),   nrow = nr,   ncol = nc,   dimnames = list(     paste0(\"f\",seq(nr)),     paste0(\"S\",seq(nc))   ) )  #Force 1st feature to have 40% of missing values x[1,seq(nc*0.4)] = NA  #Compute rowMissingValueRatio(x = x) #>  f1  f2  f3  f4  f5  #> 0.4 0.0 0.0 0.0 0.0 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowMissingValueRatio(x = x, g = g) #>      a b #> f1 0.8 0 #> f2 0.0 0 #> f3 0.0 0 #> f4 0.0 0 #> f5 0.0 0 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowFilterByMissingValueRatio(   x = x,    g = g,   # Maximum proportion of samples with missing values   max.prop = 0.5 ) #>    f1    f2    f3    f4    f5  #> FALSE  TRUE  TRUE  TRUE  TRUE"},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"threshold-based-selection","dir":"Articles","previous_headings":"","what":"Threshold-Based Selection","title":"Unupervised screening methods","text":"Common unsupervised screening strategies based feature values. statistics allow users set threshold, filtering features values defined cutoff. Typically applied gene expression data, rule motivated notion gene must exhibit minimal level expression biologically relevant. commonly used cut-median expression genes sample. refinement includes retaining features surpass threshold specified number samples.","code":""},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"above-median-frequency-ratio","dir":"Articles","previous_headings":"Threshold-Based Selection","what":"Above-Median Frequency Ratio","title":"Unupervised screening methods","text":"unsupervised screening approach can instrumental isolating features showcasing distinct behavior relative samples’ central tendency. technique allows users define threshold based median value, thereby retaining features -median characteristics. -median frequency ratio computed featscreen calling function ?rowAboveMedianFreqRatio. might interested know -median frequency ratio per group. ?rowFilterByAboveMedianRatio ready--use filter function.","code":"#Define row/col size nr = 5 nc = 10  #Data x = matrix(   data = sample.int(n = 100, size = nr*nc, replace = TRUE),   nrow = nr,   ncol = nc,   dimnames = list(     paste0(\"f\",seq(nr)),     paste0(\"S\",seq(nc))   ) )  #Compute rowAboveMedianFreqRatio(x = x) #>  f1  f2  f3  f4  f5  #> 0.6 0.7 0.7 0.5 0.5 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowAboveMedianFreqRatio(x = x, g = g) #>      a   b #> f1 0.6 0.6 #> f2 0.6 0.8 #> f3 0.8 0.6 #> f4 0.6 0.4 #> f5 0.4 0.6 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowFilterByAboveMedianRatio(   x = x,    g = g,   # Minimum proportion of samples where the feature expression is above the median   min.prop = 0.5 ) #>   f1   f2   f3   f4   f5  #> TRUE TRUE TRUE TRUE TRUE"},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"above-minimum-frequency-ratio","dir":"Articles","previous_headings":"Threshold-Based Selection","what":"Above-Minimum Frequency Ratio","title":"Unupervised screening methods","text":"-minimum ratio method focuses features values surpassing defined minimum threshold. Users can set minimum value, retaining features exhibit behaviors specified limit. -minimum frequency ratio computed featscreen calling function ?rowAboveMinFreqRatio. might interested know -minimum frequency ratio per group. ?rowFilterByAboveMinRatio ready--use filter function.","code":"#Define row/col size nr = 5 nc = 10  #Data x = matrix(   data = sample.int(n = 100, size = nr*nc, replace = TRUE),   nrow = nr,   ncol = nc,   dimnames = list(     paste0(\"f\",seq(nr)),     paste0(\"S\",seq(nc))   ) )  #Compute rowAboveMinFreqRatio(x = x, min.expr = 20) #>  f1  f2  f3  f4  f5  #> 0.9 0.7 1.0 0.8 0.8 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowAboveMinFreqRatio(x = x, min.expr = 20, g = g) #>      a   b #> f1 1.0 0.8 #> f2 0.8 0.6 #> f3 1.0 1.0 #> f4 1.0 0.6 #> f5 0.6 1.0 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowFilterByAboveMinRatio(   x = x,    g = g,   # Minimum expression required   min.expr = 60,   # Minimum proportion of samples where the feature expression is above the min   min.prop = 0.5 ) #>    f1    f2    f3    f4    f5  #>  TRUE FALSE  TRUE FALSE  TRUE"},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"median-values","dir":"Articles","previous_headings":"Threshold-Based Selection","what":"Median Values","title":"Unupervised screening methods","text":"Commonly used gene expression data, median value used indication level expression. motivated notion gene must exhibit minimal level expression biologically relevant. median values computed featscreen calling function ?rowMedians. might interested know median value per group. ?rowFilterByMedianAboveMinExpr ready--use filter function.","code":"#Define row/col size nr = 5 nc = 10  #Data x = matrix(   data = sample.int(n = 100, size = nr*nc, replace = TRUE),   nrow = nr,   ncol = nc,   dimnames = list(     paste0(\"f\",seq(nr)),     paste0(\"S\",seq(nc))   ) )  #Compute rowMedians(x = x) #>   f1   f2   f3   f4   f5  #> 53.0 84.5 52.0 55.0 75.0 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowMedians(x = x, g = g) #>     a  b #> f1 55 51 #> f2 59 86 #> f3 42 53 #> f4 19 57 #> f5 84 59 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowFilterByMedianAboveMinExpr(   x = x,    g = g,   # Median minimum expression required   min.expr = 60 ) #>    f1    f2    f3    f4    f5  #> FALSE  TRUE FALSE FALSE  TRUE"},{"path":"https://alebarberis.github.io/featscreen/articles/unsupervised.html","id":"variability-based-selection","dir":"Articles","previous_headings":"","what":"Variability-Based Selection","title":"Unupervised screening methods","text":"Another commonly used unsupervised screening strategy based feature variability, .e., features showing higher variability across samples prioritized. rationale genes substantial variability may capture interesting variations linked experimental conditions (e.g., drug administration). Variability can measured using standard deviation, interquartile range, median absolute deviation. -minimum frequency ratio computed featscreen calling function ?rowVariability. Five measures variability available: sd: standard deviation. iqr: interquartile range. mad: median absolute deviation. rsd: relative standard deviation (.e., coefficient variation). efficiency: coefficient variation squared. vmr: variance--mean ratio. can provide type measure want use method argument ?rowVariability. might interested know variability per group. ?rowFilterByLowVariability ready--use filter function.","code":"#Define row/col size nr = 5 nc = 10  #Data x = matrix(   data = sample.int(n = 100, size = nr*nc, replace = TRUE),   nrow = nr,   ncol = nc,   dimnames = list(     paste0(\"f\",seq(nr)),     paste0(\"S\",seq(nc))   ) )  #Compute rowVariability(x = x, method = 'sd') #>       f1       f2       f3       f4       f5  #> 36.74250 24.09265 34.13844 30.32857 28.79062 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowVariability(x = x, method = 'sd', g = g) #>           a        b #> f1 34.91132 39.41446 #> f2 24.97399 22.39866 #> f3 28.90848 41.49096 #> f4 30.08654 33.94554 #> f5 13.22876 40.88765 #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Compute rowFilterByLowVariability(   x = x,    g = g,    method = 'sd',   # Percentage of features with highest variability to keep   percentile = 0.25 ) #>    f1    f2    f3    f4    f5  #>  TRUE FALSE FALSE FALSE FALSE"},{"path":"https://alebarberis.github.io/featscreen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alessandro Barberis. Author, maintainer.","code":""},{"path":"https://alebarberis.github.io/featscreen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barberis (2023). featscreen: Unsupervised Supervised Feature Screening. R package version 0.0.0.9000, https://alebarberis.github.io/featscreen/, https://github.com/alebarberis/featscreen.","code":"@Manual{,   title = {featscreen: Unsupervised and Supervised Feature Screening},   author = {Alessandro Barberis},   year = {2023},   note = {R package version 0.0.0.9000, https://alebarberis.github.io/featscreen/},   url = {https://github.com/alebarberis/featscreen}, }"},{"path":"https://alebarberis.github.io/featscreen/index.html","id":"featscreen","dir":"","previous_headings":"","what":"Unsupervised and Supervised Feature Screening","title":"Unsupervised and Supervised Feature Screening","text":"featscreen R package providing ready--use functions straightforward feature screening supervised unsupervised settings. featscreen crafted overarching goal simplifying unifying commonly used screening techniques single, accessible R package. Explore variety supervised unsupervised screening techniques available featscreen tailor feature selection process according analysis needs. following table provides overview supervised methods currently supported package: Continuing exploration feature screening capabilities featscreen, following table offers insights unsupervised screening methods integrated package:","code":""},{"path":"https://alebarberis.github.io/featscreen/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Unsupervised and Supervised Feature Screening","text":"can install latest development version GitHub (requires devtools package):","code":"if (!require(\"devtools\")) {   install.packages(\"devtools\") }  devtools::install_github(   repo = \"alebarberis/featscreen\",    dependencies = TRUE,    build_vignettes = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Unsupervised and Supervised Feature Screening","text":"just getting started featscreen, recommend looking Getting Started section site.","code":""},{"path":"https://alebarberis.github.io/featscreen/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Unsupervised and Supervised Feature Screening","text":"featscreen conceived, developed, maintained Alessandro Barberis (@alebarberis).","code":""},{"path":"https://alebarberis.github.io/featscreen/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Unsupervised and Supervised Feature Screening","text":"like express sincere gratitude Prostate Cancer UK generous funding, made possible develop first version package.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/Logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger Class Constructor — Logger","title":"Logger Class Constructor — Logger","text":"Constructor object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/Logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger Class Constructor — Logger","text":"","code":"Logger(   path = character(),   con = NULL,   verbose = TRUE,   level = c(\"INFO\", \"DEBUG\", \"TRACE\", \"ALL\", \"OFF\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/Logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger Class Constructor — Logger","text":"path path log file use con (optional) connection file verbose logical, whether R report extra information progress level log level logger. Five levels supported: \"\" indicates logger inactive \"INFO\" indicates informational messages \"DEBUG\" indicates fine-grained informational messages \"TRACE\" indicates finer-grained informational events \"DEBUG\" \"\" levels considered Levels considered ordered: < INFO < DEBUG < TRACE < ","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/Logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logger Class Constructor — Logger","text":"Logger object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/Logger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Logger Class Constructor — Logger","text":"log request Logger level l enabled level request <= l.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/reference/Logger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logger Class Constructor — Logger","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/combineSummaryText.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multi-response — combineSummaryText","title":"Combine multi-response — combineSummaryText","text":"screened features multi-response data, function allows adopt different strategies.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/combineSummaryText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multi-response — combineSummaryText","text":"","code":"combineSummaryText(   screening.text,   screening.method = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\",     \"t.test.equal\", \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\",     \"w.test.paired\", \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\",     \"chisq.test\", \"coxph\", \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\",     \"above.median\", \"above.minimum\", \"median\", \"variability\"),   selection.text,   selection.method = c(\"cutoff\", \"rank\", \"percentile\", \"fpr\", \"fdr\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/combineSummaryText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multi-response — combineSummaryText","text":"screening.text character string containing summary screening. screening.method character string indicating screening method id. selection.text character string containing summary selection. selection.method character string indicating selection method id.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/combineSummaryText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multi-response — combineSummaryText","text":"character string.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/combineSummaryText.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine multi-response — combineSummaryText","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/connectionUtilityFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Connection Utility Functions — connectionUtilityFunctions","title":"Connection Utility Functions — connectionUtilityFunctions","text":"Functions check existence, create, open, close connections.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/connectionUtilityFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connection Utility Functions — connectionUtilityFunctions","text":"","code":"filePathExists(path = NULL)  is.connection(con)  checkFilePathAndOpenConnection(path = NULL)  isOpenConnection(con)  checkConAndClose(con)  closeCon(object)  openCon(object)"},{"path":"https://alebarberis.github.io/featscreen/reference/connectionUtilityFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connection Utility Functions — connectionUtilityFunctions","text":"path character string, file path con object tested object Logger","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/connectionUtilityFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connection Utility Functions — connectionUtilityFunctions","text":"logical value, whether path file exists. Returns TRUE FALSE depending whether argument connection class . opened connection. Returns TRUE FALSE depending whether argument opened connection.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/connectionUtilityFunctions.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Connection Utility Functions — connectionUtilityFunctions","text":"filePathExists(): Checks existence file path .connection(): Checks con connection. checkFilePathAndOpenConnection(): Checks existence file path returns opened connection. isOpenConnection(): Returns TRUE FALSE depending whether argument opened connection. checkConAndClose(): Closes opened connection. closeCon(): Closes opened connection. openCon(): Opens connection.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/connectionUtilityFunctions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connection Utility Functions — connectionUtilityFunctions","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/coxPH.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Univariate Proportional Hazards Regression Model — coxPH","title":"Fit Univariate Proportional Hazards Regression Model — coxPH","text":"Fits Cox proportional hazards regression model.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/coxPH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Univariate Proportional Hazards Regression Model — coxPH","text":"","code":"coxPH(x, y, ...)"},{"path":"https://alebarberis.github.io/featscreen/reference/coxPH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Univariate Proportional Hazards Regression Model — coxPH","text":"x independent variable y data.frame two columns, time status ... arguments coxph","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/coxPH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Univariate Proportional Hazards Regression Model — coxPH","text":"wrapper coxph function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/coxPH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit Univariate Proportional Hazards Regression Model — coxPH","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/coxPH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Univariate Proportional Hazards Regression Model — coxPH","text":"","code":"if (FALSE) { #Seed set.seed(1010)  #Data x = c(0,2,1,1,1,0,0) y = data.frame(   time = c(4,3,1,1,2,2,3),   status = c(1,1,1,0,1,1,0) )  #Compute coxPH(x = x, y = y) }"},{"path":"https://alebarberis.github.io/featscreen/reference/createContrastMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a matrix of custom contrasts — createContrastMatrix","title":"Create a matrix of custom contrasts — createContrastMatrix","text":"Simple function generate default contrast matrix design matrix factor. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrastMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a matrix of custom contrasts — createContrastMatrix","text":"","code":"createContrastMatrix(x, target = NULL, ref = NULL)"},{"path":"https://alebarberis.github.io/featscreen/reference/createContrastMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a matrix of custom contrasts — createContrastMatrix","text":"x factor, character vector object column names providing names parameters contrasts desired target character string indicating target class ref character string indicating reference class","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrastMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a matrix of custom contrasts — createContrastMatrix","text":"numeric matrix representing contrasts set parameters.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrastMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a matrix of custom contrasts — createContrastMatrix","text":"function internally used create contrast matrix directly provided specific cases binomial multinomial response. four main settings. target ref provided, contrast created target class compared reference (.e., target - ref). target provided ref = NULL, contrast created target class compared classes (.e., target - (class1 + class2 + ...)). ref provided target = NULL, contrasts created class compared reference classes (e.g., class1 - ref). target ref NULL, contrasts created class compared remaining classes (e.g., class1 - (class2 + class3), class2 - (class1 + class3), class3 - (class1 + class2)).","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrastMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a matrix of custom contrasts — createContrastMatrix","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrastMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a matrix of custom contrasts — createContrastMatrix","text":"","code":"if (FALSE) { #Character vector (binomial) x = c(\"a\", \"b\") createContrastMatrix(x) createContrastMatrix(x, \"a\") createContrastMatrix(x, NULL, \"b\") createContrastMatrix(x, \"a\", \"b\")  #Character vector x = c(\"a\", \"b\", \"c\") createContrastMatrix(x) createContrastMatrix(x, \"a\") createContrastMatrix(x, NULL, \"b\") createContrastMatrix(x, \"a\", \"b\")  #Factor x = as.factor(sample(c(\"a\", \"b\", \"c\"),10,replace=T)) createContrastMatrix(x) createContrastMatrix(x, \"a\") createContrastMatrix(x, NULL, \"b\") createContrastMatrix(x, \"a\", \"b\") }"},{"path":"https://alebarberis.github.io/featscreen/reference/createContrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create custom contrasts — createContrasts","title":"Create custom contrasts — createContrasts","text":"Simple function generate default contrasts. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create custom contrasts — createContrasts","text":"","code":"createContrasts(x, target = NULL, ref = NULL)"},{"path":"https://alebarberis.github.io/featscreen/reference/createContrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create custom contrasts — createContrasts","text":"x factor, character vector object column names providing names parameters contrasts desired target character string indicating target class ref character string indicating reference class","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create custom contrasts — createContrasts","text":"character string vector strings representing contrasts set parameters.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create custom contrasts — createContrasts","text":"function internally used create contrasts directly provided specific cases binomial multinomial response. four main settings. target ref provided, contrast created target class compared reference (.e., target - ref). target provided ref = NULL, contrast created target class compared classes (.e., target - (class1 + class2 + ...)). ref provided target = NULL, contrasts created class compared reference classes (e.g., class1 - ref). target ref NULL, contrasts created class compared remaining classes (e.g., class1 - (class2 + class3), class2 - (class1 + class3), class3 - (class1 + class2)). target = NULL parameter names x two, first parameter considered target class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrasts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create custom contrasts — createContrasts","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createContrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create custom contrasts — createContrasts","text":"","code":"if (FALSE) { #Character vector (binomial) x = c(\"a\", \"b\") createContrasts(x) createContrasts(x, \"a\") createContrasts(x, NULL, \"b\") createContrasts(x, \"a\", \"b\")  #Character vector x = c(\"a\", \"b\", \"c\") createContrasts(x) createContrasts(x, \"a\") createContrasts(x, NULL, \"b\") createContrasts(x, \"a\", \"b\")  #Factor x = as.factor(sample(c(\"a\", \"b\", \"c\"),10,replace=T)) createContrasts(x) createContrasts(x, \"a\") createContrasts(x, NULL, \"b\") createContrasts(x, \"a\", \"b\") }"},{"path":"https://alebarberis.github.io/featscreen/reference/createDesignMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a design matrix — createDesignMatrix","title":"Create a design matrix — createDesignMatrix","text":"Simple function generate design matrix input vector factor. input matrix, returned . See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createDesignMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a design matrix — createDesignMatrix","text":"","code":"createDesignMatrix(y)"},{"path":"https://alebarberis.github.io/featscreen/reference/createDesignMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a design matrix — createDesignMatrix","text":"y vector, factor matrix","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createDesignMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a design matrix — createDesignMatrix","text":"matrix.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createDesignMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a design matrix — createDesignMatrix","text":"function internally used create design matrix directly provided.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createDesignMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a design matrix — createDesignMatrix","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/createDesignMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a design matrix — createDesignMatrix","text":"","code":"if (FALSE) { #Categorical vector y = c(rep(\"a\",5), rep(\"b\",5)) names(y) = paste0(\"s\",seq(10)) createDesignMatrix(y)  #Factor y = as.factor(y) createDesignMatrix(y)  #Numerical vector with 2 categories y = c(rep(1,5), rep(0,5)) names(y) = paste0(\"s\",seq(10)) createDesignMatrix(y)  #Numerical vector y = sample(x = seq(from=20,to=80),10) names(y) = paste0(\"s\",seq(10)) createDesignMatrix(y)  #Design matrix y = matrix(  data = c(     1,1,1,0,0,0,     0,0,0,1,1,1  ),  nrow = 6,  ncol = 2,  dimnames = list(    paste0(\"S\",seq(6)),    c(\"wt\", \"mut\")  ) ) createDesignMatrix(y)  #Numerical matrix y = matrix(  data = c(     sample(x = seq(from=20,to=80),6),     0,0,0,1,1,1  ),  nrow = 6,  ncol = 2,  dimnames = list(    paste0(\"S\",seq(6)),    c(\"age\", \"p53mut\")  ) ) createDesignMatrix(y) }"},{"path":"https://alebarberis.github.io/featscreen/reference/defaultRanking.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Ranking — defaultRanking","title":"Default Ranking — defaultRanking","text":"Ranks output statistical method used screening.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/defaultRanking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Ranking — defaultRanking","text":"","code":"defaultRanking(   x,   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\", \"w.test.paired\",     \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\"),   multi )"},{"path":"https://alebarberis.github.io/featscreen/reference/defaultRanking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Ranking — defaultRanking","text":"x output statistical function used screening. id character string indicating statistical method used screening. multi character string indicating case multi-response (available options \"max\", \"min\", \"avg\", \"sum\") integer indicating column x keep.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/defaultRanking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Ranking — defaultRanking","text":"ordering index vector.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/defaultRanking.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default Ranking — defaultRanking","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/dirExists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the existence of a directory — dirExists","title":"Check the existence of a directory — dirExists","text":"function checks existence directory input. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/dirExists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the existence of a directory — dirExists","text":"","code":"dirExists(path)"},{"path":"https://alebarberis.github.io/featscreen/reference/dirExists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the existence of a directory — dirExists","text":"path character string, directory path","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/dirExists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the existence of a directory — dirExists","text":"TRUE output path directory, FALSE otherwise.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/dirExists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the existence of a directory — dirExists","text":"function checks path exists. , creates entire path using dir.create recursive = TRUE.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/dirExists.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the existence of a directory — dirExists","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/efficiency.html","id":null,"dir":"Reference","previous_headings":"","what":"Efficiency — efficiency","title":"Efficiency — efficiency","text":"function computes efficiency square coefficient variation. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/efficiency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Efficiency — efficiency","text":"","code":"efficiency(x, g = NULL, na.rm = TRUE)"},{"path":"https://alebarberis.github.io/featscreen/reference/efficiency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Efficiency — efficiency","text":"x numerical vector. g (optional) vector factor object giving group corresponding elements x. na.rm logical indicating whether missing values removed computation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/efficiency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Efficiency — efficiency","text":"numerical value vector containing computed measure per class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/efficiency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Efficiency — efficiency","text":"efficiency measure dispersion. defined square ratio standard deviation mean: $$ EFFICIENCY = (\\frac{standard deviation}{mean})^2 = \\frac{\\sigma^2}{\\mu^2}$$ x can partitioned \\(c\\) subgroups (provided g), \\(EFFICIENCY\\) computed class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/efficiency.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Efficiency — efficiency","text":"https://en.wikipedia.org/wiki/Efficiency_(statistics)#Estimators_of_u..d._Variables","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/efficiency.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Efficiency — efficiency","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/efficiency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Efficiency — efficiency","text":"","code":"#Seed set.seed(1010)  #Define size n = 10  #Data x = sample.int(n = 100, size = n, replace = TRUE)  #Grouping variable g = c(rep(\"a\", n/2), rep(\"b\", n/2))  #Efficiency efficiency(x) #> [1] 0.2039627  #Efficiency by group efficiency(x = x, g = g) #>          a          b  #> 0.47507182 0.03704986"},{"path":"https://alebarberis.github.io/featscreen/reference/featscreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor of the featscreen class — featscreen","title":"Constructor of the featscreen class — featscreen","text":"constructor featscreen class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/featscreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor of the featscreen class — featscreen","text":"","code":"featscreen(   method = c(\"cor.test\", \"t.test\", \"w.test\", \"anova\", \"kruskal.wallis\", \"chisq.test\",     \"coxph\", \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\"),   multi = character(),   selection = c(\"cutoff\", \"rank\", \"percentile\", \"fpr\", \"fdr\"),   summary = character(),   n = integer(),   features = character(),   keep = vector(),   ranks = integer() )"},{"path":"https://alebarberis.github.io/featscreen/reference/featscreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor of the featscreen class — featscreen","text":"method character string, id used screening method. multi (optional) character string, id used multi-response aggregation method. selection character string, id used selection method. summary character string, textual summary screening. n integer, dimension feature space. features string vector, names features constituting feature space. keep integer logical vector, features keep. ranks (optional) integer vector, ordering indices.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/featscreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor of the featscreen class — featscreen","text":"object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/featscreen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructor of the featscreen class — featscreen","text":"object class featscreen named list eight elements: method id used screening method multi id used multi-response aggregation method selection id used selection method summary textual summary screening n dimension feature space features feature names keep features keep ranks feature ranks Functions facilitate access data stored resampling object available: ?getScreeningMethodId: returns screening method id ?getMultiresponseAggregationMethodId: returns multi-response aggregation method id ?getSelectionMethodId: returns selection method id ?getSummary: returns textual summary screening ?getFeatureDimensionality: returns dimension feature space ?getFeatureNames: returns feature names ?getScreenedFeatures: returns features keep ?getFeatureRanks: returns feature ranks useful functions include: print: print summary featscreen object","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/featscreen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Constructor of the featscreen class — featscreen","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/featscreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor of the featscreen class — featscreen","text":"","code":"#default featscreen()  #featscreen object featscreen(  method = 'cor.test',  selection = 'cutoff',  summary = '3 out of 5 features selected by a cutoff.',  n = 5,  keep = c(TRUE,FALSE,TRUE,FALSE,TRUE),  features = paste0(\"f\", seq_len(5)),  ranks = c(1,5,3,4,2) ) #>  #> 3 out of 5 features selected by a cutoff. #>  #> Top 5 ranked features: f1, f5, f3, f4, f2 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/genericRowBioStat.html","id":null,"dir":"Reference","previous_headings":"","what":"Stat Function Doc — genericRowBioStat","title":"Stat Function Doc — genericRowBioStat","text":"Stat Function Doc","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/genericRowBioStat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stat Function Doc — genericRowBioStat","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. y numeric vector data values. Must length ncol(x).","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/genericRowBioStat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stat Function Doc — genericRowBioStat","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/genericRowBioStat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stat Function Doc — genericRowBioStat","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/genericRowStat.html","id":null,"dir":"Reference","previous_headings":"","what":"Stat Function Doc — genericRowStat","title":"Stat Function Doc — genericRowStat","text":"function computes statistical measure row input data output variable.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/genericRowStat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stat Function Doc — genericRowStat","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. y numeric vector data values. Must length ncol(x). alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA. null numerical value numeric vector length nrow(x). true values difference means two groups observations row.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/genericRowStat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stat Function Doc — genericRowStat","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/genericRowStat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stat Function Doc — genericRowStat","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getDefaultRankingOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Ranking Options — getDefaultRankingOptions","title":"Default Ranking Options — getDefaultRankingOptions","text":"function returns default ranking options statistical measure input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getDefaultRankingOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Ranking Options — getDefaultRankingOptions","text":"","code":"getDefaultRankingOptions(   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\", \"w.test.paired\",     \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getDefaultRankingOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Ranking Options — getDefaultRankingOptions","text":"id character string, one supported statistical techniques.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getDefaultRankingOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Ranking Options — getDefaultRankingOptions","text":"list three elements: measure character string indicating whether use statistic significance (computed) order character string indicating whether sort statistic/significance ascending descending order use.abs logical value, whether use absolute values statistic","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getDefaultRankingOptions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default Ranking Options — getDefaultRankingOptions","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureDimensionality.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the dimension of the feature space — getFeatureDimensionality","title":"Get the dimension of the feature space — getFeatureDimensionality","text":"Get feature space dimension featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureDimensionality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the dimension of the feature space — getFeatureDimensionality","text":"","code":"getFeatureDimensionality(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureDimensionality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the dimension of the feature space — getFeatureDimensionality","text":"x object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureDimensionality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the dimension of the feature space — getFeatureDimensionality","text":"integer value, number screened features.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureDimensionality.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the dimension of the feature space — getFeatureDimensionality","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the feature names — getFeatureNames","title":"Get the feature names — getFeatureNames","text":"Get feature names featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the feature names — getFeatureNames","text":"","code":"getFeatureNames(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the feature names — getFeatureNames","text":"x object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the feature names — getFeatureNames","text":"character vector indicating feature names.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureNames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the feature names — getFeatureNames","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureRanks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the feature ranks — getFeatureRanks","title":"Get the feature ranks — getFeatureRanks","text":"Get feature ranks featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureRanks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the feature ranks — getFeatureRanks","text":"","code":"getFeatureRanks(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureRanks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the feature ranks — getFeatureRanks","text":"x object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureRanks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the feature ranks — getFeatureRanks","text":"integer vector indicating ordering feature indices.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getFeatureRanks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the feature ranks — getFeatureRanks","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get log levels — getLogLevels","title":"Get log levels — getLogLevels","text":"Returns log levels included selected level","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get log levels — getLogLevels","text":"","code":"getLogLevels(level = c(\"OFF\", \"INFO\", \"DEBUG\", \"TRACE\", \"ALL\"))"},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get log levels — getLogLevels","text":"level character string, log level","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLevels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get log levels — getLogLevels","text":"vector containing levels corresponding level","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLevels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get log levels — getLogLevels","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Line — getLogLine","title":"Log Line — getLogLine","text":"Returns pre-defined character vector.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Line — getLogLine","text":"","code":"getLogLine(   line = c(\"long.line.1\", \"long.line.2\", \"long.line.3\", \"short.line.1\", \"short.line.2\",     \"short.line.3\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Line — getLogLine","text":"line character vector, type line return","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Line — getLogLine","text":"character vector, line break.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getLogLine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Line — getLogLine","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodId.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the multi-response aggregation method id — getMultiresponseAggregationMethodId","title":"Get the multi-response aggregation method id — getMultiresponseAggregationMethodId","text":"Get multi-response aggregation method id featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the multi-response aggregation method id — getMultiresponseAggregationMethodId","text":"","code":"getMultiresponseAggregationMethodId(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the multi-response aggregation method id — getMultiresponseAggregationMethodId","text":"x object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the multi-response aggregation method id — getMultiresponseAggregationMethodId","text":"character string, multi-response aggregation method id.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodId.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the multi-response aggregation method id — getMultiresponseAggregationMethodId","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodName.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiresponse Aggregation Method Name — getMultiresponseAggregationMethodName","title":"Multiresponse Aggregation Method Name — getMultiresponseAggregationMethodName","text":"function returns name multi-response aggregation method input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiresponse Aggregation Method Name — getMultiresponseAggregationMethodName","text":"","code":"getMultiresponseAggregationMethodName(   id = c(\"max\", \"min\", \"avg\", \"sum\", \"idx\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiresponse Aggregation Method Name — getMultiresponseAggregationMethodName","text":"id character string, one supported multi-response aggregation methods.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiresponse Aggregation Method Name — getMultiresponseAggregationMethodName","text":"character string, name multi-response aggregation method.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getMultiresponseAggregationMethodName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multiresponse Aggregation Method Name — getMultiresponseAggregationMethodName","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreenedFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the screened features — getScreenedFeatures","title":"Get the screened features — getScreenedFeatures","text":"Get screened features featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreenedFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the screened features — getScreenedFeatures","text":"","code":"getScreenedFeatures(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/getScreenedFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the screened features — getScreenedFeatures","text":"x object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreenedFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the screened features — getScreenedFeatures","text":"logical integer vector indicating features keep. integer vector length equal dimension feature space returned, assumed contain indices ranked features.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreenedFeatures.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the screened features — getScreenedFeatures","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodDataType.html","id":null,"dir":"Reference","previous_headings":"","what":"Screening Method Data Type — getScreeningMethodDataType","title":"Screening Method Data Type — getScreeningMethodDataType","text":"function returns data type(s) screening method input can work .","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodDataType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screening Method Data Type — getScreeningMethodDataType","text":"","code":"getScreeningMethodDataType(   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\", \"w.test.paired\",     \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodDataType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screening Method Data Type — getScreeningMethodDataType","text":"character string string vector, data types supported screening method.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodDataType.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Screening Method Data Type — getScreeningMethodDataType","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodId.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the screening method id — getScreeningMethodId","title":"Get the screening method id — getScreeningMethodId","text":"Get screening method id featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the screening method id — getScreeningMethodId","text":"","code":"getScreeningMethodId(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the screening method id — getScreeningMethodId","text":"x object class featscreen","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the screening method id — getScreeningMethodId","text":"character string, screening method id.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getScreeningMethodId.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the screening method id — getScreeningMethodId","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Selection Function — getSelectionFunction","title":"Get Selection Function — getSelectionFunction","text":"function dispatcher selecting function input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Selection Function — getSelectionFunction","text":"","code":"getSelectionFunction(id = c(\"cutoff\", \"rank\", \"percentile\", \"fpr\", \"fdr\"))"},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Selection Function — getSelectionFunction","text":"id character string, one supported selecting techniques.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Selection Function — getSelectionFunction","text":"selecting function: \"cutoff\" selectByCutoff \"rank\" selectByRanking \"percentile\" selectByPercentile \"fpr\" selectByFpr \"fdr\" selectByFdr","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Selection Function — getSelectionFunction","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Selection Function — getSelectionFunction","text":"","code":"f = getSelectionFunction(id = 'cutoff')"},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunctionName.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection Function Name — getSelectionFunctionName","title":"Selection Function Name — getSelectionFunctionName","text":"function returns name selection function input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunctionName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection Function Name — getSelectionFunctionName","text":"","code":"getSelectionFunctionName(id = c(\"cutoff\", \"rank\", \"percentile\", \"fpr\", \"fdr\"))"},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunctionName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection Function Name — getSelectionFunctionName","text":"id character string, one supported selection functions.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunctionName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection Function Name — getSelectionFunctionName","text":"character string, name selection function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionFunctionName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Selection Function Name — getSelectionFunctionName","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodId.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the selection method id — getSelectionMethodId","title":"Get the selection method id — getSelectionMethodId","text":"Get selection method id featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the selection method id — getSelectionMethodId","text":"","code":"getSelectionMethodId(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the selection method id — getSelectionMethodId","text":"x object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the selection method id — getSelectionMethodId","text":"character string, selection method id.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodId.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the selection method id — getSelectionMethodId","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodName.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection Method Name — getSelectionMethodName","title":"Selection Method Name — getSelectionMethodName","text":"function returns name selection method input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection Method Name — getSelectionMethodName","text":"","code":"getSelectionMethodName(id = c(\"cutoff\", \"rank\", \"percentile\", \"fpr\", \"fdr\"))"},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection Method Name — getSelectionMethodName","text":"id character string, one supported selecting methods.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection Method Name — getSelectionMethodName","text":"character string, name selecting method.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSelectionMethodName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Selection Method Name — getSelectionMethodName","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Statistical Function — getStatFunction","title":"Get Statistical Function — getStatFunction","text":"function dispatcher statistical function selected input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Statistical Function — getStatFunction","text":"","code":"getStatFunction(   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\", \"w.test.paired\",     \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getStatFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Statistical Function — getStatFunction","text":"id character string, one supported statistical techniques.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Statistical Function — getStatFunction","text":"statistical function: \"cor.test\" rowCor \"pearson\" rowPearsonCor \"spearman\" rowSpearmanCor \"kendall\" rowKendallCor \"t.test\" rowTwoSampleT \"t.test.equal\" rowEqualVarT \"t.test.unequal\" rowUnequalVarT \"t.test.paired\" rowPairedT \"w.test\" rowTwoSampleWilcoxonT \"w.test.ranksum\" rowWilcoxonT \"w.test.paired\" rowPairedWilcoxonT \"anova\" rowOneWayAnova \"anova.equal\" rowEqualVarOneWayAnova \"anova.unequal\" rowUnequalVarOneWayAnova \"kruskal.wallis\" rowKruskalWallis \"chisq.test\" rowPearsonChiSq \"coxph\" rowCoxPH \"moderated.t\" rowModeratedT \"moderated.F\" rowModeratedOneWayAnova \"sam.test\" rowSamStatistics \"missing.value\" rowMissingValueRatio \".median\" rowAboveMedianFreqRatio \".minimum\" rowAboveMinFreqRatio \"median\" rowMedians \"variability\" rowVariability","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatFunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Statistical Function — getStatFunction","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatFunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Statistical Function — getStatFunction","text":"","code":"f = getStatFunction(id = 'cor.test')"},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticCategory.html","id":null,"dir":"Reference","previous_headings":"","what":"Screening Test Category — getStatisticCategory","title":"Screening Test Category — getStatisticCategory","text":"function returns category statistic used screening.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticCategory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screening Test Category — getStatisticCategory","text":"","code":"getStatisticCategory(   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test.ranksum\", \"w.test.paired\", \"anova\",     \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticCategory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screening Test Category — getStatisticCategory","text":"id character string, one supported statistical techniques.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticCategory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screening Test Category — getStatisticCategory","text":"character string, name assigned group.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticCategory.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Screening Test Category — getStatisticCategory","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticName.html","id":null,"dir":"Reference","previous_headings":"","what":"Screening Test Statistic Name — getStatisticName","title":"Screening Test Statistic Name — getStatisticName","text":"function returns name statistic used screening.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screening Test Statistic Name — getStatisticName","text":"","code":"getStatisticName(   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test.ranksum\", \"w.test.paired\", \"anova\",     \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screening Test Statistic Name — getStatisticName","text":"id character string, one supported statistical techniques.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screening Test Statistic Name — getStatisticName","text":"character string, name statistic.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Screening Test Statistic Name — getStatisticName","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalFunctionName.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical Function Name — getStatisticalFunctionName","title":"Statistical Function Name — getStatisticalFunctionName","text":"function returns name statistical function input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalFunctionName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical Function Name — getStatisticalFunctionName","text":"","code":"getStatisticalFunctionName(   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\", \"w.test.paired\",     \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalFunctionName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical Function Name — getStatisticalFunctionName","text":"id character string, one supported statistical techniques.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalFunctionName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical Function Name — getStatisticalFunctionName","text":"character string, name statistical function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalFunctionName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Statistical Function Name — getStatisticalFunctionName","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalMethodName.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical Method Name — getStatisticalMethodName","title":"Statistical Method Name — getStatisticalMethodName","text":"function returns name statistical method input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalMethodName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical Method Name — getStatisticalMethodName","text":"","code":"getStatisticalMethodName(   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\", \"w.test.paired\",     \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalMethodName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical Method Name — getStatisticalMethodName","text":"id character string, one supported statistical techniques.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalMethodName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical Method Name — getStatisticalMethodName","text":"character string, name statistical technique.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getStatisticalMethodName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Statistical Method Name — getStatisticalMethodName","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the screening summary — getSummary","title":"Get the screening summary — getSummary","text":"Get summary featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the screening summary — getSummary","text":"","code":"getSummary(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/getSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the screening summary — getSummary","text":"x object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the screening summary — getSummary","text":"character string, textual summary screening process.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getSummary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the screening summary — getSummary","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getThisPackageName.html","id":null,"dir":"Reference","previous_headings":"","what":"Package Name — getThisPackageName","title":"Package Name — getThisPackageName","text":"function returns name package.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getThisPackageName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package Name — getThisPackageName","text":"","code":"getThisPackageName()"},{"path":"https://alebarberis.github.io/featscreen/reference/getThisPackageName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package Name — getThisPackageName","text":"string containing name package.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getThisPackageName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package Name — getThisPackageName","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getVariabilityMeasureName.html","id":null,"dir":"Reference","previous_headings":"","what":"Variability Measure Name — getVariabilityMeasureName","title":"Variability Measure Name — getVariabilityMeasureName","text":"function returns name variability measure input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getVariabilityMeasureName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variability Measure Name — getVariabilityMeasureName","text":"","code":"getVariabilityMeasureName(   id = c(\"sd\", \"iqr\", \"mad\", \"rsd\", \"efficiency\", \"vmr\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/getVariabilityMeasureName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variability Measure Name — getVariabilityMeasureName","text":"id character string, one supported variability measures.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getVariabilityMeasureName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variability Measure Name — getVariabilityMeasureName","text":"character string, name variability measure.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/getVariabilityMeasureName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variability Measure Name — getVariabilityMeasureName","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/iqr.html","id":null,"dir":"Reference","previous_headings":"","what":"Interquartile Range — iqr","title":"Interquartile Range — iqr","text":"function computes interquartile range (IQR) values x. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/iqr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interquartile Range — iqr","text":"","code":"iqr(x, g = NULL, na.rm = TRUE)"},{"path":"https://alebarberis.github.io/featscreen/reference/iqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interquartile Range — iqr","text":"x numerical vector. g (optional) vector factor object giving group corresponding elements x. na.rm logical indicating whether missing values removed computation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/iqr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interquartile Range — iqr","text":"function wrapper IQR function. x can partitioned \\(c\\) subgroups (provided g), \\(IQR\\) computed class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/iqr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interquartile Range — iqr","text":"","code":"#Seed set.seed(1010)  #Define size n = 10  #Data x = sample.int(n = 100, size = n, replace = TRUE)  #Grouping variable g = c(rep(\"a\", n/2), rep(\"b\", n/2))  #Interquartile Range iqr(x) #> [1] 35.75  #Interquartile Range by group iqr(x = x, g = g) #>  a  b  #> 46 15"},{"path":"https://alebarberis.github.io/featscreen/reference/is.Logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Check class — is.Logger","title":"Check class — is.Logger","text":"Function check input object class Logger.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/is.Logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check class — is.Logger","text":"","code":"is.Logger(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/is.Logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check class — is.Logger","text":"x object tested","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/is.Logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check class — is.Logger","text":"Logical, whether x class Logger.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/is.Logger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check class — is.Logger","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/is.featscreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a featscreen object — is.featscreen","title":"Check a featscreen object — is.featscreen","text":"Function check object featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/is.featscreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a featscreen object — is.featscreen","text":"","code":"is.featscreen(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/is.featscreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a featscreen object — is.featscreen","text":"x object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/is.featscreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a featscreen object — is.featscreen","text":"Returns TRUE argument valid featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/is.featscreen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check a featscreen object — is.featscreen","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/is.featscreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check a featscreen object — is.featscreen","text":"","code":"#valid object is.featscreen(x = featscreen()) #> [1] TRUE  #invalid object is.featscreen(x = 3) #> [1] FALSE"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Screening Functions — listAvailableScreeningFunctions","title":"Available Screening Functions — listAvailableScreeningFunctions","text":"function returns currently available screening functions.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Screening Functions — listAvailableScreeningFunctions","text":"","code":"listAvailableScreeningFunctions(   x = c(\"all\", \"unsupervised\", \"supervised\"),   show.wrapper = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available Screening Functions — listAvailableScreeningFunctions","text":"x character string indicating whether return screening methods (), unsupervised screening methods (unsupervised) supervised screening methods (supervised). show.wrapper logical indicating whether return ids supervised screening functions without wrapper functions.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Screening Functions — listAvailableScreeningFunctions","text":"data frame two columns: id id screening function, used function calls name name screening function","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningFunctions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Screening Functions — listAvailableScreeningFunctions","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningFunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available Screening Functions — listAvailableScreeningFunctions","text":"","code":"#List available methods listAvailableScreeningFunctions() #>                id                     name #> 1   missing.value     rowMissingValueRatio #> 2    above.median  rowAboveMedianFreqRatio #> 3   above.minimum     rowAboveMinFreqRatio #> 4          median               rowMedians #> 5     variability           rowVariability #> 6         pearson            rowPearsonCor #> 7        spearman           rowSpearmanCor #> 8         kendall            rowKendallCor #> 9    t.test.equal             rowEqualVarT #> 10 t.test.unequal           rowUnequalVarT #> 11  t.test.paired               rowPairedT #> 12 w.test.ranksum             rowWilcoxonT #> 13  w.test.paired       rowPairedWilcoxonT #> 14    anova.equal   rowEqualVarOneWayAnova #> 15  anova.unequal rowUnequalVarOneWayAnova #> 16 kruskal.wallis         rowKruskalWallis #> 17     chisq.test          rowPearsonChiSq #> 18          coxph                 rowCoxPH #> 19    moderated.t            rowModeratedT #> 20    moderated.F  rowModeratedOneWayAnova #> 21       sam.test         rowSamStatistics"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethodIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Screening Method IDs — listAvailableScreeningMethodIds","title":"Available Screening Method IDs — listAvailableScreeningMethodIds","text":"function returns currently available random sampling methods.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethodIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Screening Method IDs — listAvailableScreeningMethodIds","text":"","code":"listAvailableScreeningMethodIds(   x = c(\"all\", \"unsupervised\", \"supervised\"),   show.wrapper = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethodIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available Screening Method IDs — listAvailableScreeningMethodIds","text":"x character string indicating whether return screening methods (), unsupervised screening methods (unsupervised) supervised screening methods (supervised). show.wrapper logical indicating whether return ids supervised screening functions without wrapper functions.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethodIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Screening Method IDs — listAvailableScreeningMethodIds","text":"vector containing screening method identifiers.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethodIds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Screening Method IDs — listAvailableScreeningMethodIds","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Screening Methods — listAvailableScreeningMethods","title":"Available Screening Methods — listAvailableScreeningMethods","text":"function returns currently available screening methods.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Screening Methods — listAvailableScreeningMethods","text":"","code":"listAvailableScreeningMethods(   x = c(\"all\", \"unsupervised\", \"supervised\"),   show.wrapper = FALSE,   show.data.type = FALSE,   simplify = FALSE,   show.function = FALSE,   show.category = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available Screening Methods — listAvailableScreeningMethods","text":"x character string indicating whether return screening methods (), unsupervised screening methods (unsupervised) supervised screening methods (supervised). show.wrapper logical indicating whether return ids supervised screening functions without wrapper functions. show.data.type logical indicating whether show supported data types. simplify logical indicating whether format data readability. show.function logical indicating whether show function name. show.category logical indicating whether show internally given category.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Screening Methods — listAvailableScreeningMethods","text":"data frame least two columns: id id screening method, used function calls name name screening method","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Screening Methods — listAvailableScreeningMethods","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableScreeningMethods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available Screening Methods — listAvailableScreeningMethods","text":"","code":"#List available methods listAvailableScreeningMethods() #>                id #> 1   missing.value #> 2    above.median #> 3   above.minimum #> 4          median #> 5     variability #> 6         pearson #> 7        spearman #> 8         kendall #> 9    t.test.equal #> 10 t.test.unequal #> 11  t.test.paired #> 12 w.test.ranksum #> 13  w.test.paired #> 14    anova.equal #> 15  anova.unequal #> 16 kruskal.wallis #> 17     chisq.test #> 18          coxph #> 19    moderated.t #> 20    moderated.F #> 21       sam.test #>                                                                       name #> 1                                                      missing value ratio #> 2                                             above-median frequency ratio #> 3                                            above-minimum frequency ratio #> 4                                                             median value #> 5                                                              variability #> 6                  Pearson's product moment correlation coefficient t-test #> 7                           Spearman's rank correlation coefficient t-test #> 8                            Kendall's rank correlation coefficient t-test #> 9                                       two-sample Student's pooled t-test #> 10 two-sample t-test with the Welch modification to the degrees of freedom #> 11                                      paired two-sample Student's t-test #> 12                                          two-sample Mann-Whitney U-test #> 13                             paired two-sample Wilcoxon signed-rank test #> 14                                     one-way analysis of variance F-test #> 15               one-way analysis of variance F-test with Welch correction #> 16                                                   Kruskal-Wallis H-test #> 17                                                       Pearson's χ²-test #> 18                                    Cox PH regression coefficient z-test #> 19                                        empirical Bayes moderated t-test #> 20                                        empirical Bayes moderated F-test #> 21                    significant analysis of microarrays permutation test  #List available methods and supported data types listAvailableScreeningMethods(show.data.type = TRUE, simplify = TRUE) #>                id #> 1    above.median #> 2   above.minimum #> 3     anova.equal #> 4   anova.unequal #> 5      chisq.test #> 6           coxph #> 7         kendall #> 8  kruskal.wallis #> 9          median #> 10  missing.value #> 11    moderated.F #> 12    moderated.t #> 13        pearson #> 14       sam.test #> 15       spearman #> 16   t.test.equal #> 17  t.test.paired #> 18 t.test.unequal #> 19    variability #> 20  w.test.paired #> 21 w.test.ranksum #>                                                                       name #> 1                                             above-median frequency ratio #> 2                                            above-minimum frequency ratio #> 3                                      one-way analysis of variance F-test #> 4                one-way analysis of variance F-test with Welch correction #> 5                                                        Pearson's χ²-test #> 6                                     Cox PH regression coefficient z-test #> 7                            Kendall's rank correlation coefficient t-test #> 8                                                    Kruskal-Wallis H-test #> 9                                                             median value #> 10                                                     missing value ratio #> 11                                        empirical Bayes moderated F-test #> 12                                        empirical Bayes moderated t-test #> 13                 Pearson's product moment correlation coefficient t-test #> 14                    significant analysis of microarrays permutation test #> 15                          Spearman's rank correlation coefficient t-test #> 16                                      two-sample Student's pooled t-test #> 17                                      paired two-sample Student's t-test #> 18 two-sample t-test with the Welch modification to the degrees of freedom #> 19                                                             variability #> 20                             paired two-sample Wilcoxon signed-rank test #> 21                                          two-sample Mann-Whitney U-test #>    numerical categorical multiresponse survival #> 1          x                                    #> 2          x                                    #> 3                      x             x          #> 4                      x             x          #> 5                      x             x          #> 6                                             x #> 7          x                                    #> 8                      x             x          #> 9          x                                    #> 10         x           x             x        x #> 11         x           x             x          #> 12         x           x             x          #> 13         x                                    #> 14         x           x             x        x #> 15         x                                    #> 16                     x                        #> 17                     x                        #> 18                     x                        #> 19         x                                    #> 20                     x                        #> 21                     x                         #List available methods and function names listAvailableScreeningMethods(show.function = TRUE) #>                id #> 1    above.median #> 2   above.minimum #> 3     anova.equal #> 4   anova.unequal #> 5      chisq.test #> 6           coxph #> 7         kendall #> 8  kruskal.wallis #> 9          median #> 10  missing.value #> 11    moderated.F #> 12    moderated.t #> 13        pearson #> 14       sam.test #> 15       spearman #> 16   t.test.equal #> 17  t.test.paired #> 18 t.test.unequal #> 19    variability #> 20  w.test.paired #> 21 w.test.ranksum #>                                                                       name #> 1                                             above-median frequency ratio #> 2                                            above-minimum frequency ratio #> 3                                      one-way analysis of variance F-test #> 4                one-way analysis of variance F-test with Welch correction #> 5                                                        Pearson's χ²-test #> 6                                     Cox PH regression coefficient z-test #> 7                            Kendall's rank correlation coefficient t-test #> 8                                                    Kruskal-Wallis H-test #> 9                                                             median value #> 10                                                     missing value ratio #> 11                                        empirical Bayes moderated F-test #> 12                                        empirical Bayes moderated t-test #> 13                 Pearson's product moment correlation coefficient t-test #> 14                    significant analysis of microarrays permutation test #> 15                          Spearman's rank correlation coefficient t-test #> 16                                      two-sample Student's pooled t-test #> 17                                      paired two-sample Student's t-test #> 18 two-sample t-test with the Welch modification to the degrees of freedom #> 19                                                             variability #> 20                             paired two-sample Wilcoxon signed-rank test #> 21                                          two-sample Mann-Whitney U-test #>                    function #> 1   rowAboveMedianFreqRatio #> 2      rowAboveMinFreqRatio #> 3    rowEqualVarOneWayAnova #> 4  rowUnequalVarOneWayAnova #> 5           rowPearsonChiSq #> 6                  rowCoxPH #> 7             rowKendallCor #> 8          rowKruskalWallis #> 9                rowMedians #> 10     rowMissingValueRatio #> 11  rowModeratedOneWayAnova #> 12            rowModeratedT #> 13            rowPearsonCor #> 14         rowSamStatistics #> 15           rowSpearmanCor #> 16             rowEqualVarT #> 17               rowPairedT #> 18           rowUnequalVarT #> 19           rowVariability #> 20       rowPairedWilcoxonT #> 21             rowWilcoxonT"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Selection Functions — listAvailableSelectionFunctions","title":"Available Selection Functions — listAvailableSelectionFunctions","text":"function returns currently available selection function names.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Selection Functions — listAvailableSelectionFunctions","text":"","code":"listAvailableSelectionFunctions()"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Selection Functions — listAvailableSelectionFunctions","text":"data frame two columns: id id selection method, used function calls name name selection function","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionFunctions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Selection Functions — listAvailableSelectionFunctions","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionFunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available Selection Functions — listAvailableSelectionFunctions","text":"","code":"#List available methods listAvailableSelectionFunctions() #>           id               name #> 1     cutoff     selectByCutoff #> 2       rank    selectByRanking #> 3 percentile selectByPercentile #> 4        fpr        selectByFpr #> 5        fdr        selectByFdr"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethodIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Selection Method Ids — listAvailableSelectionMethodIds","title":"Available Selection Method Ids — listAvailableSelectionMethodIds","text":"function returns ids currently available methods feature selection.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethodIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Selection Method Ids — listAvailableSelectionMethodIds","text":"","code":"listAvailableSelectionMethodIds()"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethodIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Selection Method Ids — listAvailableSelectionMethodIds","text":"vector containing selecting method identifiers.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethodIds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Selection Method Ids — listAvailableSelectionMethodIds","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Selection Methods — listAvailableSelectionMethods","title":"Available Selection Methods — listAvailableSelectionMethods","text":"function returns currently available selection methods.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Selection Methods — listAvailableSelectionMethods","text":"","code":"listAvailableSelectionMethods(show.function = FALSE)"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available Selection Methods — listAvailableSelectionMethods","text":"show.function logical indicating whether show related function name.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Selection Methods — listAvailableSelectionMethods","text":"data frame two columns default: id id selection method, used function calls name name selection method show.function = TRUE, column containing function name added: id id selection method, used function calls name name selection method function name selection function","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Selection Methods — listAvailableSelectionMethods","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSelectionMethods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available Selection Methods — listAvailableSelectionMethods","text":"","code":"#List available methods listAvailableSelectionMethods() #>           id                              name #> 1     cutoff               selection by cutoff #> 2       rank              selection by ranking #> 3 percentile       selection by top percentile #> 4        fpr  selection by false positive rate #> 5        fdr selection by false discovery rate  #List available methods and related functions listAvailableSelectionMethods(show.function = TRUE) #>           id                              name           function #> 1     cutoff               selection by cutoff     selectByCutoff #> 2        fdr selection by false discovery rate        selectByFdr #> 3        fpr  selection by false positive rate        selectByFpr #> 4 percentile       selection by top percentile selectByPercentile #> 5       rank              selection by ranking    selectByRanking"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSupervisedScreeningMethodIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Supervised Screening Method Ids — listAvailableSupervisedScreeningMethodIds","title":"Available Supervised Screening Method Ids — listAvailableSupervisedScreeningMethodIds","text":"function returns ids currently available methods supervised screening.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSupervisedScreeningMethodIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Supervised Screening Method Ids — listAvailableSupervisedScreeningMethodIds","text":"","code":"listAvailableSupervisedScreeningMethodIds(show.wrapper = FALSE)"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSupervisedScreeningMethodIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available Supervised Screening Method Ids — listAvailableSupervisedScreeningMethodIds","text":"show.wrapper logical indicating whether return ids supervised screening functions without wrapper functions.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSupervisedScreeningMethodIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Supervised Screening Method Ids — listAvailableSupervisedScreeningMethodIds","text":"vector containing screening method identifiers.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableSupervisedScreeningMethodIds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Supervised Screening Method Ids — listAvailableSupervisedScreeningMethodIds","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableUnsupervisedScreeningMethodIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Unsupervised Screening Method Ids — listAvailableUnsupervisedScreeningMethodIds","title":"Available Unsupervised Screening Method Ids — listAvailableUnsupervisedScreeningMethodIds","text":"function returns ids currently available methods unsupervised screening.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableUnsupervisedScreeningMethodIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Unsupervised Screening Method Ids — listAvailableUnsupervisedScreeningMethodIds","text":"","code":"listAvailableUnsupervisedScreeningMethodIds()"},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableUnsupervisedScreeningMethodIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Unsupervised Screening Method Ids — listAvailableUnsupervisedScreeningMethodIds","text":"vector containing screening method identifiers.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listAvailableUnsupervisedScreeningMethodIds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Unsupervised Screening Method Ids — listAvailableUnsupervisedScreeningMethodIds","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOption.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Ranking Options — listDefaultRankingOption","title":"Default Ranking Options — listDefaultRankingOption","text":"function returns default ranking options statistics screening method input.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Ranking Options — listDefaultRankingOption","text":"","code":"listDefaultRankingOption(   id = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\", \"w.test.paired\",     \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Ranking Options — listDefaultRankingOption","text":"data frame five columns: id id screening method, used function calls statistic statistic associated screening method measure measure use ranking, whether use statistic significance (computed) order whether sort measure ascending descending order ranking value whether use absolute values ranking","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOption.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default Ranking Options — listDefaultRankingOption","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Ranking Options — listDefaultRankingOptions","title":"Default Ranking Options — listDefaultRankingOptions","text":"function returns default ranking options statistics screening methods.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Ranking Options — listDefaultRankingOptions","text":"","code":"listDefaultRankingOptions()"},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Ranking Options — listDefaultRankingOptions","text":"data frame five columns: id id screening method, used function calls statistic statistic associated screening method measure measure use ranking, whether use statistic significance (computed) order whether sort measure ascending descending order ranking value whether use absolute values ranking","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOptions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default Ranking Options — listDefaultRankingOptions","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listDefaultRankingOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Ranking Options — listDefaultRankingOptions","text":"","code":"#List available methods listDefaultRankingOptions() #>                id                     statistic      measure      order #> 1   missing.value           missing value ratio    statistic  ascending #> 2    above.median  above-median frequency ratio    statistic descending #> 3   above.minimum above-minimum frequency ratio    statistic descending #> 4          median                        median    statistic descending #> 5     variability                   variability    statistic descending #> 6         pearson                   t-statistic    statistic descending #> 7        spearman                   t-statistic    statistic descending #> 8         kendall                   t-statistic    statistic descending #> 9    t.test.equal                   t-statistic    statistic descending #> 10 t.test.unequal                   t-statistic    statistic descending #> 11  t.test.paired                   t-statistic    statistic descending #> 12 w.test.ranksum                   U-statistic    statistic  ascending #> 13  w.test.paired                   W-statistic    statistic  ascending #> 14    anova.equal                   F-statistic    statistic descending #> 15  anova.unequal                   F-statistic    statistic descending #> 16 kruskal.wallis                   H-statistic significance  ascending #> 17     chisq.test               chisq-statistic significance  ascending #> 18          coxph                   z-statistic    statistic descending #> 19    moderated.t                   t-statistic    statistic descending #> 20    moderated.F                   F-statistic    statistic descending #> 21       sam.test                 sam-statistic    statistic descending #>       value #> 1       raw #> 2       raw #> 3       raw #> 4       raw #> 5       raw #> 6  absolute #> 7  absolute #> 8  absolute #> 9  absolute #> 10 absolute #> 11 absolute #> 12      raw #> 13      raw #> 14      raw #> 15      raw #> 16      raw #> 17      raw #> 18 absolute #> 19 absolute #> 20      raw #> 21 absolute"},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodCategories.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Screening Functions — listScreeningMethodCategories","title":"Available Screening Functions — listScreeningMethodCategories","text":"function returns internally given category available screening method.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodCategories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Screening Functions — listScreeningMethodCategories","text":"","code":"listScreeningMethodCategories(   x = c(\"all\", \"unsupervised\", \"supervised\"),   show.wrapper = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodCategories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available Screening Functions — listScreeningMethodCategories","text":"x character string indicating whether return screening methods (), unsupervised screening methods (unsupervised) supervised screening methods (supervised). show.wrapper logical indicating whether return ids supervised screening functions without wrapper functions.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodCategories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Screening Functions — listScreeningMethodCategories","text":"data frame two columns: id id screening function, used function calls category name internally given category","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodCategories.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Screening Functions — listScreeningMethodCategories","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodDataTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Screening Methods — listScreeningMethodDataTypes","title":"Available Screening Methods — listScreeningMethodDataTypes","text":"function returns supported data types available screening method.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodDataTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Screening Methods — listScreeningMethodDataTypes","text":"","code":"listScreeningMethodDataTypes(   x = c(\"all\", \"unsupervised\", \"supervised\"),   show.wrapper = FALSE,   simplify = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodDataTypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available Screening Methods — listScreeningMethodDataTypes","text":"x character string indicating whether return screening methods (), unsupervised screening methods (unsupervised) supervised screening methods (supervised). show.wrapper logical indicating whether return ids supervised screening functions without wrapper functions. simplify logical indicating whether format data readability.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodDataTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Screening Methods — listScreeningMethodDataTypes","text":"data frame five columns: id id screening method, used function calls numerical whether method works numerical data categorical whether method works categorical data multiresponse whether method works multiresponse data survival whether method works survival data","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodDataTypes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Available Screening Methods — listScreeningMethodDataTypes","text":"simplify = FALSE, values table returned logical (.e., TRUE FALSE). simplify = TRUE, values table returned 'x' (meaning method works indicated data type) ''.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/listScreeningMethodDataTypes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Available Screening Methods — listScreeningMethodDataTypes","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logAll","title":"Log Method — logAll","text":"function prints log information level .","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logAll","text":"","code":"logAll(object, message, sep, add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/featscreen/reference/logAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logAll","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logAll","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logAll.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logAll","text":"log information level printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/reference/logAll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logAll","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logDebug.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logDebug","title":"Log Method — logDebug","text":"function prints log information level DEBUG.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logDebug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logDebug","text":"","code":"logDebug(object, message, sep, add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/featscreen/reference/logDebug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logDebug","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logDebug.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logDebug","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logDebug.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logDebug","text":"log information level DEBUG printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/reference/logDebug.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logDebug","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logDefault","title":"Log Method — logDefault","text":"Generic function print log information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logDefault","text":"","code":"logDefault(   object,   log.level,   message,   sep,   add.level = FALSE,   add.time = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/reference/logDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logDefault","text":"object object class Logger log.level character string, log level information message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logDefault","text":"None (invisible NULL).","code":""},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/reference/logDefault.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logDefault","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logInfo","title":"Log Method — logInfo","text":"function prints log information level INFO.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logInfo","text":"","code":"logInfo(object, message, sep, add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/featscreen/reference/logInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logInfo","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logInfo","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logInfo","text":"log information level INFO printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/reference/logInfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logInfo","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logLevelNameFixedLength.html","id":null,"dir":"Reference","previous_headings":"","what":"Get log levels — logLevelNameFixedLength","title":"Get log levels — logLevelNameFixedLength","text":"Returns log level string fixed length.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logLevelNameFixedLength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get log levels — logLevelNameFixedLength","text":"","code":"logLevelNameFixedLength(level)"},{"path":"https://alebarberis.github.io/featscreen/reference/logLevelNameFixedLength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get log levels — logLevelNameFixedLength","text":"level character string, log level","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logLevelNameFixedLength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get log levels — logLevelNameFixedLength","text":"vector containing levels corresponding level","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logLevelNameFixedLength.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get log levels — logLevelNameFixedLength","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logTrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logTrace","title":"Log Method — logTrace","text":"function prints log information level TRACE.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logTrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logTrace","text":"","code":"logTrace(object, message, sep, add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/featscreen/reference/logTrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logTrace","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logTrace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logTrace","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/logTrace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logTrace","text":"log information level TRACE printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/reference/logTrace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logTrace","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/loggerGettersAndSetters.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger Getters and Setters — loggerGettersAndSetters","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"Logger Getters Setters","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/loggerGettersAndSetters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"","code":"getCon(object)  getVerbose(object)  getPath(object)  getLevel(object)  setCon(object, value)  setVerbose(object, value)  setPath(object, value)  setLevel(object, value)"},{"path":"https://alebarberis.github.io/featscreen/reference/loggerGettersAndSetters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"object Logger","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/loggerGettersAndSetters.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"getCon(): Returns object element getVerbose(): Returns object element getPath(): Returns object element getLevel(): Returns object element setCon(): Returns updated object setVerbose(): Returns updated object setPath(): Returns updated object setLevel(): Returns updated object","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/loggerGettersAndSetters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Median Absolute Deviation — mad","title":"Median Absolute Deviation — mad","text":"function computes median absolute deviation (MAD) values x. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median Absolute Deviation — mad","text":"","code":"mad(x, g = NULL, na.rm = TRUE)"},{"path":"https://alebarberis.github.io/featscreen/reference/mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median Absolute Deviation — mad","text":"x numerical vector. g (optional) vector factor object giving group corresponding elements x. na.rm logical indicating whether missing values removed computation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/mad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Median Absolute Deviation — mad","text":"function wrapper mad function. x can partitioned \\(c\\) subgroups (provided g), \\(MAD\\) computed class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/mad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median Absolute Deviation — mad","text":"","code":"#Seed set.seed(1010)  #Define size n = 10  #Data x = sample.int(n = 100, size = n, replace = TRUE)  #Grouping variable g = c(rep(\"a\", n/2), rep(\"b\", n/2))  #Median Absolute Deviation mad(x) #> [1] 29.652  #Median Absolute Deviation by group mad(x = x, g = g) #>       a       b  #> 34.0998 16.3086"},{"path":"https://alebarberis.github.io/featscreen/reference/multiresponse.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multi-response — multiresponse","title":"Combine multi-response — multiresponse","text":"screened features multi-response data, function allows adopt different strategies.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/multiresponse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multi-response — multiresponse","text":"","code":"multiresponse(x, multi = c(\"max\", \"min\", \"avg\", \"sum\", \"idx\"), idx = NULL)"},{"path":"https://alebarberis.github.io/featscreen/reference/multiresponse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multi-response — multiresponse","text":"x matrix containing values combine. multi character string indicating x multiple columns. Available options : \"max\" maximum value across responses kept \"min\" minimum value across responses kept \"avg\" values averaged \"sum\" values summed \"idx\" return column indicated idx idx (optional) integer value character string indicating column x keep.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/multiresponse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multi-response — multiresponse","text":"vector.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/multiresponse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine multi-response — multiresponse","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newFeatscreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor of the featscreen Class — newFeatscreen","title":"Constructor of the featscreen Class — newFeatscreen","text":"low-level constructor featscreen class representing set features resulting screening procedure.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newFeatscreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor of the featscreen Class — newFeatscreen","text":"","code":"newFeatscreen(   method = character(),   multi = character(),   selection = character(),   summary = character(),   n = integer(),   features = character(),   keep = integer(),   ranks = integer() )"},{"path":"https://alebarberis.github.io/featscreen/reference/newFeatscreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor of the featscreen Class — newFeatscreen","text":"method character string, id used screening method. multi (optional) character string, id used multi-response aggregation method. selection character string, id used selection method. summary character string, textual summary screening. n integer, dimension feature space. features string vector, names features constituting feature space. keep integer logical vector, features keep. ranks (optional) integer vector, ordering indices.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newFeatscreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor of the featscreen Class — newFeatscreen","text":"object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newFeatscreen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructor of the featscreen Class — newFeatscreen","text":"object class featscreen named list eight elements: method id used screening method multi id used multi-response aggregation method selection id used selection method summary textual summary screening n dimension feature space features feature names keep features keep ranks feature ranks Functions facilitate access data stored resampling object available: ?getScreeningMethodId: returns screening method id ?getMultiresponseAggregationMethodId: returns multi-response aggregation method id ?getSelectionMethodId: returns selection method id ?getSummary: returns textual summary screening ?getFeatureDimensionality: returns dimension feature space ?getFeatureNames: returns feature names ?getScreenedFeatures: returns features keep ?getFeatureRanks: returns feature ranks useful functions include: print: print summary featscreen object","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newFeatscreen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Constructor of the featscreen Class — newFeatscreen","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newLogger.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger Structure — newLogger","title":"Logger Structure — newLogger","text":"Logger class serves core element logging system featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newLogger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger Structure — newLogger","text":"","code":"newLogger(   path = character(),   con = NULL,   verbose = logical(),   level = character() )"},{"path":"https://alebarberis.github.io/featscreen/reference/newLogger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger Structure — newLogger","text":"path path log file use con (optional) connection file verbose logical, whether R report extra information progress level log level logger. Five levels supported: \"\" indicates logger inactive \"INFO\" indicates informational messages \"DEBUG\" indicates fine-grained informational messages \"TRACE\" indicates finer-grained informational events \"DEBUG\" \"\" levels considered Levels considered ordered: < INFO < DEBUG < TRACE < ","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newLogger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logger Structure — newLogger","text":"Logger object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/newLogger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logger Structure — newLogger","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/print.featscreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a featscreen object — print.featscreen","title":"Print a featscreen object — print.featscreen","text":"Print summary featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/print.featscreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a featscreen object — print.featscreen","text":"","code":"# S3 method for featscreen print(x, show.top = TRUE, top = 5L, show.names = TRUE, ...)"},{"path":"https://alebarberis.github.io/featscreen/reference/print.featscreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a featscreen object — print.featscreen","text":"x object class featscreen. show.top logical indicating whether show top ranked features. top integer, number top ranked features show. show.names logical indicating whether show indices names. ... additional print arguments","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/print.featscreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a featscreen object — print.featscreen","text":"Silently return x.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/print.featscreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a featscreen object — print.featscreen","text":"","code":"#featscreen object x = featscreen(  method = 'cor.test',  selection = 'cutoff',  summary = '3 out of 5 features selected by a cutoff.',  n = 5,  keep = c(TRUE,FALSE,TRUE,FALSE,TRUE),  features = paste0(\"f\", seq_len(5)),  ranks = c(1,5,3,4,2) )  #print print(x) #>  #> 3 out of 5 features selected by a cutoff. #>  #> Top 5 ranked features: f1, f5, f3, f4, f2 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/printLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger Print Functions — printLog","title":"Logger Print Functions — printLog","text":"function prints provided message output defined via object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/printLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger Print Functions — printLog","text":"","code":"printLog(object, message, sep)  printLogLine(   object,   line = c(\"long.line.1\", \"long.line.2\", \"long.line.3\", \"short.line.1\", \"short.line.2\",     \"short.line.3\"),   sep )"},{"path":"https://alebarberis.github.io/featscreen/reference/printLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger Print Functions — printLog","text":"object Logger message character string, message print sep character vector strings append element. line character vector, type line return","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/printLog.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Logger Print Functions — printLog","text":"printLogLine(): Prints log line.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/printLog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logger Print Functions — printLog","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMedianFreqRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Above-Median Frequency Ratio — rowAboveMedianFreqRatio","title":"Above-Median Frequency Ratio — rowAboveMedianFreqRatio","text":"function computes ratio values median feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMedianFreqRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Above-Median Frequency Ratio — rowAboveMedianFreqRatio","text":"","code":"rowAboveMedianFreqRatio(x, g = NULL)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMedianFreqRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Above-Median Frequency Ratio — rowAboveMedianFreqRatio","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMedianFreqRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Above-Median Frequency Ratio — rowAboveMedianFreqRatio","text":"vector length nrow(x) containing computed ratios. g provided, matrix ratios class column vectors returned.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMedianFreqRatio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Above-Median Frequency Ratio — rowAboveMedianFreqRatio","text":"observation, median computed via colMedians. Remember median across \\(n\\) elements defined : $$Median = x_\\frac{(n+1)}{2}$$ \\(x\\) ascendingly ordered vector \\(n\\) elements, \\(n\\) odd. \\(n\\) even, median computed : $$Median = \\frac{x_\\frac{n}{2}+x_{\\frac{(n)}{2}+1}}{2}$$ g = NULL, feature define -median frequency ratio (AMFR) number times feature value greater sample median divided total number observations: $$-Median Frequency Ratio (AMFR) = \\frac{Number samples feature sample median}{Total number observations}$$ g provided, -median frequency ratio (\\(AMFR_{ij}\\)) computed group \\(j\\) : $$AMFR_{ij} = \\frac{Number samples j-th class feature sample median}{Number observations j-th class}$$","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMedianFreqRatio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Above-Median Frequency Ratio — rowAboveMedianFreqRatio","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMedianFreqRatio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Above-Median Frequency Ratio — rowAboveMedianFreqRatio","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample.int(n = 100, size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #AMR rowAboveMedianFreqRatio(x) #>  f1  f2  f3  f4  f5  #> 0.7 0.4 0.9 0.7 0.3   #AMR by group rowAboveMedianFreqRatio(x = x, g = g) #>      a   b #> f1 1.0 0.4 #> f2 0.2 0.6 #> f3 0.8 1.0 #> f4 1.0 0.4 #> f5 0.0 0.6"},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMinFreqRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Above-Minimum Frequency Ratio — rowAboveMinFreqRatio","title":"Above-Minimum Frequency Ratio — rowAboveMinFreqRatio","text":"function computes ratio values minimum value feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMinFreqRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Above-Minimum Frequency Ratio — rowAboveMinFreqRatio","text":"","code":"rowAboveMinFreqRatio(x, g = NULL, min.expr = 0)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMinFreqRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Above-Minimum Frequency Ratio — rowAboveMinFreqRatio","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x. min.expr numerical value indicating minimum expression required min.prop samples.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMinFreqRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Above-Minimum Frequency Ratio — rowAboveMinFreqRatio","text":"vector length nrow(x) containing computed ratios. g provided, matrix ratios class column vectors returned.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMinFreqRatio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Above-Minimum Frequency Ratio — rowAboveMinFreqRatio","text":"feature, -minimum frequency ratio (AMFR) computed : $$-Minimum Frequency Ratio (AMFR) = \\frac{Number samples expression greater provided minimum}{Total number observations}$$ g provided, -minimum frequency ratio (\\(AMFR_{ij}\\)) computed group \\(j\\) : $$AMFR_{ij} = \\frac{Number samples j-th class expression greater provided minimum}{Total number observations j-th class}$$","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMinFreqRatio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Above-Minimum Frequency Ratio — rowAboveMinFreqRatio","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowAboveMinFreqRatio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Above-Minimum Frequency Ratio — rowAboveMinFreqRatio","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample.int(n = 100, size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #AMFR rowAboveMinFreqRatio(x) #> f1 f2 f3 f4 f5  #>  1  1  1  1  1   #AMFR by group rowAboveMinFreqRatio(x = x, g = g) #>    a b #> f1 1 1 #> f2 1 1 #> f3 1 1 #> f4 1 1 #> f5 1 1"},{"path":"https://alebarberis.github.io/featscreen/reference/rowCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Row Correlations — rowCor","title":"Row Correlations — rowCor","text":"function tests association row vector x y, using one Pearson's product moment coefficient, Kendall's tau Spearman's rho. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row Correlations — rowCor","text":"","code":"rowCor(   x,   y,   alternative = c(\"two.sided\", \"greater\", \"less\"),   method = c(\"pearson\", \"kendall\", \"spearman\"),   conf.level = 0.95,   ... )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row Correlations — rowCor","text":"x matrix data.frame. y numeric vector data values. Must length ncol(x). alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". method character string indicating measure association. Available options : \"pearson\" Pearson's product moment coefficient \"kendall\" Kendall's tau \"spearman\" Spearman's rho conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA. ... arguments cor.test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Row Correlations — rowCor","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Row Correlations — rowCor","text":"See following functions specific implementation: \"pearson\" rowPearsonCor \"kendall\" rowKendallCor \"spearman\" rowSpearmanCor","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Row Correlations — rowCor","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Row Correlations — rowCor","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) y = rnorm(20)  #Compute rowCor(x = x, y = y) #> $statistic #>   [1] -1.562687801  0.858321163  0.637163042  0.128135983 -0.862080975 #>   [6]  0.598241121  1.212132923  0.069343265  0.456858601 -1.898899711 #>  [11]  0.184459567 -0.339190941 -3.007207334  0.336614733  0.617155315 #>  [16] -2.481769120 -0.861755878  0.455952916 -0.949161902 -1.068207821 #>  [21] -1.907514254  0.108342487  0.853011464  0.394641243 -0.975175694 #>  [26]  0.864453082 -0.276135713  0.397042009  0.135430056 -0.462988385 #>  [31] -0.361123747  1.461778755 -0.511219918 -1.082653209  0.004997978 #>  [36]  0.479980846 -0.828477145  1.318518418 -1.782204536 -0.998935926 #>  [41]  0.811267590  0.778846860  0.063646496  0.807429722 -0.287617366 #>  [46]  0.229086538 -0.614220396  0.407021288  0.548241677  1.311804083 #>  [51]  1.083779739 -1.889587922  0.546321065  0.100801842  0.101202574 #>  [56] -2.561201443  1.583823429 -0.730766741 -1.048014217 -0.319427625 #>  [61]  0.579442956  0.862395912  1.496058535 -0.397273649 -0.474920610 #>  [66] -0.235018504  0.728067837 -0.876637740  0.034058214  0.550229079 #>  [71]  2.323603386 -1.613238444 -1.424067416 -0.119842224  0.400028195 #>  [76] -0.809365837  0.194148780  0.353125443 -0.662352249 -0.767740894 #>  [81] -0.007011127 -2.543693293  0.726090012  0.420845627 -0.732734821 #>  [86]  0.724719987 -1.240322324 -2.395388623  0.245192102  0.731896295 #>  [91]  1.163954688 -0.976294907  1.556730531  1.753549523 -1.007125364 #>  [96] -0.408247435 -0.468959552 -0.592881300 -1.119771117 -1.314586148 #>  #> $significance #>   [1] 0.135536058 0.402000439 0.532039815 0.899462121 0.399982690 0.557132482 #>   [7] 0.241132739 0.945480943 0.653237919 0.073727039 0.855715230 0.738391072 #>  [13] 0.007565871 0.740300062 0.544860776 0.023168646 0.400156896 0.653876795 #>  [19] 0.355108974 0.299544083 0.072539393 0.914922608 0.404861217 0.697744610 #>  [25] 0.342397511 0.398713075 0.785589293 0.696004803 0.893774879 0.648921201 #>  [31] 0.722210668 0.161041167 0.615410709 0.293253139 0.996067183 0.637021871 #>  [37] 0.418250745 0.203861755 0.091592575 0.331066169 0.427809764 0.446188963 #>  [43] 0.949953191 0.429960192 0.776924829 0.821384399 0.546755396 0.688791618 #>  [49] 0.590261338 0.206071641 0.292766609 0.075030171 0.591553341 0.920822078 #>  [55] 0.920508440 0.019634212 0.130645338 0.474327179 0.308501179 0.753079743 #>  [61] 0.569472138 0.399813976 0.151966290 0.695837027 0.640554996 0.816847228 #>  [67] 0.475937508 0.392233089 0.973205569 0.588925893 0.032056824 0.124086665 #>  [73] 0.171532459 0.905935620 0.693843169 0.428874501 0.848233670 0.728096097 #>  [79] 0.516137234 0.452595599 0.994483097 0.020366462 0.477119661 0.678849812 #>  [85] 0.473154954 0.477939550 0.230781390 0.027687610 0.809081343 0.473654184 #>  [91] 0.259639152 0.341857780 0.136941960 0.096519592 0.327222224 0.687907437 #>  [97] 0.644728453 0.560636387 0.277531110 0.205153701 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowCoxPH.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Univariate Proportional Hazards Regression Model — rowCoxPH","title":"Fit Univariate Proportional Hazards Regression Model — rowCoxPH","text":"Fits Cox proportional hazards regression model row vector x.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCoxPH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Univariate Proportional Hazards Regression Model — rowCoxPH","text":"","code":"rowCoxPH(x, y, ...)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowCoxPH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Univariate Proportional Hazards Regression Model — rowCoxPH","text":"x independent variable y data.frame two columns, time status ... arguments coxph","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCoxPH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Univariate Proportional Hazards Regression Model — rowCoxPH","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCoxPH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Univariate Proportional Hazards Regression Model — rowCoxPH","text":"wrapper coxph function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCoxPH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit Univariate Proportional Hazards Regression Model — rowCoxPH","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowCoxPH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Univariate Proportional Hazards Regression Model — rowCoxPH","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 7), 100, 7) y = data.frame(   time = c(4,3,1,1,2,2,3),   status = c(1,1,1,0,1,1,0) )  #Compute rowCoxPH(x = x, y = y) #> $statistic #>   [1] 3.221007e+00 2.935206e+00 1.140501e+00 4.454102e-01 1.190286e+00 #>   [6] 8.916962e-01 8.049666e-01 1.590121e+00 7.349304e-01 3.560573e+00 #>  [11] 4.310211e+00 1.771256e+00 7.358665e-01 7.834584e-01 5.595023e-01 #>  [16] 8.517362e-01 1.502229e+00 1.074111e+00 1.020083e+00 9.756255e-01 #>  [21] 4.227505e-01 1.608548e+01 4.521620e+00 2.692001e-01 1.074576e+00 #>  [26] 3.624716e-01 1.086745e+00 9.113874e-01 1.697756e+01 2.533270e+00 #>  [31] 1.275738e+00 3.907546e-01 4.542239e-01 1.779742e-01 9.083797e-01 #>  [36] 6.280007e-01 1.396546e+00 6.101014e+00 8.530357e-01 2.840826e+00 #>  [41] 1.215659e+00 1.094521e-06 2.701355e-01 1.082217e+00 1.052698e+00 #>  [46] 7.733836e-01 1.457949e+00 1.568748e+00 1.024923e+00 1.813662e+00 #>  [51] 8.365681e-01 9.254171e-01 1.622466e+00 8.343404e-01 8.929156e-01 #>  [56] 8.463514e-01 1.002840e+00 8.800736e-01 4.623974e+00 2.437298e-01 #>  [61] 2.909040e-01 1.164090e+00 1.735525e+00 9.390681e-01 6.240458e-01 #>  [66] 1.230961e+00 7.307977e-01 8.905954e-01 1.734010e+00 8.942129e-01 #>  [71] 1.189308e+00 4.097652e-01 1.915732e+00 8.902901e-01 1.525230e+00 #>  [76] 1.242867e+00 3.009826e+00 1.016969e+00 3.517028e-01 4.517073e-01 #>  [81] 1.057733e-01 1.384930e+00 3.401540e-01 6.624688e-01 6.530762e-01 #>  [86] 1.633748e+00 1.378153e+00 1.396723e+00 7.800584e-01 1.153907e+00 #>  [91] 1.355294e+00 4.010554e-01 2.730155e+00 1.650111e+01 1.210385e+00 #>  [96] 9.941296e+00 9.080608e-01 4.625763e-02 1.722859e-01 8.008059e-01 #>  #> $significance #>   [1] 0.35284158 0.23216275 0.73758050 0.30118757 0.85494752 0.79780513 #>   [7] 0.57710663 0.26094473 0.69492137 0.31890517 0.26710108 0.66551492 #>  [13] 0.77760548 0.61193232 0.73318231 0.80078024 0.54018698 0.92859258 #>  [19] 0.97586279 0.94423064 0.26460129 0.10786105 0.17282449 0.11431238 #>  [25] 0.89624827 0.08181236 0.75986679 0.89146060 0.21163423 0.42229480 #>  [31] 0.70298142 0.27837110 0.33107439 0.07258021 0.85710750 0.58156520 #>  [37] 0.66554431 0.10609623 0.76369326 0.34983203 0.70231073 0.16166355 #>  [43] 0.22807359 0.90435796 0.91378796 0.72984889 0.56438354 0.46137108 #>  [49] 0.98487894 0.39205220 0.68143883 0.87972285 0.24956478 0.73447671 #>  [55] 0.88573483 0.82775947 0.99658780 0.82385224 0.17635549 0.05941668 #>  [61] 0.09367397 0.84519183 0.40927596 0.93408775 0.14305795 0.63458694 #>  [67] 0.59578763 0.86391024 0.30615053 0.83262541 0.74192289 0.45133100 #>  [73] 0.41624233 0.77796538 0.56882428 0.63632036 0.24414165 0.98456609 #>  [79] 0.29858647 0.21476206 0.08861988 0.56581889 0.06272944 0.36847209 #>  [85] 0.32801611 0.25534905 0.62283278 0.52537683 0.62102484 0.61296241 #>  [91] 0.49592007 0.17068410 0.22844039 0.13981152 0.64839154 0.16112832 #>  [97] 0.86323414 0.15522274 0.07572453 0.63635069 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowEBayesStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical Bayes Moderated Statistics — rowEBayesStatistics","title":"Empirical Bayes Moderated Statistics — rowEBayesStatistics","text":"function implements common workflow fit linear models compute moderated t-statistics moderated F-statistic empirical Bayes moderation standard errors towards global value. input data generated microarray technology, following steps executed: linear model fitting feature: lmFit compute coefficients standard errors given set contrasts: contrasts.fit compute moderated t-statistics moderated F-statistic: eBayes summarise linear model fit: topTable input data generated RNA-seq technology, following steps executed: (optional) transform count data linear modelling: voom linear model fitting feature: lmFit compute coefficients standard errors given set contrasts: contrasts.fit compute moderated t-statistics moderated F-statistic: eBayes summarise linear model fit: topTable complete details step see manual pages respective functions. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEBayesStatistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical Bayes Moderated Statistics — rowEBayesStatistics","text":"","code":"rowEBayesStatistics(   x,   y = NULL,   observations = NULL,   statistic = c(\"moderated.F\", \"moderated.t\"),   technology = c(\"array\", \"seq\"),   is.logged = TRUE,   mean.variance = c(\"ebayes\", \"weights\"),   span = 0.5,   method = c(\"ls\", \"robust\"),   design = NULL,   weights = NULL,   ndups = NULL,   spacing = NULL,   block = NULL,   correlation = NULL,   contrasts = NULL,   proportion = 0.01,   stdev.coef.lim = c(0.1, 4),   robust = FALSE,   winsor.tail.p = c(0.05, 0.1),   coef = NULL,   adjust.method = \"BH\",   logger = NULL,   ... )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowEBayesStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical Bayes Moderated Statistics — rowEBayesStatistics","text":"x matrix-like data object rows corresponding genes columns observations. y vector, factor matrix. used create design matrix explicitly provided via design argument. observations (optional) integer vector, indices observations keep. statistic character string, indicating moderated statistic return. technology character string, technology used generate data. Available options : array data generated microarray technology seq data generated RNA-seq technology .logged logical, whether original data already logged. .logged = FALSE, data internally transformed. mean.variance character string indicating whether mean-variance relationship modeled precision weights (mean.variance = \"weights\") empirical Bayes prior trend (mean.variance = \"ebayes\"). span width smoothing window used lowess mean-variance trend.     Expressed proportion 0 1. method fitting method; \"ls\" least squares \"robust\" robust regression design design matrix microarray experiment, rows corresponding samples columns coefficients estimated.   Defaults object$design non-NULL, otherwise unit vector meaning samples treated replicates single treatment group. weights non-negative precision weights.  Can numeric matrix individual weights size object expression matrix, numeric vector array weights length equal ncol expression matrix, numeric vector gene weights length equal nrow expression matrix. ndups positive integer giving number times distinct probe printed array. spacing positive integer giving spacing duplicate occurrences probe, spacing=1 consecutive rows. block vector factor specifying blocking variable arrays. length equal number arrays. Must NULL ndups>2. correlation inter-duplicate inter-technical replicate correlation contrasts numeric matrix rows corresponding coefficients fit columns containing contrasts. May vector one contrast. NAs allowed. proportion numeric value 0 1, assumed proportion genes differentially expressed stdev.coef.lim numeric vector length 2, assumed lower upper limits standard deviation log2-fold-changes differentially expressed genes robust logical, estimation df.prior var.prior robustified outlier sample variances? winsor.tail.p numeric vector length 1 2, giving left right tail proportions x Winsorize. Used robust=TRUE. coef column number column name specifying coefficient contrast linear model interest. topTable, can also vector column subscripts, case gene ranking F-statistic set contrasts. adjust.method method used adjust p-values multiple testing.  Options, increasing conservatism, include \"none\", \"BH\", \"\" \"holm\".   See p.adjust complete list options. NULL value result default adjustment method, \"BH\". logger Logger object. ... arguments lmFit.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEBayesStatistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical Bayes Moderated Statistics — rowEBayesStatistics","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEBayesStatistics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Empirical Bayes Moderated Statistics — rowEBayesStatistics","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEBayesStatistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical Bayes Moderated Statistics — rowEBayesStatistics","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 20 nc = 20  #Data x = matrix(  data = stats::rnorm(n = nr*nc),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"g\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Categorical output vector (binomial) y = c(rep(\"wt\",nc/2), rep(\"mut\",nc/2)) names(y) = paste0(\"S\",seq(nc)) rowEBayesStatistics(x=x,y=y) #> $statistic #>  [1] 1.48314728 0.26127447 0.17149946 2.23891417 0.82910469 0.24320947 #>  [7] 2.81785282 1.14802510 0.44767056 0.04352112 0.02997531 0.92414587 #> [13] 1.60206921 1.45753831 0.21663719 0.55468754 0.92130594 0.62506081 #> [19] 0.02202450 1.13335883 #>  #> $significance #>  [1] 0.22692238 0.77006953 0.84240072 0.10657416 0.43643986 0.78410725 #>  [7] 0.05973406 0.31726271 0.63911520 0.95741234 0.97046949 0.39687025 #> [13] 0.20147918 0.23280867 0.80522206 0.57425166 0.39799894 0.53522888 #> [19] 0.97821627 0.32195006 #>    #Categorical output vector (multinomial) y = sample(x = c(\"I\",\"II\",\"III\"),size=nc,replace=TRUE) names(y) = paste0(\"S\",seq(nc)) rowEBayesStatistics(x=x,y=y) #> $statistic #>  [1] 0.3141577 0.2767571 0.4573615 0.1812941 1.7104698 0.7240608 2.0080201 #>  [8] 0.7933097 0.3971676 0.4476769 0.1849767 0.5861202 0.8748885 1.5961187 #> [15] 1.1681319 0.9266135 0.3693172 1.6185753 0.7700783 2.5076014 #>  #> $significance #>  [1] 0.81515997 0.84219337 0.71216352 0.90911667 0.16330960 0.53775239 #>  [7] 0.11132285 0.49775168 0.75507606 0.71900680 0.90663455 0.62421406 #> [13] 0.45362805 0.18883625 0.32087593 0.42732238 0.77517234 0.18354502 #> [19] 0.51091086 0.05772779 #>   #Numerical output vector y = sample(x = seq(from=20,to=80),size=nc,replace=TRUE) names(y) = paste0(\"S\",seq(nc)) rowEBayesStatistics(x=x,y=y,statistic='moderated.t') #> $statistic #>  [1]  0.52687270 -0.57261137  0.38656922 -0.31476380 -1.57504242  0.65374814 #>  [7]  2.23496136 -1.06505656 -1.01418096  0.48217447  0.13606901 -0.66270033 #> [13] -0.57141521  1.98487512  0.76474499 -1.34074280 -0.48437799 -0.09490638 #> [19] -0.28749240 -1.04544828 #>  #> $significance #>  [1] 0.59858942 0.56724649 0.69929152 0.75311376 0.11607880 0.51366948 #>  [7] 0.02600044 0.28752660 0.31114172 0.62995962 0.89183878 0.50792424 #> [13] 0.56805603 0.04787704 0.44489805 0.18080490 0.62839669 0.92443922 #> [19] 0.77389204 0.29648039 #>   #Design matrix y = matrix(  data = c(     c(rep(1,nc/2), rep(0,nc/2)),     c(rep(0,nc/2), rep(1,nc/2))  ),  nrow = nc,  ncol = 2,  dimnames = list(    paste0(\"S\",seq(nc)),    c(\"wt\", \"mut\")  ) ) rowEBayesStatistics(x=x,y=y) #> $statistic #>  [1] 1.48314728 0.26127447 0.17149946 2.23891417 0.82910469 0.24320947 #>  [7] 2.81785282 1.14802510 0.44767056 0.04352112 0.02997531 0.92414587 #> [13] 1.60206921 1.45753831 0.21663719 0.55468754 0.92130594 0.62506081 #> [19] 0.02202450 1.13335883 #>  #> $significance #>  [1] 0.22692238 0.77006953 0.84240072 0.10657416 0.43643986 0.78410725 #>  [7] 0.05973406 0.31726271 0.63911520 0.95741234 0.97046949 0.39687025 #> [13] 0.20147918 0.23280867 0.80522206 0.57425166 0.39799894 0.53522888 #> [19] 0.97821627 0.32195006 #>   #Numerical matrix y = matrix(  data = c(     sample(x = seq(from=20,to=80),size=nc,replace=TRUE),     sample(x = c(0,1),size=nc,replace=TRUE)  ),  nrow = nc,  ncol = 2,  dimnames = list(    paste0(\"S\",seq(nc)),    c(\"age\", \"p53mut\")  ) ) rowEBayesStatistics(x=x,y=y) #> $statistic #>  [1] 0.17361441 0.03270602 2.44564690 0.05525935 1.06210275 1.39121561 #>  [7] 4.87511651 3.91450475 0.50455740 0.22729336 0.64457767 0.19686732 #> [13] 2.03564259 2.98884274 1.73522912 0.91429137 0.14726936 0.94040632 #> [19] 0.53077892 2.11076330 #>  #> $significance #>  [1] 0.840620973 0.967823042 0.086670050 0.946239713 0.345728065 0.248772711 #>  [7] 0.007634205 0.019950427 0.603772746 0.796687032 0.524884170 0.821299595 #> [13] 0.130596535 0.050345666 0.176359789 0.400800546 0.863061475 0.390469148 #> [19] 0.588146673 0.121145461 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarOneWayAnova.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an Analysis of Variance Model — rowEqualVarOneWayAnova","title":"Fit an Analysis of Variance Model — rowEqualVarOneWayAnova","text":"Computes one-way analysis variance test feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarOneWayAnova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an Analysis of Variance Model — rowEqualVarOneWayAnova","text":"","code":"rowEqualVarOneWayAnova(x, g)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarOneWayAnova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an Analysis of Variance Model — rowEqualVarOneWayAnova","text":"x numeric matrix. g vector specifying group membership observation x.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarOneWayAnova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an Analysis of Variance Model — rowEqualVarOneWayAnova","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarOneWayAnova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an Analysis of Variance Model — rowEqualVarOneWayAnova","text":"wrapper row_oneway_equalvar function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarOneWayAnova.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit an Analysis of Variance Model — rowEqualVarOneWayAnova","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarOneWayAnova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an Analysis of Variance Model — rowEqualVarOneWayAnova","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = sample(c(0,1), 20, replace = TRUE)  #Compute rowEqualVarOneWayAnova(x = x, g = g) #> $statistic #>   [1] 6.175662e-01 1.142795e+00 3.373973e+00 7.497984e-02 1.391426e+00 #>   [6] 3.693834e-01 2.206839e-03 1.337518e-01 1.393143e-01 1.867596e-04 #>  [11] 1.052904e+00 1.307385e+01 5.739056e-02 7.198392e-01 8.443845e+00 #>  [16] 4.173536e-02 3.927375e-02 8.502934e+00 3.000569e-01 1.298206e+00 #>  [21] 7.850476e-01 1.219352e-03 2.220413e-01 1.085044e-01 2.457722e+00 #>  [26] 2.851262e+00 5.001434e-01 3.050954e+00 6.751124e-01 1.425549e+00 #>  [31] 9.876122e-02 2.123565e-01 1.786957e+00 5.387085e-02 1.830630e-01 #>  [36] 7.907822e+00 1.404200e-01 1.887882e+00 9.987513e-01 1.153725e+00 #>  [41] 7.991206e-02 1.595998e+00 2.788211e-01 1.637761e+00 6.795809e+00 #>  [46] 6.509314e-02 7.023671e-02 2.777753e-02 1.698515e+00 1.805773e+00 #>  [51] 1.657147e+00 1.561988e-03 9.443359e-01 3.021035e-01 3.829611e-01 #>  [56] 1.801679e+00 9.344037e-01 4.171424e-01 1.159628e+00 1.463029e-01 #>  [61] 1.619973e-03 7.273319e-02 5.191157e-02 5.580119e-03 1.368136e-01 #>  [66] 3.483534e-01 3.600077e-01 2.543502e-01 1.289645e+00 2.090509e-03 #>  [71] 3.617872e+00 3.677760e+00 6.072455e-01 7.851055e-01 2.769109e+00 #>  [76] 2.926726e-01 2.105485e+00 1.654725e+00 3.870242e-02 6.183033e-01 #>  [81] 1.645710e+00 9.626418e+00 1.629068e+00 8.806703e-02 8.105337e-02 #>  [86] 3.992556e-01 2.373407e-01 1.654598e-01 1.068649e+00 5.158298e-03 #>  [91] 2.883852e+00 7.927073e-01 1.372184e+00 5.624146e-02 1.004130e-01 #>  [96] 5.893066e-02 2.731018e-01 1.656353e-01 1.971405e+00 1.539184e-01 #>  #> $significance #>   [1] 0.442175859 0.299189535 0.082803822 0.787336975 0.253520606 0.550932350 #>   [7] 0.963048844 0.718835880 0.713323057 0.989246781 0.318432101 0.001976585 #>  [13] 0.813375570 0.407338394 0.009425943 0.840417168 0.845128304 0.009221409 #>  [19] 0.590575494 0.269477549 0.387286174 0.972528477 0.643149627 0.745655395 #>  [25] 0.134359728 0.108550730 0.488492833 0.097731175 0.422025211 0.247990429 #>  [31] 0.756934565 0.650445702 0.197948760 0.819077950 0.673829370 0.011533983 #>  [37] 0.712242269 0.186310456 0.330859053 0.296959476 0.780641688 0.222590206 #>  [43] 0.603924431 0.216882408 0.017839470 0.801512307 0.794003581 0.869490854 #>  [49] 0.208907405 0.195711365 0.214296244 0.968909274 0.344043779 0.589321984 #>  [55] 0.543775817 0.196195449 0.346530494 0.526515332 0.295764322 0.706572649 #>  [61] 0.968337774 0.790465508 0.822337813 0.941277182 0.715785572 0.562383956 #>  [67] 0.555980978 0.620146075 0.271008680 0.964035200 0.073287907 0.071150524 #>  [73] 0.445951945 0.387269020 0.113411033 0.595145435 0.163976809 0.214617187 #>  [79] 0.846243578 0.441908164 0.215817215 0.006143642 0.218054907 0.770046205 #>  [85] 0.779124524 0.535417486 0.632013346 0.688974669 0.314940928 0.943536143 #>  [91] 0.106691505 0.385028695 0.256710368 0.815216383 0.754980309 0.810938795 #>  [97] 0.607631515 0.688819158 0.177317919 0.699425299 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarT.html","id":null,"dir":"Reference","previous_headings":"","what":"Student's t-Test — rowEqualVarT","title":"Student's t-Test — rowEqualVarT","text":"Computes two-sample Student's pooled t-test feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student's t-Test — rowEqualVarT","text":"","code":"rowEqualVarT(   x,   g,   null = 0,   alternative = c(\"two.sided\", \"greater\", \"less\"),   conf.level = 0.95 )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Student's t-Test — rowEqualVarT","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. null numerical value numeric vector length nrow(x). true values difference means two groups observations row. alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Student's t-Test — rowEqualVarT","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Student's t-Test — rowEqualVarT","text":"wrapper row_t_equalvar function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Student's t-Test — rowEqualVarT","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowEqualVarT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Student's t-Test — rowEqualVarT","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = sample(c(0,1), 20, replace = TRUE)  #Compute rowEqualVarT(x = x, g = g) #> $statistic #>   [1]  0.78585383  1.06901606 -1.83683787  0.27382446 -1.17958711  0.60776918 #>   [7]  0.04697701  0.36572100  0.37324826  0.01366600  1.02611095  3.61577782 #>  [13]  0.23956328  0.84843337 -2.90582949  0.20429233 -0.19817606  2.91597900 #>  [19] -0.54777448 -1.13938824 -0.88602909 -0.03491923  0.47121258 -0.32940007 #>  [25]  1.56771221 -1.68856802 -0.70720816  1.74669810  0.82165223  1.19396341 #>  [31]  0.31426298 -0.46082152 -1.33677122 -0.23210095  0.42785859 -2.81208495 #>  [37] -0.37472657  1.37400217 -0.99937547  1.07411574  0.28268721 -1.26332798 #>  [43]  0.52803512 -1.27975032 -2.60687730  0.25513357 -0.26502210  0.16666594 #>  [49] -1.30327073 -1.34379064 -1.28730232  0.03952200  0.97176945 -0.54963938 #>  [55] -0.61883848  1.34226653  0.96664559 -0.64586563 -1.07686025  0.38249566 #>  [61]  0.04024889 -0.26969092 -0.22784112 -0.07470020  0.36988321  0.59021468 #>  [67]  0.60000643 -0.50433145  1.13562547  0.04572209  1.90207050  1.91774863 #>  [73] -0.77925961 -0.88606180  1.66406403  0.54099222  1.45102910 -1.28636126 #>  [79] -0.19672930 -0.78632264 -1.28285228  3.10264694 -1.27634959 -0.29676090 #>  [85]  0.28469874  0.63186675 -0.48717624  0.40676752  1.03375464 -0.07182129 #>  [91] -1.69819089 -0.89034111  1.17140248  0.23715281  0.31688016 -0.24275638 #>  [97]  0.52259143 -0.40698311 -1.40406742  0.39232431 #>  #> $significance #>   [1] 0.442175859 0.299189535 0.082803822 0.787336975 0.253520606 0.550932350 #>   [7] 0.963048844 0.718835880 0.713323057 0.989246781 0.318432101 0.001976585 #>  [13] 0.813375570 0.407338394 0.009425943 0.840417168 0.845128304 0.009221409 #>  [19] 0.590575494 0.269477549 0.387286174 0.972528477 0.643149627 0.745655395 #>  [25] 0.134359728 0.108550730 0.488492833 0.097731175 0.422025211 0.247990429 #>  [31] 0.756934565 0.650445702 0.197948760 0.819077950 0.673829370 0.011533983 #>  [37] 0.712242269 0.186310456 0.330859053 0.296959476 0.780641688 0.222590206 #>  [43] 0.603924431 0.216882408 0.017839470 0.801512307 0.794003581 0.869490854 #>  [49] 0.208907405 0.195711365 0.214296244 0.968909274 0.344043779 0.589321984 #>  [55] 0.543775817 0.196195449 0.346530494 0.526515332 0.295764322 0.706572649 #>  [61] 0.968337774 0.790465508 0.822337813 0.941277182 0.715785572 0.562383956 #>  [67] 0.555980978 0.620146075 0.271008680 0.964035200 0.073287907 0.071150524 #>  [73] 0.445951945 0.387269020 0.113411033 0.595145435 0.163976809 0.214617187 #>  [79] 0.846243578 0.441908164 0.215817215 0.006143642 0.218054907 0.770046205 #>  [85] 0.779124524 0.535417486 0.632013346 0.688974669 0.314940928 0.943536143 #>  [91] 0.106691505 0.385028695 0.256710368 0.815216383 0.754980309 0.810938795 #>  [97] 0.607631515 0.688819158 0.177317919 0.699425299 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMedianRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by Above-Median Frequency Ratio — rowFilterByAboveMedianRatio","title":"Filter by Above-Median Frequency Ratio — rowFilterByAboveMedianRatio","text":"function filters input matrix x depending features' intensity. Variables removed values lower medians computed across features given percentage samples defined min.prop. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMedianRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by Above-Median Frequency Ratio — rowFilterByAboveMedianRatio","text":"","code":"rowFilterByAboveMedianRatio(x, g = NULL, min.prop = 0.5)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMedianRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by Above-Median Frequency Ratio — rowFilterByAboveMedianRatio","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x. min.prop numerical value range \\([0, 1]\\). Minimum proportion samples feature expression median. Default 0.5.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMedianRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by Above-Median Frequency Ratio — rowFilterByAboveMedianRatio","text":"logical vector length nrow(x) indicating rows x passed filter.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMedianRatio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter by Above-Median Frequency Ratio — rowFilterByAboveMedianRatio","text":"observation, median across \\(n\\) features computed : $$Median = x_\\frac{(n+1)}{2}$$ \\(x\\) ascendingly ordered vector \\(n\\) elements, \\(n\\) odd. \\(n\\) even, median computed : $$Median = \\frac{x_\\frac{n}{2}+x_{\\frac{(n)}{2}+1}}{2}$$ g = NULL, feature define -median frequency ratio (AMFR) number times feature value greater sample median divided total number observations: $$-Median Frequency Ratio (AMFR) = \\frac{Number samples feature sample median}{Total number observations}$$ Finally, -th feature kept \\(AMFR_{} >= min.prop\\). g provided, -median frequency ratio (\\(AMFR_{ij}\\)) computed group \\(j\\). -th feature kept \\(AMFR_{ij} >= min.prop\\) least one group.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMedianRatio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter by Above-Median Frequency Ratio — rowFilterByAboveMedianRatio","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMedianRatio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by Above-Median Frequency Ratio — rowFilterByAboveMedianRatio","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample.int(n = 100, size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Filter rowFilterByAboveMedianRatio(x) #>    f1    f2    f3    f4    f5  #>  TRUE FALSE  TRUE  TRUE FALSE   #Filter by group rowFilterByAboveMedianRatio(x = x, g = g) #>   f1   f2   f3   f4   f5  #> TRUE TRUE TRUE TRUE TRUE"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMinRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by Above-Minimum Frequency Ratio — rowFilterByAboveMinRatio","title":"Filter by Above-Minimum Frequency Ratio — rowFilterByAboveMinRatio","text":"function filters input matrix x depending features' intensity. Variables removed values lower provided minimum value given percentage samples defined min.prop. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMinRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by Above-Minimum Frequency Ratio — rowFilterByAboveMinRatio","text":"","code":"rowFilterByAboveMinRatio(x, g = NULL, min.expr = 0, min.prop = 0.5)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMinRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by Above-Minimum Frequency Ratio — rowFilterByAboveMinRatio","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x. min.expr numerical value indicating minimum expression required min.prop samples. min.prop numerical value range \\([0, 1]\\). Minimum proportion samples feature expression min.expr. Default 0.5.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMinRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by Above-Minimum Frequency Ratio — rowFilterByAboveMinRatio","text":"logical vector length nrow(x) indicating rows x passed filter.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMinRatio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter by Above-Minimum Frequency Ratio — rowFilterByAboveMinRatio","text":"feature, -minimum frequency ratio (AMFR) computed : $$-Minimum Frequency Ratio (AMFR) = \\frac{Number samples expression greater provided minimum}{Total number observations}$$ , -th feature kept \\(AMFR_{} >= min.prop\\). g provided, -minimum frequency ratio (\\(AMFR_{ij}\\)) computed group \\(j\\). -th feature kept \\(AMFR_{ij} >= min.prop\\) least one group.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMinRatio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter by Above-Minimum Frequency Ratio — rowFilterByAboveMinRatio","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByAboveMinRatio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by Above-Minimum Frequency Ratio — rowFilterByAboveMinRatio","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample.int(n = 100, size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Filter rowFilterByAboveMinRatio(x) #>   f1   f2   f3   f4   f5  #> TRUE TRUE TRUE TRUE TRUE   #Filter by group rowFilterByAboveMinRatio(x = x, g = g) #>   f1   f2   f3   f4   f5  #> TRUE TRUE TRUE TRUE TRUE   #Set 1st feature to 0s for 2/3 observations x[1,seq(2*nc/3)] = 0  #Set 3rd feature to 0s for 2/3 observations of class \"a\" and \"b\" x[3,seq(2*nc/6)] = 0 x[3,(seq(2*nc/6)+nc/2)] = 0  #Filter (1st and 3rd features should be flagged to be removed) rowFilterByAboveMinRatio(x = x, min.expr = 10) #>    f1    f2    f3    f4    f5  #> FALSE  TRUE FALSE  TRUE  TRUE   #Filter by group (3rd feature should be flagged to be removed) rowFilterByAboveMinRatio(x = x, min.expr = 10, g = g) #>    f1    f2    f3    f4    f5  #>  TRUE  TRUE FALSE  TRUE  TRUE"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByLowVariability.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by Low Variability — rowFilterByLowVariability","title":"Filter by Low Variability — rowFilterByLowVariability","text":"function filters input matrix x depending features' variability. See rowVariability information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByLowVariability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by Low Variability — rowFilterByLowVariability","text":"","code":"rowFilterByLowVariability(   x,   g = NULL,   percentile = 0.25,   method = c(\"sd\", \"iqr\", \"mad\", \"rsd\", \"vmr\", \"efficiency\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByLowVariability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by Low Variability — rowFilterByLowVariability","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x. percentile numerical value range \\([0, 1]\\) indicating percentage features keep. method character string indicating measure variability. Available options : \"sd\" standard deviation \"iqr\" interquartile range \"mad\" median absolute deviation \"rsd\" relative standard deviation (.e., coefficient variation) \"efficiency\" coefficient variation squared \"vmr\" variance--mean ratio","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByLowVariability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by Low Variability — rowFilterByLowVariability","text":"logical vector length nrow(x) indicating rows x passed filter.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByLowVariability.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter by Low Variability — rowFilterByLowVariability","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByLowVariability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by Low Variability — rowFilterByLowVariability","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample.int(n = 100, size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Filter rowFilterByLowVariability(x) #>    f1    f2    f3    f4    f5  #> FALSE  TRUE FALSE FALSE FALSE   #Filter by group rowFilterByLowVariability(x = x, g = g) #>    f1    f2    f3    f4    f5  #> FALSE  TRUE FALSE FALSE FALSE"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMedianAboveMinExpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by Median Above Minimum Expression — rowFilterByMedianAboveMinExpr","title":"Filter by Median Above Minimum Expression — rowFilterByMedianAboveMinExpr","text":"function filters input matrix x depending features' intensity. Variables removed median values lower provided minimum. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMedianAboveMinExpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by Median Above Minimum Expression — rowFilterByMedianAboveMinExpr","text":"","code":"rowFilterByMedianAboveMinExpr(x, g = NULL, min.expr = 0)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMedianAboveMinExpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by Median Above Minimum Expression — rowFilterByMedianAboveMinExpr","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x. min.expr numerical value indicating median minimum expression required.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMedianAboveMinExpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by Median Above Minimum Expression — rowFilterByMedianAboveMinExpr","text":"logical vector length nrow(x) indicating rows x passed filter.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMedianAboveMinExpr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter by Median Above Minimum Expression — rowFilterByMedianAboveMinExpr","text":"g = NULL, median feature computed across observations via rowMedians. , -th feature kept \\(median_{} >= min.expr\\). g provided, median per group computed feature via median. , -th feature kept \\(median_{ig} >= min.expr\\) least one group.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMedianAboveMinExpr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter by Median Above Minimum Expression — rowFilterByMedianAboveMinExpr","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMedianAboveMinExpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by Median Above Minimum Expression — rowFilterByMedianAboveMinExpr","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample.int(n = 100, size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Filter rowFilterByMedianAboveMinExpr(x) #>   f1   f2   f3   f4   f5  #> TRUE TRUE TRUE TRUE TRUE   #Filter by group rowFilterByMedianAboveMinExpr(x = x, g = g) #>   f1   f2   f3   f4   f5  #> TRUE TRUE TRUE TRUE TRUE   #Set 1st feature to 0s for 2/3 observations x[1,seq(2*nc/3)] = 0  #Set 2nd feature to 0s for 2/3 observations of class \"a\" x[2,seq(2*nc/6)] = 0  #Set 3rd feature to 0s for 2/3 observations of class \"a\" and \"b\" x[3,seq(2*nc/6)] = 0 x[3,(seq(2*nc/6)+nc/2)] = 0  #Filter (1st and 3rd features should be flagged to be removed) rowFilterByMedianAboveMinExpr(x = x, min.expr = 1) #>    f1    f2    f3    f4    f5  #> FALSE  TRUE FALSE  TRUE  TRUE    #Filter by group (3rd feature should be flagged to be removed) rowFilterByMedianAboveMinExpr(x = x, g = g, min.expr = 1) #>    f1    f2    f3    f4    f5  #>  TRUE  TRUE FALSE  TRUE  TRUE"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMissingValueRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by Missing Value Ratio — rowFilterByMissingValueRatio","title":"Filter by Missing Value Ratio — rowFilterByMissingValueRatio","text":"function filters input matrix x depending presence missing values. variable removed ratio missing elements greater given percentage defined max.prop. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMissingValueRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by Missing Value Ratio — rowFilterByMissingValueRatio","text":"","code":"rowFilterByMissingValueRatio(x, g = NULL, max.prop = 0.5)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMissingValueRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by Missing Value Ratio — rowFilterByMissingValueRatio","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x. max.prop numerical value range \\([0, 1]\\). Maximum proportion samples missing values. Default 0.5.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMissingValueRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by Missing Value Ratio — rowFilterByMissingValueRatio","text":"logical vector length nrow(x) indicating rows x passed filter.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMissingValueRatio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter by Missing Value Ratio — rowFilterByMissingValueRatio","text":"g = NULL, feature missing value ratio (MVR) computed : $$Missing Value Ratio (MVR) = \\frac{Number missing values}{Total number observations}$$ , -th feature kept \\(MVR_{} < max.prop\\). g provided, missing value ratios \\(MVR_{ij}\\) computed group \\(j\\). , -th feature kept \\(MVR_{ij} < max.prop\\) group.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMissingValueRatio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter by Missing Value Ratio — rowFilterByMissingValueRatio","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowFilterByMissingValueRatio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by Missing Value Ratio — rowFilterByMissingValueRatio","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample(x = c(1,2), size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Force 1st feature to have 40% of missing values x[1,seq(nc*0.4)] = NA  #Filter a feature if has more than 50% of missing values rowFilterByMissingValueRatio(x = x, max.prop = 0.5) #>   f1   f2   f3   f4   f5  #> TRUE TRUE TRUE TRUE TRUE   #Filter a feature if has more than 30% of missing values rowFilterByMissingValueRatio(x = x, max.prop = 0.3) #>    f1    f2    f3    f4    f5  #> FALSE  TRUE  TRUE  TRUE  TRUE   #Set 3rd feature to have 40% of missing values for each class x[3,seq(nc*0.4)] = NA x[3,(seq(nc*0.4)+nc/2)] = NA  #Filter a feature if has more than 50% of missing values rowFilterByMissingValueRatio(x = x, max.prop = 0.5) #>    f1    f2    f3    f4    f5  #>  TRUE  TRUE FALSE  TRUE  TRUE   #Filter a feature if has more than 50% of missing values in any group rowFilterByMissingValueRatio(x = x, max.prop = 0.5, g = g) #>    f1    f2    f3    f4    f5  #> FALSE  TRUE FALSE  TRUE  TRUE"},{"path":"https://alebarberis.github.io/featscreen/reference/rowKendallCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Kendall's Correlation — rowKendallCor","title":"Kendall's Correlation — rowKendallCor","text":"function computes Kendall's correlation row vector x. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKendallCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kendall's Correlation — rowKendallCor","text":"","code":"rowKendallCor(   x,   y,   alternative = c(\"two.sided\", \"greater\", \"less\"),   conf.level = 0.95,   ... )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowKendallCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kendall's Correlation — rowKendallCor","text":"x matrix data.frame. y numeric vector data values. Must length ncol(x). alternative character string indicating alternative hypothesis row x. must one \"two.sided\" (default), \"greater\" \"less\". conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA. ... arguments cor.test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKendallCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kendall's Correlation — rowKendallCor","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKendallCor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kendall's Correlation — rowKendallCor","text":"wrapper cor.test function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKendallCor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Kendall's Correlation — rowKendallCor","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKendallCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kendall's Correlation — rowKendallCor","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) y = rnorm(20)  #Compute rowKendallCor(x = x, y = y) #> $statistic #>   [1]  88 113 110  93  76 109 115  93  89  64 113  93  55 106 110  58  78 104 #>  [19]  75  77  61 101 109 101  77 100  90  96 100  95  93 110  71  81 103  99 #>  [37]  85 109  77  83  97  93  87 102  87  96  82  97  92 116  97  62 117  95 #>  [55]  97  78 113  89  75  94 103 113 120  94  93  91 101  84 113 103 126  93 #>  [73]  80 103  99  85 107  88 109  82 108  55 108 103  94 104  70  63 103 123 #>  [91] 120  80 117 120  74  96  84  91  80  76 #>  #> $significance #>   [1] 0.677108239 0.259839989 0.351394858 0.923502331 0.233266557 0.385857151 #>   [7] 0.208628398 0.923502331 0.724636221 0.046768937 0.259839989 0.923502331 #>  [13] 0.009056382 0.500609627 0.351394858 0.016406081 0.288378196 0.585858446 #>  [19] 0.208628398 0.259839989 0.028328627 0.724636221 0.385857151 0.724636221 #>  [25] 0.259839989 0.773219475 0.773219475 0.974466903 0.773219475 1.000000000 #>  [31] 0.923502331 0.351394858 0.128413511 0.385857151 0.630798946 0.822682885 #>  [37] 0.542422145 0.385857151 0.259839989 0.460523794 0.923502331 0.923502331 #>  [43] 0.630798946 0.677108239 0.630798946 0.974466903 0.422250282 0.923502331 #>  [49] 0.872841460 0.185883043 0.923502331 0.033643947 0.164976406 1.000000000 #>  [55] 0.923502331 0.288378196 0.259839989 0.724636221 0.208628398 0.974466903 #>  [61] 0.630798946 0.259839989 0.112604127 0.974466903 0.923502331 0.822682885 #>  [67] 0.724636221 0.500609627 0.259839989 0.630798946 0.046768937 0.923502331 #>  [73] 0.351394858 0.630798946 0.822682885 0.542422145 0.460523794 0.677108239 #>  [79] 0.385857151 0.422250282 0.422250282 0.009056382 0.422250282 0.630798946 #>  [85] 0.974466903 0.585858446 0.112604127 0.039762137 0.630798946 0.074025729 #>  [91] 0.112604127 0.351394858 0.164976406 0.112604127 0.185883043 0.974466903 #>  [97] 0.500609627 0.822682885 0.351394858 0.233266557 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowKruskalWallis.html","id":null,"dir":"Reference","previous_headings":"","what":"Kruskal-Wallis Rank Sum Test — rowKruskalWallis","title":"Kruskal-Wallis Rank Sum Test — rowKruskalWallis","text":"Computes Kruskal-Wallis rank sum test feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKruskalWallis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kruskal-Wallis Rank Sum Test — rowKruskalWallis","text":"","code":"rowKruskalWallis(x, g)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowKruskalWallis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kruskal-Wallis Rank Sum Test — rowKruskalWallis","text":"x matrix data.frame. g vector factor object giving group corresponding elements x.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKruskalWallis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kruskal-Wallis Rank Sum Test — rowKruskalWallis","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKruskalWallis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kruskal-Wallis Rank Sum Test — rowKruskalWallis","text":"wrapper row_kruskalwallis function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKruskalWallis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Kruskal-Wallis Rank Sum Test — rowKruskalWallis","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowKruskalWallis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kruskal-Wallis Rank Sum Test — rowKruskalWallis","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = sample(c(0,1), 20, replace = TRUE)  #Compute rowKruskalWallis(x = x, g = g) #> $statistic #>   [1] 0.076923077 0.692307692 3.467817896 0.039246468 1.709576138 0.353218210 #>   [7] 0.014128728 0.001569859 0.039246468 0.001569859 3.769230769 7.474097331 #>  [13] 0.014128728 0.692307692 7.913657771 0.265306122 0.001569859 6.632653061 #>  [19] 0.265306122 0.566718995 0.692307692 0.001569859 0.453689168 0.127158556 #>  [25] 2.149136578 4.409733124 0.039246468 3.178963893 0.265306122 1.144427002 #>  [31] 0.453689168 1.144427002 1.320251177 0.127158556 0.127158556 5.464678179 #>  [37] 0.039246468 1.320251177 0.566718995 1.144427002 0.014128728 0.830455259 #>  [43] 0.265306122 1.709576138 5.100470958 0.076923077 0.001569859 0.001569859 #>  [49] 2.149136578 0.981161695 2.638932496 0.039246468 0.981161695 0.353218210 #>  [55] 0.189952904 1.709576138 0.981161695 0.189952904 1.320251177 0.189952904 #>  [61] 0.001569859 0.039246468 0.127158556 0.189952904 0.566718995 0.076923077 #>  [67] 0.265306122 0.353218210 1.320251177 0.001569859 2.902668760 3.178963893 #>  [73] 0.566718995 0.566718995 1.320251177 0.076923077 2.387755102 1.508634223 #>  [79] 0.001569859 0.692307692 2.387755102 6.632653061 1.320251177 0.001569859 #>  [85] 0.039246468 1.144427002 0.265306122 0.189952904 1.508634223 0.014128728 #>  [91] 3.178963893 0.353218210 1.144427002 0.127158556 0.127158556 0.076923077 #>  [97] 0.453689168 0.353218210 2.387755102 0.039246468 #>  #> $significance #>   [1] 0.781511295 0.405380556 0.062573805 0.842961182 0.191040374 0.552297008 #>   [7] 0.905382844 0.968394932 0.842961182 0.968394932 0.052203635 0.006259294 #>  [13] 0.905382844 0.405380556 0.004906297 0.606497989 0.968394932 0.010012603 #>  [19] 0.606497989 0.451565654 0.405380556 0.968394932 0.500588214 0.721396531 #>  [25] 0.142650092 0.035734431 0.842961182 0.074592015 0.606497989 0.284718820 #>  [31] 0.500588214 0.284718820 0.250546977 0.721396531 0.721396531 0.019404627 #>  [37] 0.842961182 0.250546977 0.451565654 0.284718820 0.905382844 0.362140919 #>  [43] 0.606497989 0.191040374 0.023919348 0.781511295 0.968394932 0.968394932 #>  [49] 0.142650092 0.321912170 0.104273588 0.842961182 0.321912170 0.552297008 #>  [55] 0.662955818 0.191040374 0.321912170 0.662955818 0.250546977 0.662955818 #>  [61] 0.968394932 0.842961182 0.721396531 0.662955818 0.451565654 0.781511295 #>  [67] 0.606497989 0.552297008 0.250546977 0.968394932 0.088433030 0.074592015 #>  [73] 0.451565654 0.451565654 0.250546977 0.781511295 0.122289126 0.219347610 #>  [79] 0.968394932 0.405380556 0.122289126 0.010012603 0.250546977 0.968394932 #>  [85] 0.842961182 0.284718820 0.606497989 0.662955818 0.219347610 0.905382844 #>  [91] 0.074592015 0.552297008 0.284718820 0.721396531 0.721396531 0.781511295 #>  [97] 0.500588214 0.552297008 0.122289126 0.842961182 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowMedians.html","id":null,"dir":"Reference","previous_headings":"","what":"Medians — rowMedians","title":"Medians — rowMedians","text":"function computes median value feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMedians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Medians — rowMedians","text":"","code":"rowMedians(x, g = NULL)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowMedians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Medians — rowMedians","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMedians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Medians — rowMedians","text":"vector length nrow(x) containing computed ratios. g provided, matrix ratios class column vectors returned.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMedians.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Medians — rowMedians","text":"g = NULL, feature median computed via rowMedians. g provided, median per group computed via median.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMedians.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Medians — rowMedians","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMedians.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Medians — rowMedians","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample.int(n = 100, size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Medians rowMedians(x) #>   f1   f2   f3   f4   f5  #> 55.5 42.5 66.5 44.0 25.0   #Medians by group rowMedians(x = x, g = g) #>     a  b #> f1 75 35 #> f2 39 46 #> f3 75 63 #> f4 62 29 #> f5 28 22"},{"path":"https://alebarberis.github.io/featscreen/reference/rowMissingValueRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing Value Ratio — rowMissingValueRatio","title":"Missing Value Ratio — rowMissingValueRatio","text":"function computes ratio missing elements. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMissingValueRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing Value Ratio — rowMissingValueRatio","text":"","code":"rowMissingValueRatio(x, g = NULL)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowMissingValueRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing Value Ratio — rowMissingValueRatio","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMissingValueRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing Value Ratio — rowMissingValueRatio","text":"vector length nrow(x) containing computed ratios. g provided, matrix ratios class column vectors returned.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMissingValueRatio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Missing Value Ratio — rowMissingValueRatio","text":"g = NULL, feature missing value ratio (MVR) computed : $$Missing Value Ratio (MVR) = \\frac{Number missing values}{Total number observations}$$ g provided, missing value ratios \\(MVR_{ij}\\) computed group \\(j\\) : $$MVR_{ij} = \\frac{Number missing values j-th class}{Number observations j-th class}$$","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMissingValueRatio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Missing Value Ratio — rowMissingValueRatio","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowMissingValueRatio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing Value Ratio — rowMissingValueRatio","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample(x = c(1,2), size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Force 1st feature to have 40% of missing values x[1,seq(nc*0.4)] = NA  #Compute MVR rowMissingValueRatio(x = x) #>  f1  f2  f3  f4  f5  #> 0.4 0.0 0.0 0.0 0.0   #Compute MVR by class rowMissingValueRatio(x = x, g = g) #>      a b #> f1 0.8 0 #> f2 0.0 0 #> f3 0.0 0 #> f4 0.0 0 #> f5 0.0 0"},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedOneWayAnova.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical Bayes Moderated F-Statistic — rowModeratedOneWayAnova","title":"Empirical Bayes Moderated F-Statistic — rowModeratedOneWayAnova","text":"function implements common workflow fit linear models compute moderated moderated F-statistic empirical Bayes moderation standard errors towards global value. input data generated microarray technology, following steps executed: linear model fitting feature: lmFit compute coefficients standard errors given set contrasts: contrasts.fit compute moderated moderated F-statistic: eBayes summarise linear model fit: topTable input data generated RNA-seq technology, following steps executed: (optional) transform count data linear modelling: voom linear model fitting feature: lmFit compute coefficients standard errors given set contrasts: contrasts.fit compute moderated moderated F-statistic: eBayes summarise linear model fit: topTable complete details step see manual pages respective functions.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedOneWayAnova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical Bayes Moderated F-Statistic — rowModeratedOneWayAnova","text":"","code":"rowModeratedOneWayAnova(   x,   y = NULL,   observations = NULL,   technology = c(\"array\", \"seq\"),   is.logged = TRUE,   mean.variance = c(\"ebayes\", \"weights\"),   span = 0.5,   method = c(\"ls\", \"robust\"),   design = NULL,   weights = NULL,   ndups = NULL,   spacing = NULL,   block = NULL,   correlation = NULL,   contrasts = NULL,   proportion = 0.01,   stdev.coef.lim = c(0.1, 4),   robust = FALSE,   winsor.tail.p = c(0.05, 0.1),   coef = NULL,   adjust.method = \"BH\",   logger = NULL,   ... )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedOneWayAnova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical Bayes Moderated F-Statistic — rowModeratedOneWayAnova","text":"x matrix-like data object rows corresponding genes columns observations. y vector, factor matrix. used create design matrix explicitly provided via design argument. observations (optional) integer vector, indices observations keep. technology character string, technology used generate data. Available options : array data generated microarray technology seq data generated RNA-seq technology .logged logical, whether original data already logged. .logged = FALSE, data internally transformed. mean.variance character string indicating whether mean-variance relationship modeled precision weights (mean.variance = \"weights\") empirical Bayes prior trend (mean.variance = \"ebayes\"). span width smoothing window used lowess mean-variance trend.     Expressed proportion 0 1. method fitting method; \"ls\" least squares \"robust\" robust regression design design matrix microarray experiment, rows corresponding samples columns coefficients estimated.   Defaults object$design non-NULL, otherwise unit vector meaning samples treated replicates single treatment group. weights non-negative precision weights.  Can numeric matrix individual weights size object expression matrix, numeric vector array weights length equal ncol expression matrix, numeric vector gene weights length equal nrow expression matrix. ndups positive integer giving number times distinct probe printed array. spacing positive integer giving spacing duplicate occurrences probe, spacing=1 consecutive rows. block vector factor specifying blocking variable arrays. length equal number arrays. Must NULL ndups>2. correlation inter-duplicate inter-technical replicate correlation contrasts numeric matrix rows corresponding coefficients fit columns containing contrasts. May vector one contrast. NAs allowed. proportion numeric value 0 1, assumed proportion genes differentially expressed stdev.coef.lim numeric vector length 2, assumed lower upper limits standard deviation log2-fold-changes differentially expressed genes robust logical, estimation df.prior var.prior robustified outlier sample variances? winsor.tail.p numeric vector length 1 2, giving left right tail proportions x Winsorize. Used robust=TRUE. coef column number column name specifying coefficient contrast linear model interest. topTable, can also vector column subscripts, case gene ranking F-statistic set contrasts. adjust.method method used adjust p-values multiple testing.  Options, increasing conservatism, include \"none\", \"BH\", \"\" \"holm\".   See p.adjust complete list options. NULL value result default adjustment method, \"BH\". logger Logger object. ... arguments lmFit.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedOneWayAnova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical Bayes Moderated F-Statistic — rowModeratedOneWayAnova","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedOneWayAnova.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Empirical Bayes Moderated F-Statistic — rowModeratedOneWayAnova","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedOneWayAnova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical Bayes Moderated F-Statistic — rowModeratedOneWayAnova","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 20 nc = 20  #Data x = matrix(  data = stats::rnorm(n = nr*nc),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"g\",seq(nr)),    paste0(\"S\",seq(nc))  ) )   #Categorical output vector (multinomial) y = sample(x = c(\"I\",\"II\",\"III\"),size=nc,replace=TRUE) names(y) = paste0(\"S\",seq(nc)) rowEBayesStatistics(x=x,y=y) #> $statistic #>  [1] 0.3141577 0.2767571 0.4573615 0.1812941 1.7104698 0.7240608 2.0080201 #>  [8] 0.7933097 0.3971676 0.4476769 0.1849767 0.5861202 0.8748885 1.5961187 #> [15] 1.1681319 0.9266135 0.3693172 1.6185753 0.7700783 2.5076014 #>  #> $significance #>  [1] 0.81515997 0.84219337 0.71216352 0.90911667 0.16330960 0.53775239 #>  [7] 0.11132285 0.49775168 0.75507606 0.71900680 0.90663455 0.62421406 #> [13] 0.45362805 0.18883625 0.32087593 0.42732238 0.77517234 0.18354502 #> [19] 0.51091086 0.05772779 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedT.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical Bayes Moderated t-Statistic — rowModeratedT","title":"Empirical Bayes Moderated t-Statistic — rowModeratedT","text":"function implements common workflow fit linear models compute moderated moderated t-statistic empirical Bayes moderation standard errors towards global value. input data generated microarray technology, following steps executed: linear model fitting feature: lmFit compute coefficients standard errors given set contrasts: contrasts.fit compute moderated t-statistics: eBayes summarise linear model fit: topTable input data generated RNA-seq technology, following steps executed: (optional) transform count data linear modelling: voom linear model fitting feature: lmFit compute coefficients standard errors given set contrasts: contrasts.fit compute moderated t-statistics: eBayes summarise linear model fit: topTable complete details step see manual pages respective functions.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical Bayes Moderated t-Statistic — rowModeratedT","text":"","code":"rowModeratedT(   x,   y = NULL,   observations = NULL,   technology = c(\"array\", \"seq\"),   is.logged = TRUE,   mean.variance = c(\"ebayes\", \"weights\"),   span = 0.5,   method = c(\"ls\", \"robust\"),   design = NULL,   weights = NULL,   ndups = NULL,   spacing = NULL,   block = NULL,   correlation = NULL,   contrasts = NULL,   proportion = 0.01,   stdev.coef.lim = c(0.1, 4),   robust = FALSE,   winsor.tail.p = c(0.05, 0.1),   coef = NULL,   adjust.method = \"BH\",   logger = NULL,   ... )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical Bayes Moderated t-Statistic — rowModeratedT","text":"x matrix-like data object rows corresponding genes columns observations. y vector, factor matrix. used create design matrix explicitly provided via design argument. observations (optional) integer vector, indices observations keep. technology character string, technology used generate data. Available options : array data generated microarray technology seq data generated RNA-seq technology .logged logical, whether original data already logged. .logged = FALSE, data internally transformed. mean.variance character string indicating whether mean-variance relationship modeled precision weights (mean.variance = \"weights\") empirical Bayes prior trend (mean.variance = \"ebayes\"). span width smoothing window used lowess mean-variance trend.     Expressed proportion 0 1. method fitting method; \"ls\" least squares \"robust\" robust regression design design matrix microarray experiment, rows corresponding samples columns coefficients estimated.   Defaults object$design non-NULL, otherwise unit vector meaning samples treated replicates single treatment group. weights non-negative precision weights.  Can numeric matrix individual weights size object expression matrix, numeric vector array weights length equal ncol expression matrix, numeric vector gene weights length equal nrow expression matrix. ndups positive integer giving number times distinct probe printed array. spacing positive integer giving spacing duplicate occurrences probe, spacing=1 consecutive rows. block vector factor specifying blocking variable arrays. length equal number arrays. Must NULL ndups>2. correlation inter-duplicate inter-technical replicate correlation contrasts numeric matrix rows corresponding coefficients fit columns containing contrasts. May vector one contrast. NAs allowed. proportion numeric value 0 1, assumed proportion genes differentially expressed stdev.coef.lim numeric vector length 2, assumed lower upper limits standard deviation log2-fold-changes differentially expressed genes robust logical, estimation df.prior var.prior robustified outlier sample variances? winsor.tail.p numeric vector length 1 2, giving left right tail proportions x Winsorize. Used robust=TRUE. coef column number column name specifying coefficient contrast linear model interest. topTable, can also vector column subscripts, case gene ranking F-statistic set contrasts. adjust.method method used adjust p-values multiple testing.  Options, increasing conservatism, include \"none\", \"BH\", \"\" \"holm\".   See p.adjust complete list options. NULL value result default adjustment method, \"BH\". logger Logger object. ... arguments lmFit.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical Bayes Moderated t-Statistic — rowModeratedT","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Empirical Bayes Moderated t-Statistic — rowModeratedT","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowModeratedT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical Bayes Moderated t-Statistic — rowModeratedT","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 20 nc = 20  #Data x = matrix(  data = stats::rnorm(n = nr*nc),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"g\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Categorical output vector (binomial) y = c(rep(\"wt\",nc/2), rep(\"mut\",nc/2)) names(y) = paste0(\"S\",seq(nc)) rowEBayesStatistics(x=x,y=y) #> $statistic #>  [1] 1.48314728 0.26127447 0.17149946 2.23891417 0.82910469 0.24320947 #>  [7] 2.81785282 1.14802510 0.44767056 0.04352112 0.02997531 0.92414587 #> [13] 1.60206921 1.45753831 0.21663719 0.55468754 0.92130594 0.62506081 #> [19] 0.02202450 1.13335883 #>  #> $significance #>  [1] 0.22692238 0.77006953 0.84240072 0.10657416 0.43643986 0.78410725 #>  [7] 0.05973406 0.31726271 0.63911520 0.95741234 0.97046949 0.39687025 #> [13] 0.20147918 0.23280867 0.80522206 0.57425166 0.39799894 0.53522888 #> [19] 0.97821627 0.32195006 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowOneWayAnova.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an Analysis of Variance Model — rowOneWayAnova","title":"Fit an Analysis of Variance Model — rowOneWayAnova","text":"Computes one-way analysis variance test feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowOneWayAnova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an Analysis of Variance Model — rowOneWayAnova","text":"","code":"rowOneWayAnova(x, g, var = c(\"unequal\", \"equal\"))"},{"path":"https://alebarberis.github.io/featscreen/reference/rowOneWayAnova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an Analysis of Variance Model — rowOneWayAnova","text":"x numeric matrix. g vector specifying group membership observation x. var character string, indicating whether groups \"equal\" \"unequal\" (default) variances","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowOneWayAnova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an Analysis of Variance Model — rowOneWayAnova","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowOneWayAnova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an Analysis of Variance Model — rowOneWayAnova","text":"wrapper row_oneway_equalvar function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowOneWayAnova.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit an Analysis of Variance Model — rowOneWayAnova","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowOneWayAnova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an Analysis of Variance Model — rowOneWayAnova","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = sample(c(0,1), 20, replace = TRUE)  #Compute one-way analysis of variance rowOneWayAnova(x = x, g = g, var = \"equal\") #> $statistic #>   [1] 6.175662e-01 1.142795e+00 3.373973e+00 7.497984e-02 1.391426e+00 #>   [6] 3.693834e-01 2.206839e-03 1.337518e-01 1.393143e-01 1.867596e-04 #>  [11] 1.052904e+00 1.307385e+01 5.739056e-02 7.198392e-01 8.443845e+00 #>  [16] 4.173536e-02 3.927375e-02 8.502934e+00 3.000569e-01 1.298206e+00 #>  [21] 7.850476e-01 1.219352e-03 2.220413e-01 1.085044e-01 2.457722e+00 #>  [26] 2.851262e+00 5.001434e-01 3.050954e+00 6.751124e-01 1.425549e+00 #>  [31] 9.876122e-02 2.123565e-01 1.786957e+00 5.387085e-02 1.830630e-01 #>  [36] 7.907822e+00 1.404200e-01 1.887882e+00 9.987513e-01 1.153725e+00 #>  [41] 7.991206e-02 1.595998e+00 2.788211e-01 1.637761e+00 6.795809e+00 #>  [46] 6.509314e-02 7.023671e-02 2.777753e-02 1.698515e+00 1.805773e+00 #>  [51] 1.657147e+00 1.561988e-03 9.443359e-01 3.021035e-01 3.829611e-01 #>  [56] 1.801679e+00 9.344037e-01 4.171424e-01 1.159628e+00 1.463029e-01 #>  [61] 1.619973e-03 7.273319e-02 5.191157e-02 5.580119e-03 1.368136e-01 #>  [66] 3.483534e-01 3.600077e-01 2.543502e-01 1.289645e+00 2.090509e-03 #>  [71] 3.617872e+00 3.677760e+00 6.072455e-01 7.851055e-01 2.769109e+00 #>  [76] 2.926726e-01 2.105485e+00 1.654725e+00 3.870242e-02 6.183033e-01 #>  [81] 1.645710e+00 9.626418e+00 1.629068e+00 8.806703e-02 8.105337e-02 #>  [86] 3.992556e-01 2.373407e-01 1.654598e-01 1.068649e+00 5.158298e-03 #>  [91] 2.883852e+00 7.927073e-01 1.372184e+00 5.624146e-02 1.004130e-01 #>  [96] 5.893066e-02 2.731018e-01 1.656353e-01 1.971405e+00 1.539184e-01 #>  #> $significance #>   [1] 0.442175859 0.299189535 0.082803822 0.787336975 0.253520606 0.550932350 #>   [7] 0.963048844 0.718835880 0.713323057 0.989246781 0.318432101 0.001976585 #>  [13] 0.813375570 0.407338394 0.009425943 0.840417168 0.845128304 0.009221409 #>  [19] 0.590575494 0.269477549 0.387286174 0.972528477 0.643149627 0.745655395 #>  [25] 0.134359728 0.108550730 0.488492833 0.097731175 0.422025211 0.247990429 #>  [31] 0.756934565 0.650445702 0.197948760 0.819077950 0.673829370 0.011533983 #>  [37] 0.712242269 0.186310456 0.330859053 0.296959476 0.780641688 0.222590206 #>  [43] 0.603924431 0.216882408 0.017839470 0.801512307 0.794003581 0.869490854 #>  [49] 0.208907405 0.195711365 0.214296244 0.968909274 0.344043779 0.589321984 #>  [55] 0.543775817 0.196195449 0.346530494 0.526515332 0.295764322 0.706572649 #>  [61] 0.968337774 0.790465508 0.822337813 0.941277182 0.715785572 0.562383956 #>  [67] 0.555980978 0.620146075 0.271008680 0.964035200 0.073287907 0.071150524 #>  [73] 0.445951945 0.387269020 0.113411033 0.595145435 0.163976809 0.214617187 #>  [79] 0.846243578 0.441908164 0.215817215 0.006143642 0.218054907 0.770046205 #>  [85] 0.779124524 0.535417486 0.632013346 0.688974669 0.314940928 0.943536143 #>  [91] 0.106691505 0.385028695 0.256710368 0.815216383 0.754980309 0.810938795 #>  [97] 0.607631515 0.688819158 0.177317919 0.699425299 #>   #Compute one-way analysis of variance with Welch correction rowOneWayAnova(x = x, g = g) #> $statistic #>   [1] 8.916031e-01 1.099033e+00 2.582175e+00 7.518515e-02 2.035640e+00 #>   [6] 2.677994e-01 1.894486e-03 1.169271e-01 1.702897e-01 2.012154e-04 #>  [11] 1.646617e+00 1.381326e+01 6.321682e-02 9.411447e-01 7.969342e+00 #>  [16] 4.603139e-02 3.435455e-02 6.960313e+00 3.138337e-01 9.638504e-01 #>  [21] 7.114030e-01 1.306512e-03 1.621167e-01 1.049471e-01 2.100979e+00 #>  [26] 2.268712e+00 4.226855e-01 3.435337e+00 9.029074e-01 1.084025e+00 #>  [31] 1.078762e-01 2.141863e-01 2.344181e+00 4.181963e-02 1.954188e-01 #>  [36] 7.172773e+00 2.433598e-01 1.620515e+00 8.769713e-01 1.722764e+00 #>  [41] 6.437042e-02 2.424702e+00 3.825107e-01 1.301477e+00 5.048114e+00 #>  [46] 6.496613e-02 5.148398e-02 4.029883e-02 2.587207e+00 1.297710e+00 #>  [51] 1.575327e+00 1.512358e-03 9.406518e-01 3.464681e-01 3.096683e-01 #>  [56] 1.869932e+00 1.037205e+00 4.234893e-01 1.097537e+00 1.137047e-01 #>  [61] 1.489393e-03 7.355277e-02 6.447568e-02 4.547635e-03 1.660285e-01 #>  [66] 3.691790e-01 4.379864e-01 2.588221e-01 1.346407e+00 2.446432e-03 #>  [71] 3.355627e+00 5.909533e+00 6.742883e-01 6.268341e-01 3.644805e+00 #>  [76] 2.634236e-01 2.153229e+00 1.765084e+00 3.484087e-02 5.815123e-01 #>  [81] 1.451825e+00 9.365198e+00 1.074278e+00 7.870752e-02 7.401629e-02 #>  [86] 3.590715e-01 2.189886e-01 1.423922e-01 1.074156e+00 3.446317e-03 #>  [91] 2.228390e+00 6.356445e-01 1.840563e+00 5.215740e-02 1.057160e-01 #>  [96] 4.573399e-02 3.371221e-01 2.079691e-01 1.780421e+00 1.239888e-01 #>  #> $significance #>   [1] 0.357546542 0.315579577 0.143541088 0.788427889 0.170785159 0.618448064 #>   [7] 0.966133510 0.739258268 0.685262850 0.988885750 0.216259927 0.002463609 #>  [13] 0.805083386 0.345363101 0.016020246 0.833163326 0.856546887 0.025884019 #>  [19] 0.584709770 0.353520348 0.417237047 0.971688698 0.697406692 0.751624963 #>  [25] 0.177787064 0.165715579 0.530443544 0.084087040 0.354896341 0.325946862 #>  [31] 0.747422508 0.651425358 0.143801000 0.842570767 0.665393206 0.021734843 #>  [37] 0.628924895 0.231627831 0.370324866 0.205931909 0.805242506 0.137089835 #>  [43] 0.544094849 0.282956217 0.053142710 0.803000924 0.825977103 0.843148800 #>  [49] 0.125400567 0.287042115 0.234229224 0.969626195 0.350744477 0.564883009 #>  [55] 0.590972139 0.194535992 0.325333058 0.526826696 0.316358083 0.743782125 #>  [61] 0.969904597 0.790624441 0.802696381 0.947643363 0.689041506 0.553564477 #>  [67] 0.517446270 0.619644873 0.266493436 0.961188009 0.093758391 0.026476980 #>  [73] 0.424983925 0.448468792 0.072901699 0.618188949 0.166404162 0.205878620 #>  [79] 0.855414010 0.461230641 0.254846551 0.009952655 0.332471228 0.784446871 #>  [85] 0.790645951 0.561485060 0.648875791 0.713721076 0.319653299 0.954712246 #>  [91] 0.170304775 0.445296545 0.192036848 0.823479844 0.750119182 0.835487756 #>  [97] 0.569398045 0.654248100 0.209624649 0.732602584 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedT.html","id":null,"dir":"Reference","previous_headings":"","what":"Paired t-Test — rowPairedT","title":"Paired t-Test — rowPairedT","text":"Computes paired two-sample Student's t-test feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paired t-Test — rowPairedT","text":"","code":"rowPairedT(   x,   g,   null = 0,   alternative = c(\"two.sided\", \"greater\", \"less\"),   conf.level = 0.95 )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paired t-Test — rowPairedT","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. null numerical value numeric vector length nrow(x). true values difference means two groups observations row. alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paired t-Test — rowPairedT","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Paired t-Test — rowPairedT","text":"wrapper row_t_paired function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Paired t-Test — rowPairedT","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paired t-Test — rowPairedT","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = c(rep(0,10),rep(1,10))  #Compute rowPairedT(x = x, g = g) #> $statistic #>   [1]  0.105846642 -1.226066457  0.933934421 -1.188231761  3.464396651 #>   [6]  0.842077479  1.144499292 -0.173302153 -0.806080402  0.558394598 #>  [11] -0.985378713 -2.713690594 -0.653815335 -1.654687005  1.031975003 #>  [16] -0.494881934  0.449574782 -1.803658453  0.215272438  0.139165914 #>  [21] -0.356861393  3.426546800 -2.032570216 -1.047425674 -0.579835348 #>  [26]  0.616875137  0.575104052 -0.477912629 -1.320900894 -1.919637167 #>  [31] -0.704886562  4.363388296  2.098441892 -0.314608823 -1.731951723 #>  [36]  1.018514762 -0.296800214 -0.915867468 -1.483291946 -0.999254476 #>  [41] -0.005859077 -0.279279608 -1.187075604  0.344343077  0.938509422 #>  [46] -0.529167965  1.942391536  1.240516329  1.168882007  3.679833178 #>  [51]  2.225412187  1.375351762 -1.325044174  0.874555960  1.228400760 #>  [56] -2.935832351  0.290564498  0.135850613  1.497595462 -1.522978283 #>  [61]  0.894265416 -2.442443525  0.430641608  0.057264512 -0.179048797 #>  [66] -1.399424743 -0.858911640 -2.472199259 -1.161983005 -0.187989620 #>  [71] -0.093156228 -2.679082345 -0.308042742 -0.236298424 -0.358293729 #>  [76] -1.906006842 -0.039285775  1.956415638 -0.237303229  1.009791671 #>  [81] -0.706780344 -0.920758455  0.113955442 -0.274247407  0.648897152 #>  [86] -0.502341383  1.162301553 -0.050237610  0.285373393 -1.281896029 #>  [91]  1.014856566  2.065955751 -0.986794564  1.038803611  1.457049907 #>  [96]  0.800263487 -0.790084646 -1.367524716  1.205469111 -1.789471257 #>  #> $significance #>   [1] 0.918025662 0.251285313 0.374715471 0.265150997 0.007111320 0.421556589 #>   [7] 0.281941054 0.866248992 0.440974411 0.590194360 0.350185799 0.023852928 #>  [13] 0.529579909 0.132373864 0.329017211 0.632539543 0.663648866 0.104782066 #>  [19] 0.834354129 0.892383391 0.729419519 0.007549351 0.072632160 0.322216585 #>  [25] 0.576251176 0.552600390 0.579312274 0.644106442 0.219132110 0.087107106 #>  [31] 0.498715006 0.001814482 0.065283135 0.760229868 0.117325052 0.335030238 #>  [37] 0.773354682 0.383620146 0.172147130 0.343778169 0.995452976 0.786341966 #>  [43] 0.265584277 0.738497450 0.372484537 0.609490560 0.083986374 0.246148506 #>  [49] 0.272477973 0.005076784 0.053092953 0.202284235 0.217809707 0.404548850 #>  [55] 0.250449590 0.016598828 0.777968661 0.894929437 0.168463117 0.162096094 #>  [61] 0.394465405 0.037215173 0.676858202 0.955585711 0.861865313 0.195195361 #>  [67] 0.412680398 0.035442158 0.275129352 0.855055017 0.927820245 0.025243991 #>  [73] 0.765059856 0.818491190 0.728383631 0.089028641 0.969520207 0.082116053 #>  [79] 0.817735236 0.338971204 0.497592376 0.381194616 0.911774743 0.790085272 #>  [85] 0.532611568 0.627487859 0.275006476 0.961030320 0.781816739 0.231914966 #>  [91] 0.336678726 0.068813325 0.349527929 0.325998229 0.179089885 0.444167975 #>  [97] 0.449793471 0.204636031 0.258758723 0.107160561 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedWilcoxonT.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilcoxon Signed-Rank Test — rowPairedWilcoxonT","title":"Wilcoxon Signed-Rank Test — rowPairedWilcoxonT","text":"Computes two-sample Wilcoxon signed-rank test feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedWilcoxonT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilcoxon Signed-Rank Test — rowPairedWilcoxonT","text":"","code":"rowPairedWilcoxonT(   x,   g,   alternative = c(\"two.sided\", \"greater\", \"less\"),   null = 0,   exact = NA,   correct = TRUE )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedWilcoxonT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilcoxon Signed-Rank Test — rowPairedWilcoxonT","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". null numerical value numeric vector length nrow(x). true values difference means two groups observations row. exact logical NA (default) indicator whether exact p-value computed (see Details). single value logical vector values observation. correct logical indicator whether continuity correction applied cases p-values obtained using normal approximation. single value logical vector values observation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedWilcoxonT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilcoxon Signed-Rank Test — rowPairedWilcoxonT","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedWilcoxonT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wilcoxon Signed-Rank Test — rowPairedWilcoxonT","text":"wrapper row_wilcoxon_paired function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedWilcoxonT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wilcoxon Signed-Rank Test — rowPairedWilcoxonT","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPairedWilcoxonT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wilcoxon Signed-Rank Test — rowPairedWilcoxonT","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = c(rep(0,10),rep(1,10))  #Compute rowPairedWilcoxonT(x = x, g = g) #> $statistic #>   [1] 30 18 36 16 52 38 37 19 22 35 22  8 19 12 37 24 28 12 30 30 23 51  9 16 27 #>  [26] 33 31 20 18 12 20 52 43 30 12 40 21 17 14 20 27 29 17 33 29 22 44 36 39 52 #>  [51] 48 40 13 40 33  7 28 26 42 14 35  6 33 30 26 15 21  7 18 28 27  8 24 18 21 #>  [76]  8 29 44 22 36 21 18 28 23 32 19 35 30 32 16 38 44 20 35 46 37 19 15 37 11 #>  #> $significance #>   [1] 0.845703125 0.375000000 0.431640625 0.275390625 0.009765625 0.322265625 #>   [7] 0.375000000 0.431640625 0.625000000 0.492187500 0.625000000 0.048828125 #>  [13] 0.431640625 0.130859375 0.375000000 0.769531250 1.000000000 0.130859375 #>  [19] 0.845703125 0.845703125 0.695312500 0.013671875 0.064453125 0.275390625 #>  [25] 1.000000000 0.625000000 0.769531250 0.492187500 0.375000000 0.130859375 #>  [31] 0.492187500 0.009765625 0.130859375 0.845703125 0.130859375 0.232421875 #>  [37] 0.556640625 0.322265625 0.193359375 0.492187500 1.000000000 0.921875000 #>  [43] 0.322265625 0.625000000 0.921875000 0.625000000 0.105468750 0.431640625 #>  [49] 0.275390625 0.009765625 0.037109375 0.232421875 0.160156250 0.232421875 #>  [55] 0.625000000 0.037109375 1.000000000 0.921875000 0.160156250 0.193359375 #>  [61] 0.492187500 0.027343750 0.625000000 0.845703125 0.921875000 0.232421875 #>  [67] 0.556640625 0.037109375 0.375000000 1.000000000 1.000000000 0.048828125 #>  [73] 0.769531250 0.375000000 0.556640625 0.048828125 0.921875000 0.105468750 #>  [79] 0.625000000 0.431640625 0.556640625 0.375000000 1.000000000 0.695312500 #>  [85] 0.695312500 0.431640625 0.492187500 0.845703125 0.695312500 0.275390625 #>  [91] 0.322265625 0.105468750 0.492187500 0.492187500 0.064453125 0.375000000 #>  [97] 0.431640625 0.232421875 0.375000000 0.105468750 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonChiSq.html","id":null,"dir":"Reference","previous_headings":"","what":"Pearson's Chi-squared Test of Independence — rowPearsonChiSq","title":"Pearson's Chi-squared Test of Independence — rowPearsonChiSq","text":"Computes Pearson's Chi-squared test independence row vector x. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonChiSq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pearson's Chi-squared Test of Independence — rowPearsonChiSq","text":"","code":"rowPearsonChiSq(x, g, correct = TRUE, simulate.p.value = FALSE, B = 2000)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonChiSq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pearson's Chi-squared Test of Independence — rowPearsonChiSq","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. correct logical indicating whether apply continuity     correction computing test statistic 2 2 tables: one     half subtracted \\(|O - E|\\) differences; however,     correction bigger differences .  correction     done simulate.p.value = TRUE. simulate.p.value logical indicating whether compute     p-values Monte Carlo simulation. B integer specifying number replicates used     Monte Carlo test.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonChiSq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pearson's Chi-squared Test of Independence — rowPearsonChiSq","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonChiSq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pearson's Chi-squared Test of Independence — rowPearsonChiSq","text":"wrapper chisq.test function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonChiSq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pearson's Chi-squared Test of Independence — rowPearsonChiSq","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonChiSq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pearson's Chi-squared Test of Independence — rowPearsonChiSq","text":"","code":"#Seed set.seed(1010)  #Data x = rbind(   matrix(sample(c(\"mut\", \"wt\"),30,TRUE), 1, 30),   matrix(sample(c(\"m\", \"f\")   ,30,TRUE), 1, 30) ) g = sample(c(\"a\",\"b\",\"c\"), 30, replace = TRUE)  #Compute rowPearsonChiSq(x = x, g = g, simulate.p.value = TRUE) #> $statistic #> [1] 0.2020202 2.5689935 #>  #> $significance #> [1] 1.0000000 0.3098451 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Pearson's Correlation — rowPearsonCor","title":"Pearson's Correlation — rowPearsonCor","text":"function computes Pearson's correlation row vector x. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pearson's Correlation — rowPearsonCor","text":"","code":"rowPearsonCor(   x,   y,   alternative = c(\"two.sided\", \"greater\", \"less\"),   conf.level = 0.95 )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pearson's Correlation — rowPearsonCor","text":"x matrix data.frame. y numeric vector data values. Must length ncol(x). alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pearson's Correlation — rowPearsonCor","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonCor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pearson's Correlation — rowPearsonCor","text":"wrapper row_cor_pearson function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonCor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pearson's Correlation — rowPearsonCor","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowPearsonCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pearson's Correlation — rowPearsonCor","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) y = rnorm(20)  #Compute rowPearsonCor(x = x, y = y) #> $statistic #>   [1] -1.562687801  0.858321163  0.637163042  0.128135983 -0.862080975 #>   [6]  0.598241121  1.212132923  0.069343265  0.456858601 -1.898899711 #>  [11]  0.184459567 -0.339190941 -3.007207334  0.336614733  0.617155315 #>  [16] -2.481769120 -0.861755878  0.455952916 -0.949161902 -1.068207821 #>  [21] -1.907514254  0.108342487  0.853011464  0.394641243 -0.975175694 #>  [26]  0.864453082 -0.276135713  0.397042009  0.135430056 -0.462988385 #>  [31] -0.361123747  1.461778755 -0.511219918 -1.082653209  0.004997978 #>  [36]  0.479980846 -0.828477145  1.318518418 -1.782204536 -0.998935926 #>  [41]  0.811267590  0.778846860  0.063646496  0.807429722 -0.287617366 #>  [46]  0.229086538 -0.614220396  0.407021288  0.548241677  1.311804083 #>  [51]  1.083779739 -1.889587922  0.546321065  0.100801842  0.101202574 #>  [56] -2.561201443  1.583823429 -0.730766741 -1.048014217 -0.319427625 #>  [61]  0.579442956  0.862395912  1.496058535 -0.397273649 -0.474920610 #>  [66] -0.235018504  0.728067837 -0.876637740  0.034058214  0.550229079 #>  [71]  2.323603386 -1.613238444 -1.424067416 -0.119842224  0.400028195 #>  [76] -0.809365837  0.194148780  0.353125443 -0.662352249 -0.767740894 #>  [81] -0.007011127 -2.543693293  0.726090012  0.420845627 -0.732734821 #>  [86]  0.724719987 -1.240322324 -2.395388623  0.245192102  0.731896295 #>  [91]  1.163954688 -0.976294907  1.556730531  1.753549523 -1.007125364 #>  [96] -0.408247435 -0.468959552 -0.592881300 -1.119771117 -1.314586148 #>  #> $significance #>   [1] 0.135536058 0.402000439 0.532039815 0.899462121 0.399982690 0.557132482 #>   [7] 0.241132739 0.945480943 0.653237919 0.073727039 0.855715230 0.738391072 #>  [13] 0.007565871 0.740300062 0.544860776 0.023168646 0.400156896 0.653876795 #>  [19] 0.355108974 0.299544083 0.072539393 0.914922608 0.404861217 0.697744610 #>  [25] 0.342397511 0.398713075 0.785589293 0.696004803 0.893774879 0.648921201 #>  [31] 0.722210668 0.161041167 0.615410709 0.293253139 0.996067183 0.637021871 #>  [37] 0.418250745 0.203861755 0.091592575 0.331066169 0.427809764 0.446188963 #>  [43] 0.949953191 0.429960192 0.776924829 0.821384399 0.546755396 0.688791618 #>  [49] 0.590261338 0.206071641 0.292766609 0.075030171 0.591553341 0.920822078 #>  [55] 0.920508440 0.019634212 0.130645338 0.474327179 0.308501179 0.753079743 #>  [61] 0.569472138 0.399813976 0.151966290 0.695837027 0.640554996 0.816847228 #>  [67] 0.475937508 0.392233089 0.973205569 0.588925893 0.032056824 0.124086665 #>  [73] 0.171532459 0.905935620 0.693843169 0.428874501 0.848233670 0.728096097 #>  [79] 0.516137234 0.452595599 0.994483097 0.020366462 0.477119661 0.678849812 #>  [85] 0.473154954 0.477939550 0.230781390 0.027687610 0.809081343 0.473654184 #>  [91] 0.259639152 0.341857780 0.136941960 0.096519592 0.327222224 0.687907437 #>  [97] 0.644728453 0.560636387 0.277531110 0.205153701 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowSamStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Significance Analysis of Microarrays — rowSamStatistics","title":"Significance Analysis of Microarrays — rowSamStatistics","text":"function implements common workflow compute repeated permutations input data determine features significantly related response. following steps executed: correlate feature outcome variable: samr compute thresholds, cutpoints, false discovery rates SAM analysis: samr.compute.delta.table compute SAM statistics significance: samr.compute.siggenes.table","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSamStatistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Significance Analysis of Microarrays — rowSamStatistics","text":"","code":"rowSamStatistics(   x,   y = NULL,   observations = NULL,   technology = c(\"array\", \"seq\"),   geneid = NULL,   genenames = NULL,   censoring.status = NULL,   logged2 = FALSE,   eigengene.number = 1,   resp.type = c(\"Quantitative\", \"Two class unpaired\", \"Survival\", \"Multiclass\",     \"One class\", \"Two class paired\", \"Two class unpaired timecourse\",     \"One class timecourse\", \"Two class paired timecourse\", \"Pattern discovery\"),   s0 = NULL,   s0.perc = NULL,   nperms = 100,   center.arrays = FALSE,   testStatistic = c(\"standard\", \"wilcoxon\"),   time.summary.type = c(\"slope\", \"signed.area\"),   regression.method = c(\"standard\", \"ranks\"),   knn.neighbors = 10,   random.seed = NULL,   nresamp = 20,   nresamp.perm = NULL,   dels = NULL,   nvals = 50,   fdr.output = 0.2,   logger = NULL )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowSamStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Significance Analysis of Microarrays — rowSamStatistics","text":"x Feature matrix: p (number features) n (number samples), one observation per column (missing values allowed) y n-vector outcome measurements observations (optional) integer vector, indices observations keep. technology character string, technology used generate data. Available options : array data generated microarray technology seq data generated RNA-seq technology geneid Optional character vector geneids output. genenames Optional character vector genenames output. censoring.status n-vector censoring censoring.status (1= died event occurred, 0=survived, event censored), needed censored survival outcome logged2 data transformed log (base 2)? information used  computing fold changes eigengene.number Eigengene used  (just resp.type=\"Pattern discovery\") resp.type Problem type: \"Quantitative\" continuous parameter (Available array sequencing data); \"Two class unpaired\" (array sequencing data);  \"Survival\" censored survival outcome (array sequencing data);  \"Multiclass\": 2 groups (array sequencing data);   \"One class\" single group (array data);  \"Two class paired\" two classes paired observations (array sequencing data); \"Two class unpaired timecourse\" (array data),  \"One class time course\" (array data), \"Two class.paired timecourse\" (array data), \"Pattern discovery\" (array data) s0 Exchangeability factor  denominator test statistic; Default automatic choice. used array data. s0.perc Percentile standard  deviation values use s0; default automatic choice; -1 means s0=0 (different s0.perc=0, meaning s0=zeroeth percentile  standard  deviation values= min sd values. used array data. nperms Number permutations used estimate false discovery rates center.arrays data sample (array) median centered outset? Default =FALSE. used array data. testStatistic Test statistic use two class unpaired case.Either \"standard\" (t-statistic) ,\"wilcoxon\" (Two-sample wilcoxon Mann-Whitney test). used array data. time.summary.type Summary measure time course: \"slope\", \"signed.area\"). used array data. regression.method Regression method quantitative case: \"standard\", (linear least squares) \"ranks\" (linear least squares  ranked data). used array data. knn.neighbors Number nearest neighbors use imputation missing features values. used array data. random.seed Optional initial seed random number generator (integer) nresamp assay.type=\"seq\", number resamples used construct test statistic. Default 20. used sequencing data. nresamp.perm assay.type=\"seq\", number resamples used construct test statistic permutations. Default equal nresamp must nresamp. used sequencing data. dels vector delta values used.  Delta vertical distance 45 degree line upper lower parallel lines define SAM threshold rule. default, array data, 50 values chosen relevant operating change delta. sequencing data, maximum number effective delta values chosen automatically according data. nvals Number delta values used.  array data, default value 50. sequencing data, value chosen automatically. fdr.output (Approximate) False Discovery Rate cutoff output significant genes table logger Logger object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSamStatistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Significance Analysis of Microarrays — rowSamStatistics","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, q-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSamStatistics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Significance Analysis of Microarrays — rowSamStatistics","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSamStatistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Significance Analysis of Microarrays — rowSamStatistics","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 10 nc = 20  #Data x = matrix(  data = stats::rnorm(n = nr*nc),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Categorical output vector (binomial) y = c(rep(1,nc/2), rep(2,nc/2)) names(y) = paste0(\"S\",seq(nc)) rowSamStatistics(x=x,y=y) #> $statistic #>  [1] -0.181  0.234 -0.021  0.747  0.415  1.120 -0.020  0.482  0.070  0.600 #>  #> $significance #>  [1] 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 #>   #Categorical output vector (multinomial) y = c(rep(1,nc/4), rep(2,nc/4), rep(3,nc/2)) names(y) = paste0(\"S\",seq(nc)) rowSamStatistics(x=x, y=y, resp.type = \"Multiclass\") #> $statistic #>  [1] 0.500 0.219 0.048 0.345 0.194 0.778 0.089 0.286 0.272 0.271 #>  #> $significance #>  [1] 0.6 0.6 0.6 0.6 0.6 0.0 0.6 0.6 0.6 0.6 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowSpearmanCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Spearman's Correlation — rowSpearmanCor","title":"Spearman's Correlation — rowSpearmanCor","text":"function computes Spearman's correlation row vector x. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSpearmanCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spearman's Correlation — rowSpearmanCor","text":"","code":"rowSpearmanCor(   x,   y,   alternative = c(\"two.sided\", \"greater\", \"less\"),   conf.level = 0.95,   ... )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowSpearmanCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spearman's Correlation — rowSpearmanCor","text":"x matrix data.frame. y numeric vector data values. Must length ncol(x). alternative character string indicating alternative hypothesis row x. must one \"two.sided\" (default), \"greater\" \"less\". conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA. ... arguments cor.test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSpearmanCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spearman's Correlation — rowSpearmanCor","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSpearmanCor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spearman's Correlation — rowSpearmanCor","text":"wrapper cor.test function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSpearmanCor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spearman's Correlation — rowSpearmanCor","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowSpearmanCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spearman's Correlation — rowSpearmanCor","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) y = rnorm(20)  #Compute rowSpearmanCor(x = x, y = y) #> $statistic #>   [1] 1550 1002 1048 1334 1772 1064  836 1384 1482 1944 1042 1398 2118 1072 1044 #>  [16] 2020 1650 1192 1708 1672 1962 1156 1044 1218 1720 1172 1440 1392 1218 1324 #>  [31] 1388  998 1818 1614 1102 1260 1478 1048 1782 1562 1254 1374 1496 1192 1428 #>  [46] 1278 1586 1304 1400  906 1352 1976  856 1278 1324 1656  932 1392 1700 1338 #>  [61] 1080 1006  864 1288 1380 1448 1192 1546 1016 1178  738 1442 1624 1202 1298 #>  [76] 1550 1148 1374 1172 1644 1100 2086  990 1218 1374 1106 1884 1986 1184  818 #>  [91]  818 1614  854  932 1798 1300 1526 1404 1664 1754 #>  #> $significance #>   [1] 0.484202379 0.293205108 0.367829058 0.992391679 0.152315540 0.396168703 #>   [7] 0.107575160 0.866179629 0.630454425 0.041987538 0.357515292 0.831278236 #>  [13] 0.006888333 0.410789108 0.360934072 0.020559898 0.305443868 0.662617486 #>  [19] 0.223791737 0.272540640 0.035780800 0.581232598 0.360934072 0.723888577 #>  [25] 0.208932277 0.616864796 0.728677101 0.846201667 0.723888577 0.987319786 #>  [31] 0.856179824 0.287203118 0.112171039 0.364372006 0.468215881 0.826316171 #>  [37] 0.639580201 0.367829058 0.142825467 0.460326820 0.811469747 0.891264115 #>  [43] 0.598935898 0.662617486 0.757611736 0.871187188 0.414490572 0.936659068 #>  [49] 0.826316171 0.170512887 0.946778134 0.031475535 0.123454784 0.871187188 #>  [55] 0.987319786 0.296235458 0.199406427 0.846201667 0.234081771 0.982248374 #>  [61] 0.425705285 0.299285372 0.130262923 0.896294086 0.876199602 0.709584427 #>  [67] 0.662617486 0.492298434 0.314828152 0.630454425 0.050690771 0.723888577 #>  [73] 0.347374223 0.685958524 0.921498955 0.484202379 0.563763030 0.891264115 #>  [79] 0.616864796 0.314828152 0.464262599 0.010089051 0.275434002 0.723888577 #>  [85] 0.891264115 0.476174627 0.068967376 0.028661115 0.644162476 0.094622879 #>  [91] 0.094622879 0.364372006 0.121794087 0.199406427 0.128535931 0.926549607 #>  [97] 0.533776867 0.816411747 0.284231482 0.170512887 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleT.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-sample t-Test — rowTwoSampleT","title":"Two-sample t-Test — rowTwoSampleT","text":"Computes two-sample t-Test feature. internally calls functions thematrixTests package various tests.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-sample t-Test — rowTwoSampleT","text":"","code":"rowTwoSampleT(   x,   g,   null = 0,   alternative = c(\"two.sided\", \"greater\", \"less\"),   conf.level = 0.95,   var = c(\"unequal\", \"equal\"),   paired = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-sample t-Test — rowTwoSampleT","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. null numerical value numeric vector length nrow(x). true values difference means two groups observations row. alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA. var character string indicating whether treat two variances unequal (default) equal. var = \"unequal\", Welch approximation degrees freedom used. paired logical, whether compute paired t-test.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-sample t-Test — rowTwoSampleT","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Two-sample t-Test — rowTwoSampleT","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-sample t-Test — rowTwoSampleT","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = c(rep(0,10),rep(1,10))  #Compute two-sample t-test rowTwoSampleT(x = x, g = g, var = \"equal\") #> $statistic #>   [1]  0.102676176 -1.255674441  1.009402036 -1.237770832  3.251202948 #>   [6]  0.586284859  0.520225291 -0.141475320 -0.948511498  0.674698017 #>  [11] -1.022351747 -2.496378631 -0.655968326 -1.575800588  1.057233097 #>  [16] -0.530750639  0.409757861 -1.607537177  0.279997032  0.128966494 #>  [21] -0.287075784  2.994178224 -2.203390428 -0.871274583 -0.334204444 #>  [26]  0.409025903  0.566782238 -0.638101641 -1.184092693 -1.679836826 #>  [31] -0.721286836  3.615202539  1.802000892 -0.196559583 -1.137994612 #>  [36]  1.077868675 -0.314362822 -0.799890234 -0.656369393 -1.253169140 #>  [41] -0.005552096 -0.279588844 -1.374669767  0.400438416  1.088915724 #>  [46] -0.548711279  1.958619444  1.092793480  1.331147893  3.312522804 #>  [51]  2.301033016  1.083756592 -1.537450818  0.887750585  1.350977367 #>  [56] -2.897789078  0.274498666  0.143336030  1.613243068 -1.563316698 #>  [61]  0.667419180 -2.875775296  0.564010203  0.057365908 -0.199990851 #>  [66] -1.403634965 -1.003047155 -1.000690073 -1.196339943 -0.184978275 #>  [71] -0.083562698 -1.919106312 -0.378104381 -0.241135913 -0.351667434 #>  [76] -2.058370404 -0.039747824  1.738751100 -0.285289949  0.855519118 #>  [81] -0.598599076 -0.894315159  0.110935680 -0.336404112  0.785460995 #>  [86] -0.579353773  1.393753778 -0.044333375  0.318441009 -1.209110014 #>  [91]  1.065621129  2.374783231 -1.090742397  0.988782525  1.463761477 #>  [96]  0.574539802 -0.839251626 -1.416406351  1.119889351 -1.858972037 #>  #> $significance #>   [1] 0.919355225 0.225289846 0.326159210 0.231703997 0.004433645 0.564964558 #>   [7] 0.609246253 0.889065817 0.355430883 0.508441700 0.320159127 0.022476540 #>  [13] 0.520142129 0.132484045 0.304388448 0.602079323 0.686818897 0.125335676 #>  [19] 0.782672122 0.898814276 0.777332860 0.007783309 0.040831705 0.395076719 #>  [25] 0.742087679 0.687346319 0.577862105 0.531442454 0.251777489 0.110261665 #>  [31] 0.479997783 0.001979117 0.088318073 0.846374432 0.270043886 0.295326063 #>  [37] 0.756859983 0.434204498 0.519890012 0.226179035 0.995631162 0.782980346 #>  [43] 0.186106877 0.693546429 0.290555909 0.589945650 0.065837082 0.288894885 #>  [49] 0.199755766 0.003872737 0.033557907 0.292776600 0.141575790 0.386383871 #>  [55] 0.193441522 0.009591080 0.786827048 0.887617230 0.124085657 0.135388348 #>  [61] 0.512970932 0.010057629 0.579707462 0.954885744 0.843729805 0.177444738 #>  [67] 0.329132501 0.330240154 0.247085125 0.855314345 0.934326441 0.070968065 #>  [73] 0.709775111 0.812175187 0.729170841 0.054330083 0.968731723 0.099152986 #>  [79] 0.778678790 0.403508491 0.556898887 0.382955899 0.912894965 0.740456211 #>  [85] 0.442400255 0.569531017 0.180362442 0.965126789 0.753815627 0.242263524 #>  [91] 0.300680824 0.028881256 0.289772593 0.335875804 0.160504432 0.572713854 #>  [97] 0.412336066 0.173730243 0.277482043 0.079459503 #>   #Compute two-sample t-test with Welch approximation rowTwoSampleT(x = x, g = g) #> $statistic #>   [1]  0.102676176 -1.255674441  1.009402036 -1.237770832  3.251202948 #>   [6]  0.586284859  0.520225291 -0.141475320 -0.948511498  0.674698017 #>  [11] -1.022351747 -2.496378631 -0.655968326 -1.575800588  1.057233097 #>  [16] -0.530750639  0.409757861 -1.607537177  0.279997032  0.128966494 #>  [21] -0.287075784  2.994178224 -2.203390428 -0.871274583 -0.334204444 #>  [26]  0.409025903  0.566782238 -0.638101641 -1.184092693 -1.679836826 #>  [31] -0.721286836  3.615202539  1.802000892 -0.196559583 -1.137994612 #>  [36]  1.077868675 -0.314362822 -0.799890234 -0.656369393 -1.253169140 #>  [41] -0.005552096 -0.279588844 -1.374669767  0.400438416  1.088915724 #>  [46] -0.548711279  1.958619444  1.092793480  1.331147893  3.312522804 #>  [51]  2.301033016  1.083756592 -1.537450818  0.887750585  1.350977367 #>  [56] -2.897789078  0.274498666  0.143336030  1.613243068 -1.563316698 #>  [61]  0.667419180 -2.875775296  0.564010203  0.057365908 -0.199990851 #>  [66] -1.403634965 -1.003047155 -1.000690073 -1.196339943 -0.184978275 #>  [71] -0.083562698 -1.919106312 -0.378104381 -0.241135913 -0.351667434 #>  [76] -2.058370404 -0.039747824  1.738751100 -0.285289949  0.855519118 #>  [81] -0.598599076 -0.894315159  0.110935680 -0.336404112  0.785460995 #>  [86] -0.579353773  1.393753778 -0.044333375  0.318441009 -1.209110014 #>  [91]  1.065621129  2.374783231 -1.090742397  0.988782525  1.463761477 #>  [96]  0.574539802 -0.839251626 -1.416406351  1.119889351 -1.858972037 #>  #> $significance #>   [1] 0.919355565 0.225498303 0.327926982 0.231704014 0.004433713 0.565744962 #>   [7] 0.609371656 0.889073643 0.356900302 0.508976873 0.323487234 0.023097064 #>  [13] 0.521593493 0.132936995 0.312570107 0.602766300 0.687936658 0.125347359 #>  [19] 0.782785601 0.898943920 0.777342794 0.007790077 0.040859008 0.395393049 #>  [25] 0.742424572 0.687398493 0.580358313 0.531442474 0.258087520 0.110322655 #>  [31] 0.480034043 0.002805636 0.089170201 0.846517832 0.270634228 0.295782644 #>  [37] 0.756969288 0.434351225 0.520192629 0.226179284 0.995631781 0.783016396 #>  [43] 0.186139782 0.693717434 0.294759989 0.590424914 0.067481757 0.290641896 #>  [49] 0.208323530 0.003873903 0.034777790 0.292794911 0.141589501 0.386812811 #>  [55] 0.193449744 0.012225435 0.786957165 0.887722484 0.124105028 0.142943388 #>  [61] 0.512989334 0.010446752 0.579972511 0.954937027 0.844245059 0.177492964 #>  [67] 0.329215192 0.330461027 0.248591623 0.855396423 0.934435822 0.071772789 #>  [73] 0.709860021 0.812775539 0.729180470 0.054588769 0.968847134 0.099205344 #>  [79] 0.778712892 0.403566434 0.556899611 0.383009711 0.913604691 0.740810191 #>  [85] 0.444296395 0.569579666 0.181500232 0.965132689 0.753855932 0.250390848 #>  [91] 0.302559049 0.029224795 0.292843365 0.336112398 0.160515295 0.572784792 #>  [97] 0.414641418 0.174739914 0.277710893 0.080399378 #>   #Compute two-sample paired t-test rowTwoSampleT(x = x, g = g, paired = TRUE) #> $statistic #>   [1]  0.105846642 -1.226066457  0.933934421 -1.188231761  3.464396651 #>   [6]  0.842077479  1.144499292 -0.173302153 -0.806080402  0.558394598 #>  [11] -0.985378713 -2.713690594 -0.653815335 -1.654687005  1.031975003 #>  [16] -0.494881934  0.449574782 -1.803658453  0.215272438  0.139165914 #>  [21] -0.356861393  3.426546800 -2.032570216 -1.047425674 -0.579835348 #>  [26]  0.616875137  0.575104052 -0.477912629 -1.320900894 -1.919637167 #>  [31] -0.704886562  4.363388296  2.098441892 -0.314608823 -1.731951723 #>  [36]  1.018514762 -0.296800214 -0.915867468 -1.483291946 -0.999254476 #>  [41] -0.005859077 -0.279279608 -1.187075604  0.344343077  0.938509422 #>  [46] -0.529167965  1.942391536  1.240516329  1.168882007  3.679833178 #>  [51]  2.225412187  1.375351762 -1.325044174  0.874555960  1.228400760 #>  [56] -2.935832351  0.290564498  0.135850613  1.497595462 -1.522978283 #>  [61]  0.894265416 -2.442443525  0.430641608  0.057264512 -0.179048797 #>  [66] -1.399424743 -0.858911640 -2.472199259 -1.161983005 -0.187989620 #>  [71] -0.093156228 -2.679082345 -0.308042742 -0.236298424 -0.358293729 #>  [76] -1.906006842 -0.039285775  1.956415638 -0.237303229  1.009791671 #>  [81] -0.706780344 -0.920758455  0.113955442 -0.274247407  0.648897152 #>  [86] -0.502341383  1.162301553 -0.050237610  0.285373393 -1.281896029 #>  [91]  1.014856566  2.065955751 -0.986794564  1.038803611  1.457049907 #>  [96]  0.800263487 -0.790084646 -1.367524716  1.205469111 -1.789471257 #>  #> $significance #>   [1] 0.918025662 0.251285313 0.374715471 0.265150997 0.007111320 0.421556589 #>   [7] 0.281941054 0.866248992 0.440974411 0.590194360 0.350185799 0.023852928 #>  [13] 0.529579909 0.132373864 0.329017211 0.632539543 0.663648866 0.104782066 #>  [19] 0.834354129 0.892383391 0.729419519 0.007549351 0.072632160 0.322216585 #>  [25] 0.576251176 0.552600390 0.579312274 0.644106442 0.219132110 0.087107106 #>  [31] 0.498715006 0.001814482 0.065283135 0.760229868 0.117325052 0.335030238 #>  [37] 0.773354682 0.383620146 0.172147130 0.343778169 0.995452976 0.786341966 #>  [43] 0.265584277 0.738497450 0.372484537 0.609490560 0.083986374 0.246148506 #>  [49] 0.272477973 0.005076784 0.053092953 0.202284235 0.217809707 0.404548850 #>  [55] 0.250449590 0.016598828 0.777968661 0.894929437 0.168463117 0.162096094 #>  [61] 0.394465405 0.037215173 0.676858202 0.955585711 0.861865313 0.195195361 #>  [67] 0.412680398 0.035442158 0.275129352 0.855055017 0.927820245 0.025243991 #>  [73] 0.765059856 0.818491190 0.728383631 0.089028641 0.969520207 0.082116053 #>  [79] 0.817735236 0.338971204 0.497592376 0.381194616 0.911774743 0.790085272 #>  [85] 0.532611568 0.627487859 0.275006476 0.961030320 0.781816739 0.231914966 #>  [91] 0.336678726 0.068813325 0.349527929 0.325998229 0.179089885 0.444167975 #>  [97] 0.449793471 0.204636031 0.258758723 0.107160561 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleWilcoxonT.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Sample Wilcoxon Rank Sum and Signed Rank Tests — rowTwoSampleWilcoxonT","title":"Two-Sample Wilcoxon Rank Sum and Signed Rank Tests — rowTwoSampleWilcoxonT","text":"Computes two-sample Wilcoxon test feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleWilcoxonT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Sample Wilcoxon Rank Sum and Signed Rank Tests — rowTwoSampleWilcoxonT","text":"","code":"rowTwoSampleWilcoxonT(   x,   g,   alternative = c(\"two.sided\", \"greater\", \"less\"),   paired = FALSE,   null = 0,   exact = NA,   correct = TRUE )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleWilcoxonT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Sample Wilcoxon Rank Sum and Signed Rank Tests — rowTwoSampleWilcoxonT","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". paired logical, whether compute paired Wilcoxon test. null numerical value numeric vector length nrow(x). true values difference means two groups observations row. exact logical NA (default) indicator whether exact p-value computed (see Details). single value logical vector values observation. correct logical indicator whether continuity correction applied cases p-values obtained using normal approximation. single value logical vector values observation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleWilcoxonT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-Sample Wilcoxon Rank Sum and Signed Rank Tests — rowTwoSampleWilcoxonT","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleWilcoxonT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-Sample Wilcoxon Rank Sum and Signed Rank Tests — rowTwoSampleWilcoxonT","text":"function internally calls row_wilcoxon_paired paired test, row_wilcoxon_twosample unpaired test.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleWilcoxonT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Two-Sample Wilcoxon Rank Sum and Signed Rank Tests — rowTwoSampleWilcoxonT","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowTwoSampleWilcoxonT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Sample Wilcoxon Rank Sum and Signed Rank Tests — rowTwoSampleWilcoxonT","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = c(rep(0,10),rep(1,10))  #Compute rowTwoSampleWilcoxonT(x = x, g = g) #> $statistic #>   [1] 48 35 64 35 85 59 57 51 41 59 38 22 36 33 80 42 55 29 53 47 42 81 16 35 48 #>  [26] 61 58 41 36 24 39 92 69 45 34 68 43 43 41 38 53 44 35 60 61 40 76 66 66 85 #>  [51] 79 64 30 63 63 19 53 47 70 32 60 18 59 52 52 35 36 37 35 49 52 22 44 46 45 #>  [76] 25 51 72 44 57 46 39 51 41 57 40 67 50 55 27 66 81 40 61 69 56 39 32 63 29 #>  #> $significance #>   [1] 0.9117971811 0.2798610059 0.3149992422 0.2798610059 0.0068414558 #>   [6] 0.5288488601 0.6305289138 0.9705124597 0.5288488601 0.5288488601 #>  [11] 0.3930481283 0.0354629890 0.3149992422 0.2175626231 0.0232306393 #>  [16] 0.5787416917 0.7393643508 0.1230054775 0.8534283054 0.8534283054 #>  [21] 0.5787416917 0.0185433761 0.0089306978 0.2798610059 0.9117971811 #>  [26] 0.4358721774 0.5787416917 0.5288488601 0.3149992422 0.0524259023 #>  [31] 0.4358721774 0.0007252809 0.1654939488 0.7393643508 0.2474506917 #>  [36] 0.1903158761 0.6305289138 0.6305289138 0.5288488601 0.3930481283 #>  [41] 0.8534283054 0.6842105263 0.2798610059 0.4812509472 0.4358721774 #>  [46] 0.4812509472 0.0524259023 0.2474506917 0.2474506917 0.0068414558 #>  [51] 0.0288055598 0.3149992422 0.1431401416 0.3526813744 0.3526813744 #>  [56] 0.0185433761 0.8534283054 0.8534283054 0.1431401416 0.1903158761 #>  [61] 0.4812509472 0.0146896447 0.5288488601 0.9117971811 0.9117971811 #>  [66] 0.2798610059 0.3149992422 0.3526813744 0.2798610059 0.9705124597 #>  [71] 0.9117971811 0.0354629890 0.6842105263 0.7959362619 0.7393643508 #>  [76] 0.0630128386 0.9705124597 0.1051224317 0.6842105263 0.6305289138 #>  [81] 0.7959362619 0.4358721774 0.9705124597 0.5288488601 0.6305289138 #>  [86] 0.4812509472 0.2175626231 1.0000000000 0.7393643508 0.0892095521 #>  [91] 0.2474506917 0.0185433761 0.4812509472 0.4358721774 0.1654939488 #>  [96] 0.6842105263 0.4358721774 0.1903158761 0.3526813744 0.1230054775 #>   #Compute paired rowTwoSampleWilcoxonT(x = x, g = g, paired = TRUE) #> $statistic #>   [1] 30 18 36 16 52 38 37 19 22 35 22  8 19 12 37 24 28 12 30 30 23 51  9 16 27 #>  [26] 33 31 20 18 12 20 52 43 30 12 40 21 17 14 20 27 29 17 33 29 22 44 36 39 52 #>  [51] 48 40 13 40 33  7 28 26 42 14 35  6 33 30 26 15 21  7 18 28 27  8 24 18 21 #>  [76]  8 29 44 22 36 21 18 28 23 32 19 35 30 32 16 38 44 20 35 46 37 19 15 37 11 #>  #> $significance #>   [1] 0.845703125 0.375000000 0.431640625 0.275390625 0.009765625 0.322265625 #>   [7] 0.375000000 0.431640625 0.625000000 0.492187500 0.625000000 0.048828125 #>  [13] 0.431640625 0.130859375 0.375000000 0.769531250 1.000000000 0.130859375 #>  [19] 0.845703125 0.845703125 0.695312500 0.013671875 0.064453125 0.275390625 #>  [25] 1.000000000 0.625000000 0.769531250 0.492187500 0.375000000 0.130859375 #>  [31] 0.492187500 0.009765625 0.130859375 0.845703125 0.130859375 0.232421875 #>  [37] 0.556640625 0.322265625 0.193359375 0.492187500 1.000000000 0.921875000 #>  [43] 0.322265625 0.625000000 0.921875000 0.625000000 0.105468750 0.431640625 #>  [49] 0.275390625 0.009765625 0.037109375 0.232421875 0.160156250 0.232421875 #>  [55] 0.625000000 0.037109375 1.000000000 0.921875000 0.160156250 0.193359375 #>  [61] 0.492187500 0.027343750 0.625000000 0.845703125 0.921875000 0.232421875 #>  [67] 0.556640625 0.037109375 0.375000000 1.000000000 1.000000000 0.048828125 #>  [73] 0.769531250 0.375000000 0.556640625 0.048828125 0.921875000 0.105468750 #>  [79] 0.625000000 0.431640625 0.556640625 0.375000000 1.000000000 0.695312500 #>  [85] 0.695312500 0.431640625 0.492187500 0.845703125 0.695312500 0.275390625 #>  [91] 0.322265625 0.105468750 0.492187500 0.492187500 0.064453125 0.375000000 #>  [97] 0.431640625 0.232421875 0.375000000 0.105468750 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarOneWayAnova.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an Analysis of Variance Model — rowUnequalVarOneWayAnova","title":"Fit an Analysis of Variance Model — rowUnequalVarOneWayAnova","text":"Computes one-way analysis variance test Welch correction feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarOneWayAnova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an Analysis of Variance Model — rowUnequalVarOneWayAnova","text":"","code":"rowUnequalVarOneWayAnova(x, g)"},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarOneWayAnova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an Analysis of Variance Model — rowUnequalVarOneWayAnova","text":"x numeric matrix. g vector specifying group membership observation x.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarOneWayAnova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an Analysis of Variance Model — rowUnequalVarOneWayAnova","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarOneWayAnova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an Analysis of Variance Model — rowUnequalVarOneWayAnova","text":"wrapper row_oneway_welch function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarOneWayAnova.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit an Analysis of Variance Model — rowUnequalVarOneWayAnova","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarOneWayAnova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an Analysis of Variance Model — rowUnequalVarOneWayAnova","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 30), 100, 30) g = sample(c(0,1,3), 30, replace = TRUE)  #Compute rowUnequalVarOneWayAnova(x = x, g = g) #> $statistic #>   [1] 0.27405158 3.89755787 0.15995295 0.04428048 1.21016157 3.13738429 #>   [7] 1.21132569 0.30314501 0.06536424 0.27034838 1.81854543 0.09974003 #>  [13] 0.94306636 0.25306108 0.11917790 3.49733094 0.31892021 0.64745671 #>  [19] 7.83017472 1.23149089 1.33290700 0.72626226 3.16646167 0.86935833 #>  [25] 0.32769916 1.22966668 0.63266639 0.57919345 0.55513369 1.13167953 #>  [31] 1.00383181 2.96319618 0.29120005 2.06766044 0.13624214 1.34812254 #>  [37] 1.35450883 1.65729529 0.27865841 1.02801038 0.52994833 0.96022558 #>  [43] 1.38845903 1.38640293 0.24486710 0.52216337 1.49795157 0.54106463 #>  [49] 0.30378567 2.84751364 0.30478612 0.60317983 2.12882223 0.47369717 #>  [55] 3.97067868 0.36705202 0.06088811 0.45967915 0.68580528 0.18963709 #>  [61] 0.23945692 2.65123546 0.24620342 0.36906925 6.56152951 4.32785960 #>  [67] 4.10174415 0.81806297 0.35585415 0.63503564 1.29572299 1.07245127 #>  [73] 0.83655390 0.90101120 0.60388897 0.88787726 0.48533291 0.13885067 #>  [79] 0.43276971 0.01290793 0.56822203 0.42039165 1.16871123 1.79548379 #>  [85] 0.05557961 1.14583940 1.38165665 1.75503872 0.40933621 0.50292595 #>  [91] 1.69329657 0.64663006 0.45673609 3.00077676 2.87089701 0.40512476 #>  [97] 0.49794967 0.55032820 0.64641643 0.56635595 #>  #> $significance #>   [1] 0.765128703 0.047722915 0.853794415 0.956853138 0.329712866 0.076720356 #>   [7] 0.331512766 0.744815388 0.937043445 0.768653582 0.194167642 0.905773515 #>  [13] 0.418840473 0.780352564 0.888850697 0.060274222 0.732186323 0.541627651 #>  [19] 0.004664803 0.322888503 0.300712397 0.503318477 0.075582972 0.445354809 #>  [25] 0.727352347 0.322161521 0.546065894 0.573487160 0.585264321 0.351710622 #>  [31] 0.392803244 0.083936660 0.752454768 0.164275661 0.873830459 0.294533395 #>  [37] 0.291174524 0.225156990 0.761589815 0.383819206 0.600598048 0.404953653 #>  [43] 0.288210595 0.287714027 0.785653523 0.606990532 0.256340471 0.597582418 #>  [49] 0.743519930 0.094778201 0.742080749 0.560505617 0.158571659 0.633230543 #>  [55] 0.048027809 0.700438331 0.941209960 0.642703741 0.521564098 0.829592345 #>  [61] 0.790637412 0.105154607 0.785658261 0.697571114 0.015286226 0.037990410 #>  [67] 0.039845277 0.471776077 0.708286531 0.547444428 0.305848259 0.367340056 #>  [73] 0.459273725 0.429560281 0.560665004 0.432236284 0.628445988 0.871866068 #>  [79] 0.658243511 0.987190253 0.581153373 0.665479629 0.343346405 0.201077604 #>  [85] 0.946158891 0.343571037 0.284362851 0.220449858 0.672801675 0.614531969 #>  [91] 0.216711252 0.540327826 0.644775271 0.083809447 0.087983607 0.676871533 #>  [97] 0.618947055 0.591570132 0.541766133 0.580991048 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarT.html","id":null,"dir":"Reference","previous_headings":"","what":"Welch's t-Test — rowUnequalVarT","title":"Welch's t-Test — rowUnequalVarT","text":"Computes two-sample t-test Welch modification degrees freedom feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Welch's t-Test — rowUnequalVarT","text":"","code":"rowUnequalVarT(   x,   g,   null = 0,   alternative = c(\"two.sided\", \"greater\", \"less\"),   conf.level = 0.95 )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Welch's t-Test — rowUnequalVarT","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. null numerical value numeric vector length nrow(x). true values difference means two groups observations row. alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". conf.level numerical value numeric vector length nrow(x). confidence levels intervals. values must range \\([0:1]\\) NA.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Welch's t-Test — rowUnequalVarT","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Welch's t-Test — rowUnequalVarT","text":"wrapper row_t_welch function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Welch's t-Test — rowUnequalVarT","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowUnequalVarT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Welch's t-Test — rowUnequalVarT","text":"","code":"#Seed set.seed(1010)  #Data x = cbind(  matrix(rnorm(n = 100 * 10, sd = 1), 100, 10),  matrix(rnorm(n = 100 * 10, sd = 3), 100, 10) ) g = c(rep(0,10),rep(1,10))  #Compute rowUnequalVarT(x = x, g = g) #> $statistic #>   [1]  0.263134312 -1.029449955  1.717740109 -1.862075722  2.849451734 #>   [6]  0.628629218  0.597328905 -0.054193533 -0.616273862  0.614270332 #>  [11] -1.368940322 -2.210195308 -0.158041807 -1.696998287 -0.010137004 #>  [16]  0.050601372  0.983341212 -1.736195219  0.244681344 -0.117342530 #>  [21] -0.593409736  2.281435226 -1.427332801 -0.950940298  0.253940526 #>  [26]  0.010141804  0.590563566 -0.351254872 -0.663692759 -1.759794171 #>  [31] -0.593709318  4.258853681  1.364591879 -0.631974008 -0.560214986 #>  [36]  0.478834843  0.079707865 -0.874809831 -0.601365331 -1.225177131 #>  [41] -0.117455064 -0.187031640 -0.683049945  1.193490038  1.675735416 #>  [46]  0.046976791 -0.373650544  0.706826697  0.618147746  3.660957302 #>  [51]  2.186639761  1.909278173 -1.089339272  0.845612052  1.666406561 #>  [56] -2.628458933 -0.064015792 -0.065905936  2.009695903 -1.286907248 #>  [61]  0.413865756 -2.881615722  0.517499954  0.277244642  0.287785536 #>  [66] -1.888116073 -0.506356989 -1.090557151 -1.871129916  0.355296607 #>  [71]  1.197579075 -1.473363834 -0.672670787 -0.358106918  0.101219565 #>  [76] -1.418493284 -0.001347438  2.547413648  0.092551751  0.141820055 #>  [81] -0.411653586 -1.164436591  0.317157703 -0.139225080  1.293319892 #>  [86]  0.263847760  0.291776230 -0.407956502  0.654513911 -1.567941494 #>  [91]  0.996052781  1.495408122 -0.347860564  0.421663171  1.387045411 #>  [96]  0.556359220 -0.785111897 -0.653624826  0.857648445 -1.277101712 #>  #> $significance #>   [1] 0.7973502900 0.3262372941 0.1094103218 0.0895706397 0.0158638013 #>   [6] 0.5406645496 0.5617650658 0.9577777900 0.5515218091 0.5525019737 #>  [11] 0.1919895891 0.0509774980 0.8767518489 0.1192841879 0.9921271491 #>  [16] 0.9606385888 0.3418833748 0.1102188852 0.8114835630 0.9084413388 #>  [21] 0.5651574967 0.0437305381 0.1808746535 0.3631743855 0.8036578750 #>  [26] 0.9920831431 0.5632188798 0.7320435501 0.5227836502 0.1056476452 #>  [31] 0.5644706690 0.0007071541 0.2015651881 0.5390071314 0.5872818269 #>  [36] 0.6419831710 0.9379830604 0.3995907948 0.5605391040 0.2461857679 #>  [41] 0.9085424758 0.8549138520 0.5085139600 0.2593169937 0.1145559168 #>  [46] 0.9634432216 0.7148168790 0.4958812875 0.5512879974 0.0037977453 #>  [51] 0.0482539223 0.0830321143 0.2991147088 0.4144801513 0.1236618593 #>  [56] 0.0262489416 0.9501815666 0.9487298175 0.0699916840 0.2157824056 #>  [61] 0.6868116001 0.0136840184 0.6157006187 0.7861369725 0.7776698526 #>  [66] 0.0862050101 0.6228852565 0.2997967984 0.0907206100 0.7295180656 #>  [71] 0.2526053708 0.1662776032 0.5156861348 0.7255734068 0.9211698611 #>  [76] 0.1824648135 0.9989523828 0.0267875811 0.9279833998 0.8898535332 #>  [81] 0.6885447602 0.2683354797 0.7548020276 0.8914755847 0.2172915329 #>  [86] 0.7966384843 0.7753228347 0.6914319296 0.5257376012 0.1348007948 #>  [91] 0.3372750668 0.1611905533 0.7353550536 0.6817640170 0.1927077814 #>  [96] 0.5887177238 0.4510695039 0.5278027234 0.4101611391 0.2254315425 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rowVariability.html","id":null,"dir":"Reference","previous_headings":"","what":"Variability — rowVariability","title":"Variability — rowVariability","text":"function computes measures variability.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowVariability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variability — rowVariability","text":"","code":"rowVariability(   x,   g = NULL,   method = c(\"sd\", \"iqr\", \"mad\", \"rsd\", \"efficiency\", \"vmr\") )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowVariability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variability — rowVariability","text":"x matrix data.frame, rows features columns observations. g (optional) vector factor object giving group corresponding elements x. method character string indicating measure variability. Available options : \"sd\" standard deviation \"iqr\" interquartile range \"mad\" median absolute deviation \"rsd\" relative standard deviation (.e., coefficient variation) \"efficiency\" coefficient variation squared \"vmr\" variance--mean ratio","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowVariability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variability — rowVariability","text":"vector length nrow(x) containing computed ratios. g provided, matrix ratios class column vectors returned.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowVariability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variability — rowVariability","text":"corrected sample standard deviation defined : $$ SD = \\sqrt{ \\frac{1}{N-1} \\sum_{=1}{N}(x_{} - \\bar{x})^2 } $$ \\(x\\) vector \\(N\\) elements, \\(\\bar{x}\\) mean value. interquartile range defined difference 75th 25th percentiles data: $$ IQR = Q_{3} - Q_{1})$$ median absolute deviation defined median absolute deviations mean: $$ MAD = \\median(|x_{} - \\bar{x}|)$$ relative standard variation defined ratio standard deviation mean: $$ RSD = \\frac{standard deviation}{mean} = \\frac{\\sigma}{\\mu}$$ efficiency square coefficient variation: $$ efficiency = (\\frac{standard deviation}{mean})^2 = \\frac{\\sigma^2}{\\mu^2}$$ variance--mean ratio computed ratio variance mean: $$ VMR = \\frac{variance}{mean} = \\frac{\\sigma^2}{\\mu}$$ See also following functions details: \"sd\" sd \"iqr\" iqr \"mad\" mad \"rsd\" rsd \"efficiency\" efficiency \"vmr\" vmr","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowVariability.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variability — rowVariability","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowVariability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variability — rowVariability","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  #Data x = matrix(  data = sample.int(n = 100, size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Variance-to-mean Ratio rowVariability(x = x, method = 'vmr') #>       f1       f2       f3       f4       f5  #> 15.50644 21.77472 15.59739 17.69918 12.55625   #Variance-to-mean Ratio by group rowVariability(x = x, g = g, method = 'vmr') #>            a         b #> f1  3.111675  9.123418 #> f2 29.269231 19.569767 #> f3 21.534700 11.842593 #> f4  5.087748 31.528846 #> f5  9.791391 17.806548"},{"path":"https://alebarberis.github.io/featscreen/reference/rowWilcoxonT.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilcoxon Rank-Sum Test — rowWilcoxonT","title":"Wilcoxon Rank-Sum Test — rowWilcoxonT","text":"Computes two-sample Wilcoxon test feature. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowWilcoxonT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilcoxon Rank-Sum Test — rowWilcoxonT","text":"","code":"rowWilcoxonT(   x,   g,   alternative = c(\"two.sided\", \"greater\", \"less\"),   null = 0,   exact = NA,   correct = TRUE )"},{"path":"https://alebarberis.github.io/featscreen/reference/rowWilcoxonT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilcoxon Rank-Sum Test — rowWilcoxonT","text":"x matrix data.frame. g vector factor object giving group corresponding elements x. alternative character string vector length nrow(x). alternative hypothesis row x. Values must one \"two.sided\" (default), \"greater\" \"less\". null numerical value numeric vector length nrow(x). true values difference means two groups observations row. exact logical NA (default) indicator whether exact p-value computed (see Details). single value logical vector values observation. correct logical indicator whether continuity correction applied cases p-values obtained using normal approximation. single value logical vector values observation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowWilcoxonT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilcoxon Rank-Sum Test — rowWilcoxonT","text":"list containing two elements: statistic numeric vector, values test statistic significance numeric vector, p-values selected test","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowWilcoxonT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wilcoxon Rank-Sum Test — rowWilcoxonT","text":"wrapper row_wilcoxon_twosample function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowWilcoxonT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wilcoxon Rank-Sum Test — rowWilcoxonT","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rowWilcoxonT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wilcoxon Rank-Sum Test — rowWilcoxonT","text":"","code":"#Seed set.seed(1010)  #Data x = matrix(rnorm(100 * 20), 100, 20) g = sample(c(0,1), 20, replace = TRUE)  #Compute rowWilcoxonT(x = x, g = g) #> $statistic #>   [1] 49 56 22 43 29 53 47 45 48 46 70 80 47 56 10 52 46 78 39 36 35 46 54 41 64 #>  [26] 19 43 68 52 59 54 32 31 41 50 16 43 60 36 59 47 34 52 29 17 49 46 45 27 33 #>  [51] 25 48 58 38 40 62 58 40 31 51 46 43 41 40 55 49 52 38 60 45 67 68 36 36 60 #>  [76] 49 65 30 45 35 26 78 31 45 48 59 39 51 61 47 23 38 59 50 50 49 54 38 26 48 #>  #> $significance #>   [1] 0.816795666 0.437796698 0.067492260 0.877296182 0.210603715 0.588028896 #>   [7] 0.938467492 1.000000000 0.877296182 1.000000000 0.055675955 0.004669763 #>  [13] 0.938467492 0.437796698 0.003405573 0.642647059 1.000000000 0.008462332 #>  [19] 0.642647059 0.485423117 0.437796698 1.000000000 0.535552116 0.757301342 #>  [25] 0.157430341 0.036945304 0.877296182 0.081114551 0.642647059 0.311377709 #>  [31] 0.535552116 0.311377709 0.274922601 0.757301342 0.757301342 0.018601651 #>  [37] 0.877296182 0.274922601 0.485423117 0.311377709 0.938467492 0.392879257 #>  [43] 0.642647059 0.210603715 0.023606811 0.816795666 1.000000000 1.000000000 #>  [49] 0.157430341 0.350696594 0.114628483 0.877296182 0.350696594 0.588028896 #>  [55] 0.699174407 0.210603715 0.350696594 0.699174407 0.274922601 0.699174407 #>  [61] 1.000000000 0.877296182 0.757301342 0.699174407 0.485423117 0.816795666 #>  [67] 0.642647059 0.588028896 0.274922601 1.000000000 0.096800826 0.081114551 #>  [73] 0.485423117 0.485423117 0.274922601 0.816795666 0.134803922 0.241357069 #>  [79] 1.000000000 0.437796698 0.134803922 0.008462332 0.274922601 1.000000000 #>  [85] 0.877296182 0.311377709 0.642647059 0.699174407 0.241357069 0.938467492 #>  [91] 0.081114551 0.588028896 0.311377709 0.757301342 0.757301342 0.816795666 #>  [97] 0.535552116 0.588028896 0.134803922 0.877296182 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/rsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Standard Deviation (Coefficient of Variation) — rsd","title":"Relative Standard Deviation (Coefficient of Variation) — rsd","text":"function computes coefficient variation values x. also known relative standard deviation. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Standard Deviation (Coefficient of Variation) — rsd","text":"","code":"rsd(x, g = NULL, na.rm = TRUE)"},{"path":"https://alebarberis.github.io/featscreen/reference/rsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Standard Deviation (Coefficient of Variation) — rsd","text":"x numerical vector. g (optional) vector factor object giving group corresponding elements x. na.rm logical indicating whether missing values removed computation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Standard Deviation (Coefficient of Variation) — rsd","text":"numerical value vector containing computed measure per class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rsd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative Standard Deviation (Coefficient of Variation) — rsd","text":"coefficient variation - also known Normalized Root-Mean-Square Deviation (NRMSD), Percent RMS, relative standard deviation (RSD) - measure statistical dispersion. defined ratio standard deviation mean: $$ CV = RSD = \\frac{standard deviation}{mean} = \\frac{\\sigma}{\\mu}$$ computed : $$ RSD = \\frac{ \\sqrt{\\sum_{j=1}^{n}} ({x}_{j} - \\bar{x})^2 / n }{ \\bar{x} } $$ \\(\\bar{x}\\) sample mean. x can partitioned \\(c\\) subgroups (provided g), \\(RSD\\) computed class. coefficient variation ranges \\([-\\infty, \\infty]\\). main advantage coefficient variation unitless.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rsd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relative Standard Deviation (Coefficient of Variation) — rsd","text":"Fong, Biuk-Aghai, Si, Lightweight Feature Selection Methods Based Standardized Measure Dispersion Mining Big Data, 2016 IEEE International Conference Computer Information Technology (CIT)","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rsd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Relative Standard Deviation (Coefficient of Variation) — rsd","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/rsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Standard Deviation (Coefficient of Variation) — rsd","text":"","code":"#Seed set.seed(1010)  #Define size n = 10  #Data x = sample.int(n = 100, size = n, replace = TRUE)  #Grouping variable g = c(rep(\"a\", n/2), rep(\"b\", n/2))  #Coefficient of variation rsd(x) #> [1] 0.4516223  #Coefficient of variation by group rsd(x = x, g = g) #>         a         b  #> 0.6892545 0.1924834"},{"path":"https://alebarberis.github.io/featscreen/reference/screen.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Screening — screen","title":"Feature Screening — screen","text":"function computes statistical measure feature input. case multi-response data, screening statistics combined defined \"multi\". Finally, features keep obtained via chosen selecting method indicated select.. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/screen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Screening — screen","text":"","code":"screen(   x,   y = NULL,   g = NULL,   method = c(\"cor.test\", \"pearson\", \"spearman\", \"kendall\", \"t.test\", \"t.test.equal\",     \"t.test.unequal\", \"t.test.paired\", \"w.test\", \"w.test.ranksum\", \"w.test.paired\",     \"anova\", \"anova.equal\", \"anova.unequal\", \"kruskal.wallis\", \"chisq.test\", \"coxph\",     \"moderated.t\", \"moderated.F\", \"sam.test\", \"missing.value\", \"above.median\",     \"above.minimum\", \"median\", \"variability\"),   ...,   multi = c(\"max\", \"min\", \"avg\", \"sum\", \"idx\"),   idx = NULL,   select.by = c(\"cutoff\", \"rank\", \"percentile\", \"fpr\", \"fdr\"),   select.args = NULL )"},{"path":"https://alebarberis.github.io/featscreen/reference/screen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Screening — screen","text":"x matrix data.frame, rows features columns observations. y numeric vector data values length ncol(x) data.frame two columns, time status. g (optional) vector factor object giving group corresponding elements x. method character string, one supported screening techniques. ... arguments screening function. multi character string indicating case multi-response. Available options : \"max\" maximum value across responses kept \"min\" minimum value across responses kept \"avg\" values averaged \"sum\" values summed \"idx\" return column indicated idx idx (optional) integer value character string indicating column x keep. select.character string indicating selecting method. Available options : \"cutoff\" selection cutoff \"rank\" selection ranking \"percentile\" selection top percentile \"fpr\" selection false positive rate \"fdr\" selection false discovery rate select.args (optional) named list, arguments passed selecting function.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/screen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Feature Screening — screen","text":"object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/screen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Screening — screen","text":"function uses one selected screening technique compute statistical measure feature. See following functions specific implementation: \"cor.test\" rowCor \"pearson\" rowPearsonCor \"spearman\" rowSpearmanCor \"kendall\" rowKendallCor \"t.test\" rowTwoSampleT \"t.test.equal\" rowEqualVarT \"t.test.unequal\" rowUnequalVarT \"t.test.paired\" rowPairedT \"w.test\" rowTwoSampleWilcoxonT \"w.test.ranksum\" rowWilcoxonT \"w.test.paired\" rowPairedWilcoxonT \"anova\" rowOneWayAnova \"anova.equal\" rowEqualVarOneWayAnova \"anova.unequal\" rowUnequalVarOneWayAnova \"kruskal.wallis\" rowKruskalWallis \"chisq.test\" rowPearsonChiSq \"coxph\" rowCoxPH \"moderated.t\" rowModeratedT \"moderated.F\" rowModeratedOneWayAnova \"sam.test\" rowSamStatistics \"missing.value\" rowMissingValueRatio \".median\" rowAboveMedianFreqRatio \".minimum\" rowAboveMinFreqRatio \"median\" rowMedians \"variability\" rowVariability case multi-response data, screening statistics combined using multiresponse function. Finally, features keep obtained via chosen selecting method indicated select.. See following functions specific implementation: \"cutoff\" selectByCutoff \"rank\" selectByRanking \"percentile\" selectByPercentile \"fpr\" selectByFpr \"fdr\" selectByFdr","code":""},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/reference/screen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Feature Screening — screen","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/screen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Screening — screen","text":"","code":"#Seed set.seed(1010)  #Define row/col size nr = 5 nc = 10  # Unsupervised Screening  #Data x = matrix(  data = sample(x = c(1,2), size = nr*nc, replace = TRUE),  nrow = nr,  ncol = nc,  dimnames = list(    paste0(\"f\",seq(nr)),    paste0(\"S\",seq(nc))  ) )  #Grouping variable g = c(rep(\"a\", nc/2), rep(\"b\", nc/2))  #Force 1st feature to have 40% of missing values x[1,seq(nc*0.4)] = NA  #Filter a feature if has more than 50% of missing values screen(  x = x,  method = \"missing.value\",  select.args = list(cutoff = 0.5) ) #>  #> 5 out of 5 features selected by a cutoff (< 0.5) on the missing value #> ratio. #>  #> Top 5 ranked features: f2, f3, f4, f5, f1 #>   # Supervised Screening  #Filter by two-sample t-Test (cutoff on t statistic) screen(  x = x,  g = g,  method = \"t.test\",  var = \"equal\",  select.args = list(cutoff = 0.5) ) #>  #> 4 out of 5 features selected by a cutoff (< 0.5) on the two-sample #> Student's pooled t-test. #>  #> Top 5 ranked features: f2, f5, f4, f1, f3 #>"},{"path":"https://alebarberis.github.io/featscreen/reference/sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Deviation — sd","title":"Standard Deviation — sd","text":"function computes standard deviation (SD) values x. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Deviation — sd","text":"","code":"sd(x, g = NULL, na.rm = TRUE)"},{"path":"https://alebarberis.github.io/featscreen/reference/sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Deviation — sd","text":"x numerical vector. g (optional) vector factor object giving group corresponding elements x. na.rm logical indicating whether missing values removed computation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/sd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard Deviation — sd","text":"function wrapper sd function. x can partitioned \\(c\\) subgroups (provided g), \\(SD\\) computed class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Deviation — sd","text":"","code":"#Seed set.seed(1010)  #Define size n = 10  #Data x = sample.int(n = 100, size = n, replace = TRUE)  #Grouping variable g = c(rep(\"a\", n/2), rep(\"b\", n/2))  #Standard deviation sd(x) #> [1] 28.49737  #Standard deviation by group sd(x = x, g = g) #>        a        b  #> 34.60058 14.62874"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByCutoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Select by Cutoff — selectByCutoff","title":"Select by Cutoff — selectByCutoff","text":"Select elements based cutoff values.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByCutoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select by Cutoff — selectByCutoff","text":"","code":"selectByCutoff(x, cutoff, operator = c(\"<\", \"<=\", \">\", \">=\"))"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByCutoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select by Cutoff — selectByCutoff","text":"x numerical vector. cutoff numeric value indicating cutoff. operator character string indicating relational operator use.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByCutoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select by Cutoff — selectByCutoff","text":"logical vector, indicating elements keep.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByCutoff.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select by Cutoff — selectByCutoff","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByCutoff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select by Cutoff — selectByCutoff","text":"","code":"#Seed set.seed(1010)  #Data x = seq(10) names(x) = paste0(\"f\", seq(10))  #Select selectByCutoff(x = x, cutoff = 5, operator = \"<\") #>    f1    f2    f3    f4    f5    f6    f7    f8    f9   f10  #>  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Select by False Discovery Rate — selectByFdr","title":"Select by False Discovery Rate — selectByFdr","text":"Select elements based false discovery rate. provided significance (x) corrected via Benjamini-Hochberg procedure.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select by False Discovery Rate — selectByFdr","text":"","code":"selectByFdr(x, alpha = 0.05, operator = c(\"<\", \"<=\"))"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select by False Discovery Rate — selectByFdr","text":"x numerical vector indicating p-values. alpha numerical value, upper-bound FDR. operator character string indicating relational operator use.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select by False Discovery Rate — selectByFdr","text":"logical vector, indicating elements keep.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFdr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select by False Discovery Rate — selectByFdr","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select by False Discovery Rate — selectByFdr","text":"","code":"#Seed set.seed(1010)  #Data x = seq(from = 0, to = 1, by = 0.1) names(x) = paste0(\"f\", seq(11))  #Select selectByFdr(x = x, alpha = 0.3) #>    f1    f2    f3    f4    f5    f6    f7    f8    f9   f10   f11  #>  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Select by False Positive Rate (FPR) — selectByFpr","title":"Select by False Positive Rate (FPR) — selectByFpr","text":"Select elements based false positive rate.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select by False Positive Rate (FPR) — selectByFpr","text":"","code":"selectByFpr(x, alpha = 0.05, operator = c(\"<\", \"<=\"))"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select by False Positive Rate (FPR) — selectByFpr","text":"x numerical vector indicating p-values. alpha numerical value, upper-bound FPR. operator character string indicating relational operator use.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select by False Positive Rate (FPR) — selectByFpr","text":"logical vector, indicating elements keep.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFpr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select by False Positive Rate (FPR) — selectByFpr","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByFpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select by False Positive Rate (FPR) — selectByFpr","text":"","code":"#Seed set.seed(1010)  #Data x = seq(from = 0, to = 1, by = 0.1) names(x) = paste0(\"f\", seq(11))  #Select selectByFpr(x = x, alpha = 0.3) #>    f1    f2    f3    f4    f5    f6    f7    f8    f9   f10   f11  #>  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByPercentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Select by Percentile — selectByPercentile","title":"Select by Percentile — selectByPercentile","text":"Select elements based percentile highest values.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByPercentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select by Percentile — selectByPercentile","text":"","code":"selectByPercentile(x, percentile = 0.25)"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByPercentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select by Percentile — selectByPercentile","text":"x numerical vector. percentile numerical value range \\([0, 1]\\) indicating percentage elements keep.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByPercentile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select by Percentile — selectByPercentile","text":"logical vector, indicating elements keep.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByPercentile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select by Percentile — selectByPercentile","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByPercentile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select by Percentile — selectByPercentile","text":"","code":"#Seed set.seed(1010)  #Data x = seq(10) names(x) = paste0(\"f\", seq(10))  #Select selectByPercentile(x = x, percentile = 0.25) #>    f1    f2    f3    f4    f5    f6    f7    f8    f9   f10  #> FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByRanking.html","id":null,"dir":"Reference","previous_headings":"","what":"Select by Ranking — selectByRanking","title":"Select by Ranking — selectByRanking","text":"Select elements based ranking.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByRanking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select by Ranking — selectByRanking","text":"","code":"selectByRanking(   x,   k = length(x),   method = c(\"auto\", \"shell\", \"quick\", \"radix\"),   decreasing = TRUE,   use.abs = FALSE )"},{"path":"https://alebarberis.github.io/featscreen/reference/selectByRanking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select by Ranking — selectByRanking","text":"x numerical vector. k integer value indicating number top elements keep. method character string indicating method used sorting (see sort). decreasing logical indicating whether sort decreasing order. use.abs logical indicating whether use absolute values.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByRanking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select by Ranking — selectByRanking","text":"logical vector indicating elements keep.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByRanking.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select by Ranking — selectByRanking","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/selectByRanking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select by Ranking — selectByRanking","text":"","code":"#Seed set.seed(1010)  #Data x = seq(10) names(x) = paste0(\"f\", seq(10))  #Select selectByRanking(x = x, k = 5) #>    f1    f2    f3    f4    f5    f6    f7    f8    f9   f10  #> FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE"},{"path":"https://alebarberis.github.io/featscreen/reference/snr.html","id":null,"dir":"Reference","previous_headings":"","what":"Signal-to-noise Ratio — snr","title":"Signal-to-noise Ratio — snr","text":"function computes signal--noise ratio values x. reciprocal coefficient variation. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/snr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signal-to-noise Ratio — snr","text":"","code":"snr(x, g = NULL, na.rm = TRUE)"},{"path":"https://alebarberis.github.io/featscreen/reference/snr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signal-to-noise Ratio — snr","text":"x numerical vector. g (optional) vector factor object giving group corresponding elements x. na.rm logical indicating whether missing values removed computation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/snr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signal-to-noise Ratio — snr","text":"numerical value vector containing computed measure per class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/snr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Signal-to-noise Ratio — snr","text":"signal--noise ratio defined ratio mean standard deviation: $$ SNR = \\frac{mean}{standard deviation} = \\frac{\\mu}{\\sigma} $$ x can partitioned \\(c\\) subgroups (provided g), \\(SNR\\) computed class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/snr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Signal-to-noise Ratio — snr","text":"https://en.wikipedia.org/wiki/Coefficient_of_variation","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/snr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Signal-to-noise Ratio — snr","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/snr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signal-to-noise Ratio — snr","text":"","code":"#Seed set.seed(1010)  #Define size n = 10  #Data x = sample.int(n = 100, size = n, replace = TRUE)  #Grouping variable g = c(rep(\"a\", n/2), rep(\"b\", n/2))  #Signal-to-noise ratio snr(x) #> [1] 2.21424  #Signal-to-noise ratio by group snr(x = x, g = g) #>        a        b  #> 1.450843 5.195253"},{"path":"https://alebarberis.github.io/featscreen/reference/validateFeatscreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Validator of featscreen Objects — validateFeatscreen","title":"Validator of featscreen Objects — validateFeatscreen","text":"validator featscreen objects.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/validateFeatscreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validator of featscreen Objects — validateFeatscreen","text":"","code":"validateFeatscreen(x)"},{"path":"https://alebarberis.github.io/featscreen/reference/validateFeatscreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validator of featscreen Objects — validateFeatscreen","text":"x featscreen object.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/validateFeatscreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validator of featscreen Objects — validateFeatscreen","text":"object class featscreen.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/validateFeatscreen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Validator of featscreen Objects — validateFeatscreen","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/validateFeatscreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validator of featscreen Objects — validateFeatscreen","text":"","code":"if (FALSE) { #No error is raised validateFeatscreen(newFeatscreen())  #An error is raised validateFeatscreen( newFeatscreen(  method = 'cor.test',  n = 3,  keep = c(1, 3) ) ) }"},{"path":"https://alebarberis.github.io/featscreen/reference/vmr.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-to-mean Ratio — vmr","title":"Variance-to-mean Ratio — vmr","text":"function computes variance--mean ratio. See Details section information.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/vmr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance-to-mean Ratio — vmr","text":"","code":"vmr(x, g = NULL, na.rm = TRUE)"},{"path":"https://alebarberis.github.io/featscreen/reference/vmr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance-to-mean Ratio — vmr","text":"x numerical vector. g (optional) vector factor object giving group corresponding elements x. na.rm logical indicating whether missing values removed computation.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/vmr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance-to-mean Ratio — vmr","text":"numerical value vector containing computed measure per class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/vmr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variance-to-mean Ratio — vmr","text":"variance--mean ratio (also known index dispersion) measure dispersion. computed : $$ VMR = \\frac{variance}{mean} = \\frac{\\sigma^2}{\\mu}$$ x can partitioned \\(c\\) subgroups (provided g), \\(VMR\\) computed class.","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/vmr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variance-to-mean Ratio — vmr","text":"https://en.wikipedia.org/wiki/Index_of_dispersion","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/vmr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variance-to-mean Ratio — vmr","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/featscreen/reference/vmr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance-to-mean Ratio — vmr","text":"","code":"#Seed set.seed(1010)  #Define size n = 10  #Data x = sample.int(n = 100, size = n, replace = TRUE)  #Grouping variable g = c(rep(\"a\", n/2), rep(\"b\", n/2))  #Variance-to-mean ratio vmr(x) #> [1] 12.87005  #Variance-to-mean ratio by group vmr(x = x, g = g) #>         a         b  #> 23.848606  2.815789"},{"path":[]},{"path":"https://alebarberis.github.io/featscreen/news/index.html","id":"changes-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Changes","title":"featscreen 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
